// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXIvideo2Mat44.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXIvideo2Mat44::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXIvideo2Mat44::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> AXIvideo2Mat44::ap_ST_fsm_state1 = "1";
const sc_lv<8> AXIvideo2Mat44::ap_ST_fsm_state2 = "10";
const sc_lv<8> AXIvideo2Mat44::ap_ST_fsm_state3 = "100";
const sc_lv<8> AXIvideo2Mat44::ap_ST_fsm_state4 = "1000";
const sc_lv<8> AXIvideo2Mat44::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<8> AXIvideo2Mat44::ap_ST_fsm_state7 = "100000";
const sc_lv<8> AXIvideo2Mat44::ap_ST_fsm_pp2_stage0 = "1000000";
const sc_lv<8> AXIvideo2Mat44::ap_ST_fsm_state10 = "10000000";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> AXIvideo2Mat44::ap_const_lv1_1 = "1";
const bool AXIvideo2Mat44::ap_const_boolean_1 = true;
const sc_lv<1> AXIvideo2Mat44::ap_const_lv1_0 = "0";
const sc_lv<2> AXIvideo2Mat44::ap_const_lv2_0 = "00";
const sc_lv<2> AXIvideo2Mat44::ap_const_lv2_2 = "10";
const sc_lv<2> AXIvideo2Mat44::ap_const_lv2_3 = "11";
const sc_lv<2> AXIvideo2Mat44::ap_const_lv2_1 = "1";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_1 = "1";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_4 = "100";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_6 = "110";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_3 = "11";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_5 = "101";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_7 = "111";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_2 = "10";
const sc_lv<11> AXIvideo2Mat44::ap_const_lv11_0 = "00000000000";
const sc_lv<11> AXIvideo2Mat44::ap_const_lv11_1 = "1";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_8 = "1000";
const sc_lv<32> AXIvideo2Mat44::ap_const_lv32_F = "1111";

AXIvideo2Mat44::AXIvideo2Mat44(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_XR0C0_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR0C0_channel_full_n );

    SC_METHOD(thread_C_XR0C0_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR0C0 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR0C0_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR0C1_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR0C1_channel_full_n );

    SC_METHOD(thread_C_XR0C1_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR0C1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR0C1_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR0C2_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR0C2_channel_full_n );

    SC_METHOD(thread_C_XR0C2_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR0C2 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR0C2_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR1C0_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR1C0_channel_full_n );

    SC_METHOD(thread_C_XR1C0_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR1C0 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR1C0_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR1C1_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR1C1_channel_full_n );

    SC_METHOD(thread_C_XR1C1_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR1C1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR1C1_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR1C2_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR1C2_channel_full_n );

    SC_METHOD(thread_C_XR1C2_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR1C2 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR1C2_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR2C0_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR2C0_channel_full_n );

    SC_METHOD(thread_C_XR2C0_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR2C0 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR2C0_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR2C1_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR2C1_channel_full_n );

    SC_METHOD(thread_C_XR2C1_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR2C1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR2C1_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR2C2_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR2C2_channel_full_n );

    SC_METHOD(thread_C_XR2C2_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_XR2C2 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_XR2C2_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR0C0_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR0C0_channel_full_n );

    SC_METHOD(thread_C_YR0C0_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR0C0 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR0C0_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR0C1_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR0C1_channel_full_n );

    SC_METHOD(thread_C_YR0C1_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR0C1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR0C1_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR0C2_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR0C2_channel_full_n );

    SC_METHOD(thread_C_YR0C2_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR0C2 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR0C2_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR1C0_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR1C0_channel_full_n );

    SC_METHOD(thread_C_YR1C0_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR1C0 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR1C0_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR1C1_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR1C1_channel_full_n );

    SC_METHOD(thread_C_YR1C1_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR1C1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR1C1_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR1C2_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR1C2_channel_full_n );

    SC_METHOD(thread_C_YR1C2_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR1C2 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR1C2_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR2C0_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR2C0_channel_full_n );

    SC_METHOD(thread_C_YR2C0_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR2C0 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR2C0_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR2C1_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR2C1_channel_full_n );

    SC_METHOD(thread_C_YR2C1_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_YR2C1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_C_YR2C1_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_584);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );

    SC_METHOD(thread_ap_condition_671);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( C_XR0C0_channel_full_n );
    sensitive << ( C_XR0C1_channel_full_n );
    sensitive << ( C_XR0C2_channel_full_n );
    sensitive << ( C_XR1C0_channel_full_n );
    sensitive << ( C_XR1C1_channel_full_n );
    sensitive << ( C_XR1C2_channel_full_n );
    sensitive << ( C_XR2C0_channel_full_n );
    sensitive << ( C_XR2C1_channel_full_n );
    sensitive << ( C_XR2C2_channel_full_n );
    sensitive << ( C_YR0C0_channel_full_n );
    sensitive << ( C_YR0C1_channel_full_n );
    sensitive << ( C_YR0C2_channel_full_n );
    sensitive << ( C_YR1C0_channel_full_n );
    sensitive << ( C_YR1C1_channel_full_n );
    sensitive << ( C_YR1C2_channel_full_n );
    sensitive << ( C_YR2C0_channel_full_n );
    sensitive << ( C_YR2C1_channel_full_n );
    sensitive << ( c_high_thresh_channe_full_n );
    sensitive << ( c_low_thresh_channel_1_full_n );
    sensitive << ( c_invert_channel_full_n );

    SC_METHOD(thread_ap_condition_703);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( img_0_data_stream_0_full_n );
    sensitive << ( img_0_data_stream_1_full_n );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( brmerge_i_i_i_i_reg_767 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( exitcond2_i_i_i_i_fu_667_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580);

    SC_METHOD(thread_ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593);

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond2_i_i_i_i_fu_667_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_axi_last_V_2_i_i_i_i_phi_fu_585_p4);
    sensitive << ( video_in_V_last_V_0_data_out );
    sensitive << ( brmerge_i_i_i_i_reg_767 );
    sensitive << ( eol_reg_558 );
    sensitive << ( ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580 );
    sensitive << ( ap_condition_584 );

    SC_METHOD(thread_brmerge_i_i_i_i_fu_692_p2);
    sensitive << ( eol_i_i_i_i_phi_fu_550_p4 );
    sensitive << ( sof_1_i_i_i_i_fu_176 );

    SC_METHOD(thread_c_high_thresh_channe_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( c_high_thresh_channe_full_n );

    SC_METHOD(thread_c_high_thresh_channe_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( c_high_thresh );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_c_high_thresh_channe_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_c_invert_channel_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( c_invert_channel_full_n );

    SC_METHOD(thread_c_invert_channel_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( c_invert );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_c_invert_channel_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_c_low_thresh_channel_1_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( c_low_thresh_channel_1_full_n );

    SC_METHOD(thread_c_low_thresh_channel_1_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( c_low_thresh );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_c_low_thresh_channel_1_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_671 );

    SC_METHOD(thread_eol_2_i_i_i_i_phi_fu_608_p4);
    sensitive << ( video_in_V_last_V_0_data_out );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_i_i_reg_605 );

    SC_METHOD(thread_eol_i_i_i_i_phi_fu_550_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( eol_i_i_i_i_reg_546 );
    sensitive << ( axi_last_V_2_i_i_i_i_phi_fu_585_p4 );

    SC_METHOD(thread_exitcond2_i_i_i_i_fu_667_p2);
    sensitive << ( tmp_fu_650_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_i_i_i_i_reg_524 );

    SC_METHOD(thread_exitcond_i_i_i_i_fu_678_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( p_3_i_i_i_i_reg_535 );
    sensitive << ( tmp_30_fu_654_p1 );
    sensitive << ( ap_condition_703 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_i_V_fu_672_p2);
    sensitive << ( p_i_i_i_i_reg_524 );

    SC_METHOD(thread_img_0_data_stream_0_blk_n);
    sensitive << ( img_0_data_stream_0_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );

    SC_METHOD(thread_img_0_data_stream_0_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( ap_condition_703 );
    sensitive << ( p_Val2_s_phi_fu_597_p4 );

    SC_METHOD(thread_img_0_data_stream_0_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( ap_condition_703 );

    SC_METHOD(thread_img_0_data_stream_1_blk_n);
    sensitive << ( img_0_data_stream_1_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );

    SC_METHOD(thread_img_0_data_stream_1_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( ap_condition_703 );
    sensitive << ( p_Val2_s_phi_fu_597_p4 );

    SC_METHOD(thread_img_0_data_stream_1_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( ap_condition_703 );

    SC_METHOD(thread_j_V_fu_683_p2);
    sensitive << ( p_3_i_i_i_i_reg_535 );

    SC_METHOD(thread_p_Val2_s_phi_fu_597_p4);
    sensitive << ( video_in_V_data_V_0_data_out );
    sensitive << ( brmerge_i_i_i_i_reg_767 );
    sensitive << ( axi_data_V_1_i_i_i_i_reg_569 );
    sensitive << ( ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593 );
    sensitive << ( ap_condition_584 );

    SC_METHOD(thread_tmp_30_fu_654_p1);
    sensitive << ( cols );

    SC_METHOD(thread_tmp_fu_650_p1);
    sensitive << ( rows );

    SC_METHOD(thread_tmp_user_V_fu_658_p1);
    sensitive << ( video_in_V_user_V_0_data_out );

    SC_METHOD(thread_video_in_TDATA_blk_n);
    sensitive << ( video_in_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( brmerge_i_i_i_i_reg_767 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_i_i_reg_605 );

    SC_METHOD(thread_video_in_TREADY);
    sensitive << ( video_in_V_dest_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_ack_in);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( brmerge_i_i_i_i_reg_767 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_i_i_reg_605 );
    sensitive << ( ap_condition_703 );

    SC_METHOD(thread_video_in_V_data_V_0_data_out);
    sensitive << ( video_in_V_data_V_0_payload_A );
    sensitive << ( video_in_V_data_V_0_payload_B );
    sensitive << ( video_in_V_data_V_0_sel );

    SC_METHOD(thread_video_in_V_data_V_0_load_A);
    sensitive << ( video_in_V_data_V_0_sel_wr );
    sensitive << ( video_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_data_V_0_load_B);
    sensitive << ( video_in_V_data_V_0_sel_wr );
    sensitive << ( video_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_data_V_0_sel);
    sensitive << ( video_in_V_data_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_data_V_0_state_cmp_full);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_data_V_0_vld_out);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_dest_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( brmerge_i_i_i_i_reg_767 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_i_i_reg_605 );
    sensitive << ( ap_condition_703 );

    SC_METHOD(thread_video_in_V_dest_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_last_V_0_ack_in);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_last_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( brmerge_i_i_i_i_reg_767 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_i_i_reg_605 );
    sensitive << ( ap_condition_703 );

    SC_METHOD(thread_video_in_V_last_V_0_data_out);
    sensitive << ( video_in_V_last_V_0_payload_A );
    sensitive << ( video_in_V_last_V_0_payload_B );
    sensitive << ( video_in_V_last_V_0_sel );

    SC_METHOD(thread_video_in_V_last_V_0_load_A);
    sensitive << ( video_in_V_last_V_0_sel_wr );
    sensitive << ( video_in_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_last_V_0_load_B);
    sensitive << ( video_in_V_last_V_0_sel_wr );
    sensitive << ( video_in_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_last_V_0_sel);
    sensitive << ( video_in_V_last_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_last_V_0_state_cmp_full);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_last_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_last_V_0_vld_out);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_user_V_0_ack_in);
    sensitive << ( video_in_V_user_V_0_state );

    SC_METHOD(thread_video_in_V_user_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_i_i_i_reg_758 );
    sensitive << ( brmerge_i_i_i_i_reg_767 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_i_i_reg_605 );
    sensitive << ( ap_condition_703 );

    SC_METHOD(thread_video_in_V_user_V_0_data_out);
    sensitive << ( video_in_V_user_V_0_payload_A );
    sensitive << ( video_in_V_user_V_0_payload_B );
    sensitive << ( video_in_V_user_V_0_sel );

    SC_METHOD(thread_video_in_V_user_V_0_load_A);
    sensitive << ( video_in_V_user_V_0_sel_wr );
    sensitive << ( video_in_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_user_V_0_load_B);
    sensitive << ( video_in_V_user_V_0_sel_wr );
    sensitive << ( video_in_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_user_V_0_sel);
    sensitive << ( video_in_V_user_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_user_V_0_state_cmp_full);
    sensitive << ( video_in_V_user_V_0_state );

    SC_METHOD(thread_video_in_V_user_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_user_V_0_vld_out);
    sensitive << ( video_in_V_user_V_0_state );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_i_i_i_reg_605 );
    sensitive << ( ap_condition_671 );
    sensitive << ( exitcond2_i_i_i_i_fu_667_p2 );
    sensitive << ( ap_condition_703 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( tmp_user_V_fu_658_p1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    video_in_V_data_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_data_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_data_V_0_state = "00";
    video_in_V_user_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_user_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_user_V_0_state = "00";
    video_in_V_last_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_last_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_last_V_0_state = "00";
    video_in_V_dest_V_0_state = "00";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXIvideo2Mat44_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, video_in_TDATA, "(port)video_in_TDATA");
    sc_trace(mVcdFile, video_in_TVALID, "(port)video_in_TVALID");
    sc_trace(mVcdFile, video_in_TREADY, "(port)video_in_TREADY");
    sc_trace(mVcdFile, video_in_TKEEP, "(port)video_in_TKEEP");
    sc_trace(mVcdFile, video_in_TSTRB, "(port)video_in_TSTRB");
    sc_trace(mVcdFile, video_in_TUSER, "(port)video_in_TUSER");
    sc_trace(mVcdFile, video_in_TLAST, "(port)video_in_TLAST");
    sc_trace(mVcdFile, video_in_TID, "(port)video_in_TID");
    sc_trace(mVcdFile, video_in_TDEST, "(port)video_in_TDEST");
    sc_trace(mVcdFile, rows, "(port)rows");
    sc_trace(mVcdFile, cols, "(port)cols");
    sc_trace(mVcdFile, img_0_data_stream_0_din, "(port)img_0_data_stream_0_din");
    sc_trace(mVcdFile, img_0_data_stream_0_full_n, "(port)img_0_data_stream_0_full_n");
    sc_trace(mVcdFile, img_0_data_stream_0_write, "(port)img_0_data_stream_0_write");
    sc_trace(mVcdFile, img_0_data_stream_1_din, "(port)img_0_data_stream_1_din");
    sc_trace(mVcdFile, img_0_data_stream_1_full_n, "(port)img_0_data_stream_1_full_n");
    sc_trace(mVcdFile, img_0_data_stream_1_write, "(port)img_0_data_stream_1_write");
    sc_trace(mVcdFile, C_XR0C0, "(port)C_XR0C0");
    sc_trace(mVcdFile, C_XR0C1, "(port)C_XR0C1");
    sc_trace(mVcdFile, C_XR0C2, "(port)C_XR0C2");
    sc_trace(mVcdFile, C_XR1C0, "(port)C_XR1C0");
    sc_trace(mVcdFile, C_XR1C1, "(port)C_XR1C1");
    sc_trace(mVcdFile, C_XR1C2, "(port)C_XR1C2");
    sc_trace(mVcdFile, C_XR2C0, "(port)C_XR2C0");
    sc_trace(mVcdFile, C_XR2C1, "(port)C_XR2C1");
    sc_trace(mVcdFile, C_XR2C2, "(port)C_XR2C2");
    sc_trace(mVcdFile, C_YR0C0, "(port)C_YR0C0");
    sc_trace(mVcdFile, C_YR0C1, "(port)C_YR0C1");
    sc_trace(mVcdFile, C_YR0C2, "(port)C_YR0C2");
    sc_trace(mVcdFile, C_YR1C0, "(port)C_YR1C0");
    sc_trace(mVcdFile, C_YR1C1, "(port)C_YR1C1");
    sc_trace(mVcdFile, C_YR1C2, "(port)C_YR1C2");
    sc_trace(mVcdFile, C_YR2C0, "(port)C_YR2C0");
    sc_trace(mVcdFile, C_YR2C1, "(port)C_YR2C1");
    sc_trace(mVcdFile, c_high_thresh, "(port)c_high_thresh");
    sc_trace(mVcdFile, c_low_thresh, "(port)c_low_thresh");
    sc_trace(mVcdFile, c_invert, "(port)c_invert");
    sc_trace(mVcdFile, C_XR0C0_channel_din, "(port)C_XR0C0_channel_din");
    sc_trace(mVcdFile, C_XR0C0_channel_full_n, "(port)C_XR0C0_channel_full_n");
    sc_trace(mVcdFile, C_XR0C0_channel_write, "(port)C_XR0C0_channel_write");
    sc_trace(mVcdFile, C_XR0C1_channel_din, "(port)C_XR0C1_channel_din");
    sc_trace(mVcdFile, C_XR0C1_channel_full_n, "(port)C_XR0C1_channel_full_n");
    sc_trace(mVcdFile, C_XR0C1_channel_write, "(port)C_XR0C1_channel_write");
    sc_trace(mVcdFile, C_XR0C2_channel_din, "(port)C_XR0C2_channel_din");
    sc_trace(mVcdFile, C_XR0C2_channel_full_n, "(port)C_XR0C2_channel_full_n");
    sc_trace(mVcdFile, C_XR0C2_channel_write, "(port)C_XR0C2_channel_write");
    sc_trace(mVcdFile, C_XR1C0_channel_din, "(port)C_XR1C0_channel_din");
    sc_trace(mVcdFile, C_XR1C0_channel_full_n, "(port)C_XR1C0_channel_full_n");
    sc_trace(mVcdFile, C_XR1C0_channel_write, "(port)C_XR1C0_channel_write");
    sc_trace(mVcdFile, C_XR1C1_channel_din, "(port)C_XR1C1_channel_din");
    sc_trace(mVcdFile, C_XR1C1_channel_full_n, "(port)C_XR1C1_channel_full_n");
    sc_trace(mVcdFile, C_XR1C1_channel_write, "(port)C_XR1C1_channel_write");
    sc_trace(mVcdFile, C_XR1C2_channel_din, "(port)C_XR1C2_channel_din");
    sc_trace(mVcdFile, C_XR1C2_channel_full_n, "(port)C_XR1C2_channel_full_n");
    sc_trace(mVcdFile, C_XR1C2_channel_write, "(port)C_XR1C2_channel_write");
    sc_trace(mVcdFile, C_XR2C0_channel_din, "(port)C_XR2C0_channel_din");
    sc_trace(mVcdFile, C_XR2C0_channel_full_n, "(port)C_XR2C0_channel_full_n");
    sc_trace(mVcdFile, C_XR2C0_channel_write, "(port)C_XR2C0_channel_write");
    sc_trace(mVcdFile, C_XR2C1_channel_din, "(port)C_XR2C1_channel_din");
    sc_trace(mVcdFile, C_XR2C1_channel_full_n, "(port)C_XR2C1_channel_full_n");
    sc_trace(mVcdFile, C_XR2C1_channel_write, "(port)C_XR2C1_channel_write");
    sc_trace(mVcdFile, C_XR2C2_channel_din, "(port)C_XR2C2_channel_din");
    sc_trace(mVcdFile, C_XR2C2_channel_full_n, "(port)C_XR2C2_channel_full_n");
    sc_trace(mVcdFile, C_XR2C2_channel_write, "(port)C_XR2C2_channel_write");
    sc_trace(mVcdFile, C_YR0C0_channel_din, "(port)C_YR0C0_channel_din");
    sc_trace(mVcdFile, C_YR0C0_channel_full_n, "(port)C_YR0C0_channel_full_n");
    sc_trace(mVcdFile, C_YR0C0_channel_write, "(port)C_YR0C0_channel_write");
    sc_trace(mVcdFile, C_YR0C1_channel_din, "(port)C_YR0C1_channel_din");
    sc_trace(mVcdFile, C_YR0C1_channel_full_n, "(port)C_YR0C1_channel_full_n");
    sc_trace(mVcdFile, C_YR0C1_channel_write, "(port)C_YR0C1_channel_write");
    sc_trace(mVcdFile, C_YR0C2_channel_din, "(port)C_YR0C2_channel_din");
    sc_trace(mVcdFile, C_YR0C2_channel_full_n, "(port)C_YR0C2_channel_full_n");
    sc_trace(mVcdFile, C_YR0C2_channel_write, "(port)C_YR0C2_channel_write");
    sc_trace(mVcdFile, C_YR1C0_channel_din, "(port)C_YR1C0_channel_din");
    sc_trace(mVcdFile, C_YR1C0_channel_full_n, "(port)C_YR1C0_channel_full_n");
    sc_trace(mVcdFile, C_YR1C0_channel_write, "(port)C_YR1C0_channel_write");
    sc_trace(mVcdFile, C_YR1C1_channel_din, "(port)C_YR1C1_channel_din");
    sc_trace(mVcdFile, C_YR1C1_channel_full_n, "(port)C_YR1C1_channel_full_n");
    sc_trace(mVcdFile, C_YR1C1_channel_write, "(port)C_YR1C1_channel_write");
    sc_trace(mVcdFile, C_YR1C2_channel_din, "(port)C_YR1C2_channel_din");
    sc_trace(mVcdFile, C_YR1C2_channel_full_n, "(port)C_YR1C2_channel_full_n");
    sc_trace(mVcdFile, C_YR1C2_channel_write, "(port)C_YR1C2_channel_write");
    sc_trace(mVcdFile, C_YR2C0_channel_din, "(port)C_YR2C0_channel_din");
    sc_trace(mVcdFile, C_YR2C0_channel_full_n, "(port)C_YR2C0_channel_full_n");
    sc_trace(mVcdFile, C_YR2C0_channel_write, "(port)C_YR2C0_channel_write");
    sc_trace(mVcdFile, C_YR2C1_channel_din, "(port)C_YR2C1_channel_din");
    sc_trace(mVcdFile, C_YR2C1_channel_full_n, "(port)C_YR2C1_channel_full_n");
    sc_trace(mVcdFile, C_YR2C1_channel_write, "(port)C_YR2C1_channel_write");
    sc_trace(mVcdFile, c_high_thresh_channe_din, "(port)c_high_thresh_channe_din");
    sc_trace(mVcdFile, c_high_thresh_channe_full_n, "(port)c_high_thresh_channe_full_n");
    sc_trace(mVcdFile, c_high_thresh_channe_write, "(port)c_high_thresh_channe_write");
    sc_trace(mVcdFile, c_low_thresh_channel_1_din, "(port)c_low_thresh_channel_1_din");
    sc_trace(mVcdFile, c_low_thresh_channel_1_full_n, "(port)c_low_thresh_channel_1_full_n");
    sc_trace(mVcdFile, c_low_thresh_channel_1_write, "(port)c_low_thresh_channel_1_write");
    sc_trace(mVcdFile, c_invert_channel_din, "(port)c_invert_channel_din");
    sc_trace(mVcdFile, c_invert_channel_full_n, "(port)c_invert_channel_full_n");
    sc_trace(mVcdFile, c_invert_channel_write, "(port)c_invert_channel_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, video_in_V_data_V_0_data_out, "video_in_V_data_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_vld_in, "video_in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_data_V_0_vld_out, "video_in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_ack_in, "video_in_V_data_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_data_V_0_ack_out, "video_in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_payload_A, "video_in_V_data_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_data_V_0_payload_B, "video_in_V_data_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel_rd, "video_in_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel_wr, "video_in_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel, "video_in_V_data_V_0_sel");
    sc_trace(mVcdFile, video_in_V_data_V_0_load_A, "video_in_V_data_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_data_V_0_load_B, "video_in_V_data_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_data_V_0_state, "video_in_V_data_V_0_state");
    sc_trace(mVcdFile, video_in_V_data_V_0_state_cmp_full, "video_in_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_user_V_0_data_out, "video_in_V_user_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_user_V_0_vld_in, "video_in_V_user_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_user_V_0_vld_out, "video_in_V_user_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_user_V_0_ack_in, "video_in_V_user_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_user_V_0_ack_out, "video_in_V_user_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_user_V_0_payload_A, "video_in_V_user_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_user_V_0_payload_B, "video_in_V_user_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_user_V_0_sel_rd, "video_in_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_user_V_0_sel_wr, "video_in_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_user_V_0_sel, "video_in_V_user_V_0_sel");
    sc_trace(mVcdFile, video_in_V_user_V_0_load_A, "video_in_V_user_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_user_V_0_load_B, "video_in_V_user_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_user_V_0_state, "video_in_V_user_V_0_state");
    sc_trace(mVcdFile, video_in_V_user_V_0_state_cmp_full, "video_in_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_last_V_0_data_out, "video_in_V_last_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_last_V_0_vld_in, "video_in_V_last_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_last_V_0_vld_out, "video_in_V_last_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_last_V_0_ack_in, "video_in_V_last_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_last_V_0_ack_out, "video_in_V_last_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_last_V_0_payload_A, "video_in_V_last_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_last_V_0_payload_B, "video_in_V_last_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_last_V_0_sel_rd, "video_in_V_last_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_last_V_0_sel_wr, "video_in_V_last_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_last_V_0_sel, "video_in_V_last_V_0_sel");
    sc_trace(mVcdFile, video_in_V_last_V_0_load_A, "video_in_V_last_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_last_V_0_load_B, "video_in_V_last_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_last_V_0_state, "video_in_V_last_V_0_state");
    sc_trace(mVcdFile, video_in_V_last_V_0_state_cmp_full, "video_in_V_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_dest_V_0_vld_in, "video_in_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_dest_V_0_ack_out, "video_in_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_dest_V_0_state, "video_in_V_dest_V_0_state");
    sc_trace(mVcdFile, video_in_TDATA_blk_n, "video_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, exitcond_i_i_i_i_reg_758, "exitcond_i_i_i_i_reg_758");
    sc_trace(mVcdFile, brmerge_i_i_i_i_reg_767, "brmerge_i_i_i_i_reg_767");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, eol_2_i_i_i_i_reg_605, "eol_2_i_i_i_i_reg_605");
    sc_trace(mVcdFile, img_0_data_stream_0_blk_n, "img_0_data_stream_0_blk_n");
    sc_trace(mVcdFile, img_0_data_stream_1_blk_n, "img_0_data_stream_1_blk_n");
    sc_trace(mVcdFile, C_XR0C0_channel_blk_n, "C_XR0C0_channel_blk_n");
    sc_trace(mVcdFile, C_XR0C1_channel_blk_n, "C_XR0C1_channel_blk_n");
    sc_trace(mVcdFile, C_XR0C2_channel_blk_n, "C_XR0C2_channel_blk_n");
    sc_trace(mVcdFile, C_XR1C0_channel_blk_n, "C_XR1C0_channel_blk_n");
    sc_trace(mVcdFile, C_XR1C1_channel_blk_n, "C_XR1C1_channel_blk_n");
    sc_trace(mVcdFile, C_XR1C2_channel_blk_n, "C_XR1C2_channel_blk_n");
    sc_trace(mVcdFile, C_XR2C0_channel_blk_n, "C_XR2C0_channel_blk_n");
    sc_trace(mVcdFile, C_XR2C1_channel_blk_n, "C_XR2C1_channel_blk_n");
    sc_trace(mVcdFile, C_XR2C2_channel_blk_n, "C_XR2C2_channel_blk_n");
    sc_trace(mVcdFile, C_YR0C0_channel_blk_n, "C_YR0C0_channel_blk_n");
    sc_trace(mVcdFile, C_YR0C1_channel_blk_n, "C_YR0C1_channel_blk_n");
    sc_trace(mVcdFile, C_YR0C2_channel_blk_n, "C_YR0C2_channel_blk_n");
    sc_trace(mVcdFile, C_YR1C0_channel_blk_n, "C_YR1C0_channel_blk_n");
    sc_trace(mVcdFile, C_YR1C1_channel_blk_n, "C_YR1C1_channel_blk_n");
    sc_trace(mVcdFile, C_YR1C2_channel_blk_n, "C_YR1C2_channel_blk_n");
    sc_trace(mVcdFile, C_YR2C0_channel_blk_n, "C_YR2C0_channel_blk_n");
    sc_trace(mVcdFile, C_YR2C1_channel_blk_n, "C_YR2C1_channel_blk_n");
    sc_trace(mVcdFile, c_high_thresh_channe_blk_n, "c_high_thresh_channe_blk_n");
    sc_trace(mVcdFile, c_low_thresh_channel_1_blk_n, "c_low_thresh_channel_1_blk_n");
    sc_trace(mVcdFile, c_invert_channel_blk_n, "c_invert_channel_blk_n");
    sc_trace(mVcdFile, p_3_i_i_i_i_reg_535, "p_3_i_i_i_i_reg_535");
    sc_trace(mVcdFile, eol_i_i_i_i_reg_546, "eol_i_i_i_i_reg_546");
    sc_trace(mVcdFile, eol_reg_558, "eol_reg_558");
    sc_trace(mVcdFile, axi_data_V_1_i_i_i_i_reg_569, "axi_data_V_1_i_i_i_i_reg_569");
    sc_trace(mVcdFile, axi_last_V_3_i_i_i_i_reg_616, "axi_last_V_3_i_i_i_i_reg_616");
    sc_trace(mVcdFile, axi_data_V_3_i_i_i_i_reg_628, "axi_data_V_3_i_i_i_i_reg_628");
    sc_trace(mVcdFile, tmp_fu_650_p1, "tmp_fu_650_p1");
    sc_trace(mVcdFile, ap_condition_671, "ap_condition_671");
    sc_trace(mVcdFile, tmp_30_fu_654_p1, "tmp_30_fu_654_p1");
    sc_trace(mVcdFile, tmp_data_V_reg_729, "tmp_data_V_reg_729");
    sc_trace(mVcdFile, tmp_last_V_reg_737, "tmp_last_V_reg_737");
    sc_trace(mVcdFile, exitcond2_i_i_i_i_fu_667_p2, "exitcond2_i_i_i_i_fu_667_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_V_fu_672_p2, "i_V_fu_672_p2");
    sc_trace(mVcdFile, i_V_reg_753, "i_V_reg_753");
    sc_trace(mVcdFile, exitcond_i_i_i_i_fu_678_p2, "exitcond_i_i_i_i_fu_678_p2");
    sc_trace(mVcdFile, ap_condition_703, "ap_condition_703");
    sc_trace(mVcdFile, j_V_fu_683_p2, "j_V_fu_683_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, brmerge_i_i_i_i_fu_692_p2, "brmerge_i_i_i_i_fu_692_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, eol_2_i_i_i_i_phi_fu_608_p4, "eol_2_i_i_i_i_phi_fu_608_p4");
    sc_trace(mVcdFile, axi_last_V1_i_i_i_i_reg_504, "axi_last_V1_i_i_i_i_reg_504");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, axi_data_V1_i_i_i_i_reg_514, "axi_data_V1_i_i_i_i_reg_514");
    sc_trace(mVcdFile, p_i_i_i_i_reg_524, "p_i_i_i_i_reg_524");
    sc_trace(mVcdFile, eol_i_i_i_i_phi_fu_550_p4, "eol_i_i_i_i_phi_fu_550_p4");
    sc_trace(mVcdFile, axi_last_V_2_i_i_i_i_phi_fu_585_p4, "axi_last_V_2_i_i_i_i_phi_fu_585_p4");
    sc_trace(mVcdFile, p_Val2_s_phi_fu_597_p4, "p_Val2_s_phi_fu_597_p4");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580, "ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593, "ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593");
    sc_trace(mVcdFile, sof_1_i_i_i_i_fu_176, "sof_1_i_i_i_i_fu_176");
    sc_trace(mVcdFile, tmp_user_V_fu_658_p1, "tmp_user_V_fu_658_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_584, "ap_condition_584");
#endif

    }
}

AXIvideo2Mat44::~AXIvideo2Mat44() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void AXIvideo2Mat44::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_fu_678_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_phi_fu_608_p4.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        axi_data_V1_i_i_i_i_reg_514 = tmp_data_V_reg_729.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        axi_data_V1_i_i_i_i_reg_514 = axi_data_V_3_i_i_i_i_reg_628.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)))) {
        axi_data_V_1_i_i_i_i_reg_569 = p_Val2_s_phi_fu_597_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read()))) {
        axi_data_V_1_i_i_i_i_reg_569 = axi_data_V1_i_i_i_i_reg_514.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        axi_data_V_3_i_i_i_i_reg_628 = axi_data_V_1_i_i_i_i_reg_569.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        axi_data_V_3_i_i_i_i_reg_628 = video_in_V_data_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        axi_last_V1_i_i_i_i_reg_504 = tmp_last_V_reg_737.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        axi_last_V1_i_i_i_i_reg_504 = axi_last_V_3_i_i_i_i_reg_616.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        axi_last_V_3_i_i_i_i_reg_616 = eol_reg_558.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        axi_last_V_3_i_i_i_i_reg_616 = video_in_V_last_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        eol_2_i_i_i_i_reg_605 = eol_i_i_i_i_reg_546.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        eol_2_i_i_i_i_reg_605 = video_in_V_last_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)))) {
        eol_i_i_i_i_reg_546 = axi_last_V_2_i_i_i_i_phi_fu_585_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read()))) {
        eol_i_i_i_i_reg_546 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)))) {
        eol_reg_558 = axi_last_V_2_i_i_i_i_phi_fu_585_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read()))) {
        eol_reg_558 = axi_last_V1_i_i_i_i_reg_504.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_fu_678_p2.read()))) {
        p_3_i_i_i_i_reg_535 = j_V_fu_683_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read()))) {
        p_3_i_i_i_i_reg_535 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        p_i_i_i_i_reg_524 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        p_i_i_i_i_reg_524 = i_V_reg_753.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_fu_678_p2.read()))) {
        sof_1_i_i_i_i_fu_176 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        sof_1_i_i_i_i_fu_176 = ap_const_lv1_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_out.read()))) {
            video_in_V_data_V_0_sel_rd =  (sc_logic) (~video_in_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_in.read()))) {
            video_in_V_data_V_0_sel_wr =  (sc_logic) (~video_in_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            video_in_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            video_in_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()))))) {
            video_in_V_data_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_dest_V_0_state.read())))) {
            video_in_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_dest_V_0_state.read())))) {
            video_in_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_ack_out.read()))))) {
            video_in_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_out.read()))) {
            video_in_V_last_V_0_sel_rd =  (sc_logic) (~video_in_V_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_in.read()))) {
            video_in_V_last_V_0_sel_wr =  (sc_logic) (~video_in_V_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_last_V_0_state.read())))) {
            video_in_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_last_V_0_state.read())))) {
            video_in_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()))))) {
            video_in_V_last_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_out.read()))) {
            video_in_V_user_V_0_sel_rd =  (sc_logic) (~video_in_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_in.read()))) {
            video_in_V_user_V_0_sel_wr =  (sc_logic) (~video_in_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_user_V_0_state.read())))) {
            video_in_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_user_V_0_state.read())))) {
            video_in_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()))))) {
            video_in_V_user_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_fu_678_p2.read()))) {
        brmerge_i_i_i_i_reg_767 = brmerge_i_i_i_i_fu_692_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)))) {
        exitcond_i_i_i_i_reg_758 = exitcond_i_i_i_i_fu_678_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        i_V_reg_753 = i_V_fu_672_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && !esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0))) {
        tmp_data_V_reg_729 = video_in_V_data_V_0_data_out.read();
        tmp_last_V_reg_737 = video_in_V_last_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_load_A.read())) {
        video_in_V_data_V_0_payload_A = video_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_load_B.read())) {
        video_in_V_data_V_0_payload_B = video_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_load_A.read())) {
        video_in_V_last_V_0_payload_A = video_in_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_load_B.read())) {
        video_in_V_last_V_0_payload_B = video_in_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_load_A.read())) {
        video_in_V_user_V_0_payload_A = video_in_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_load_B.read())) {
        video_in_V_user_V_0_payload_B = video_in_TUSER.read();
    }
}

void AXIvideo2Mat44::thread_C_XR0C0_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_XR0C0_channel_blk_n = C_XR0C0_channel_full_n.read();
    } else {
        C_XR0C0_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_XR0C0_channel_din() {
    C_XR0C0_channel_din = C_XR0C0.read();
}

void AXIvideo2Mat44::thread_C_XR0C0_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_XR0C0_channel_write = ap_const_logic_1;
    } else {
        C_XR0C0_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_XR0C1_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_XR0C1_channel_blk_n = C_XR0C1_channel_full_n.read();
    } else {
        C_XR0C1_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_XR0C1_channel_din() {
    C_XR0C1_channel_din = C_XR0C1.read();
}

void AXIvideo2Mat44::thread_C_XR0C1_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_XR0C1_channel_write = ap_const_logic_1;
    } else {
        C_XR0C1_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_XR0C2_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_XR0C2_channel_blk_n = C_XR0C2_channel_full_n.read();
    } else {
        C_XR0C2_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_XR0C2_channel_din() {
    C_XR0C2_channel_din = C_XR0C2.read();
}

void AXIvideo2Mat44::thread_C_XR0C2_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_XR0C2_channel_write = ap_const_logic_1;
    } else {
        C_XR0C2_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_XR1C0_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_XR1C0_channel_blk_n = C_XR1C0_channel_full_n.read();
    } else {
        C_XR1C0_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_XR1C0_channel_din() {
    C_XR1C0_channel_din = C_XR1C0.read();
}

void AXIvideo2Mat44::thread_C_XR1C0_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_XR1C0_channel_write = ap_const_logic_1;
    } else {
        C_XR1C0_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_XR1C1_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_XR1C1_channel_blk_n = C_XR1C1_channel_full_n.read();
    } else {
        C_XR1C1_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_XR1C1_channel_din() {
    C_XR1C1_channel_din = C_XR1C1.read();
}

void AXIvideo2Mat44::thread_C_XR1C1_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_XR1C1_channel_write = ap_const_logic_1;
    } else {
        C_XR1C1_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_XR1C2_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_XR1C2_channel_blk_n = C_XR1C2_channel_full_n.read();
    } else {
        C_XR1C2_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_XR1C2_channel_din() {
    C_XR1C2_channel_din = C_XR1C2.read();
}

void AXIvideo2Mat44::thread_C_XR1C2_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_XR1C2_channel_write = ap_const_logic_1;
    } else {
        C_XR1C2_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_XR2C0_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_XR2C0_channel_blk_n = C_XR2C0_channel_full_n.read();
    } else {
        C_XR2C0_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_XR2C0_channel_din() {
    C_XR2C0_channel_din = C_XR2C0.read();
}

void AXIvideo2Mat44::thread_C_XR2C0_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_XR2C0_channel_write = ap_const_logic_1;
    } else {
        C_XR2C0_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_XR2C1_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_XR2C1_channel_blk_n = C_XR2C1_channel_full_n.read();
    } else {
        C_XR2C1_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_XR2C1_channel_din() {
    C_XR2C1_channel_din = C_XR2C1.read();
}

void AXIvideo2Mat44::thread_C_XR2C1_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_XR2C1_channel_write = ap_const_logic_1;
    } else {
        C_XR2C1_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_XR2C2_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_XR2C2_channel_blk_n = C_XR2C2_channel_full_n.read();
    } else {
        C_XR2C2_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_XR2C2_channel_din() {
    C_XR2C2_channel_din = C_XR2C2.read();
}

void AXIvideo2Mat44::thread_C_XR2C2_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_XR2C2_channel_write = ap_const_logic_1;
    } else {
        C_XR2C2_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_YR0C0_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_YR0C0_channel_blk_n = C_YR0C0_channel_full_n.read();
    } else {
        C_YR0C0_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_YR0C0_channel_din() {
    C_YR0C0_channel_din = C_YR0C0.read();
}

void AXIvideo2Mat44::thread_C_YR0C0_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_YR0C0_channel_write = ap_const_logic_1;
    } else {
        C_YR0C0_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_YR0C1_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_YR0C1_channel_blk_n = C_YR0C1_channel_full_n.read();
    } else {
        C_YR0C1_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_YR0C1_channel_din() {
    C_YR0C1_channel_din = C_YR0C1.read();
}

void AXIvideo2Mat44::thread_C_YR0C1_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_YR0C1_channel_write = ap_const_logic_1;
    } else {
        C_YR0C1_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_YR0C2_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_YR0C2_channel_blk_n = C_YR0C2_channel_full_n.read();
    } else {
        C_YR0C2_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_YR0C2_channel_din() {
    C_YR0C2_channel_din = C_YR0C2.read();
}

void AXIvideo2Mat44::thread_C_YR0C2_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_YR0C2_channel_write = ap_const_logic_1;
    } else {
        C_YR0C2_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_YR1C0_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_YR1C0_channel_blk_n = C_YR1C0_channel_full_n.read();
    } else {
        C_YR1C0_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_YR1C0_channel_din() {
    C_YR1C0_channel_din = C_YR1C0.read();
}

void AXIvideo2Mat44::thread_C_YR1C0_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_YR1C0_channel_write = ap_const_logic_1;
    } else {
        C_YR1C0_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_YR1C1_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_YR1C1_channel_blk_n = C_YR1C1_channel_full_n.read();
    } else {
        C_YR1C1_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_YR1C1_channel_din() {
    C_YR1C1_channel_din = C_YR1C1.read();
}

void AXIvideo2Mat44::thread_C_YR1C1_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_YR1C1_channel_write = ap_const_logic_1;
    } else {
        C_YR1C1_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_YR1C2_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_YR1C2_channel_blk_n = C_YR1C2_channel_full_n.read();
    } else {
        C_YR1C2_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_YR1C2_channel_din() {
    C_YR1C2_channel_din = C_YR1C2.read();
}

void AXIvideo2Mat44::thread_C_YR1C2_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_YR1C2_channel_write = ap_const_logic_1;
    } else {
        C_YR1C2_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_YR2C0_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_YR2C0_channel_blk_n = C_YR2C0_channel_full_n.read();
    } else {
        C_YR2C0_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_YR2C0_channel_din() {
    C_YR2C0_channel_din = C_YR2C0.read();
}

void AXIvideo2Mat44::thread_C_YR2C0_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_YR2C0_channel_write = ap_const_logic_1;
    } else {
        C_YR2C0_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_C_YR2C1_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_YR2C1_channel_blk_n = C_YR2C1_channel_full_n.read();
    } else {
        C_YR2C1_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_C_YR2C1_channel_din() {
    C_YR2C1_channel_din = C_YR2C1.read();
}

void AXIvideo2Mat44::thread_C_YR2C1_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        C_YR2C1_channel_write = ap_const_logic_1;
    } else {
        C_YR2C1_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read().range(4, 4);
}

void AXIvideo2Mat44::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read().range(6, 6);
}

void AXIvideo2Mat44::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void AXIvideo2Mat44::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(7, 7);
}

void AXIvideo2Mat44::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void AXIvideo2Mat44::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void AXIvideo2Mat44::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void AXIvideo2Mat44::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(5, 5);
}

void AXIvideo2Mat44::thread_ap_condition_584() {
    ap_condition_584 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()));
}

void AXIvideo2Mat44::thread_ap_condition_671() {
    ap_condition_671 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(C_XR0C0_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_XR0C1_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_XR0C2_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_XR1C0_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_XR1C1_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_XR1C2_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_XR2C0_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_XR2C1_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_XR2C2_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_YR0C0_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_YR0C1_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_YR0C2_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_YR1C0_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_YR1C1_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_YR1C2_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_YR2C0_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(C_YR2C1_channel_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(c_high_thresh_channe_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(c_low_thresh_channel_1_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(c_invert_channel_full_n.read(), ap_const_logic_0));
}

void AXIvideo2Mat44::thread_ap_condition_703() {
    ap_condition_703 = ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read()) && 
  esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
  esl_seteq<1,1,1>(img_0_data_stream_0_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
  esl_seteq<1,1,1>(img_0_data_stream_1_full_n.read(), ap_const_logic_0)));
}

void AXIvideo2Mat44::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580() {
    ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580 =  (sc_lv<1>) ("X");
}

void AXIvideo2Mat44::thread_ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593() {
    ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void AXIvideo2Mat44::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_axi_last_V_2_i_i_i_i_phi_fu_585_p4() {
    if (esl_seteq<1,1,1>(ap_condition_584.read(), ap_const_boolean_1)) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read())) {
            axi_last_V_2_i_i_i_i_phi_fu_585_p4 = eol_reg_558.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read())) {
            axi_last_V_2_i_i_i_i_phi_fu_585_p4 = video_in_V_last_V_0_data_out.read();
        } else {
            axi_last_V_2_i_i_i_i_phi_fu_585_p4 = ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580.read();
        }
    } else {
        axi_last_V_2_i_i_i_i_phi_fu_585_p4 = ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580.read();
    }
}

void AXIvideo2Mat44::thread_brmerge_i_i_i_i_fu_692_p2() {
    brmerge_i_i_i_i_fu_692_p2 = (sof_1_i_i_i_i_fu_176.read() | eol_i_i_i_i_phi_fu_550_p4.read());
}

void AXIvideo2Mat44::thread_c_high_thresh_channe_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        c_high_thresh_channe_blk_n = c_high_thresh_channe_full_n.read();
    } else {
        c_high_thresh_channe_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_c_high_thresh_channe_din() {
    c_high_thresh_channe_din = c_high_thresh.read();
}

void AXIvideo2Mat44::thread_c_high_thresh_channe_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        c_high_thresh_channe_write = ap_const_logic_1;
    } else {
        c_high_thresh_channe_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_c_invert_channel_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        c_invert_channel_blk_n = c_invert_channel_full_n.read();
    } else {
        c_invert_channel_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_c_invert_channel_din() {
    c_invert_channel_din = c_invert.read();
}

void AXIvideo2Mat44::thread_c_invert_channel_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        c_invert_channel_write = ap_const_logic_1;
    } else {
        c_invert_channel_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_c_low_thresh_channel_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        c_low_thresh_channel_1_blk_n = c_low_thresh_channel_1_full_n.read();
    } else {
        c_low_thresh_channel_1_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_c_low_thresh_channel_1_din() {
    c_low_thresh_channel_1_din = c_low_thresh.read();
}

void AXIvideo2Mat44::thread_c_low_thresh_channel_1_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1))) {
        c_low_thresh_channel_1_write = ap_const_logic_1;
    } else {
        c_low_thresh_channel_1_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_eol_2_i_i_i_i_phi_fu_608_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()))) {
        eol_2_i_i_i_i_phi_fu_608_p4 = video_in_V_last_V_0_data_out.read();
    } else {
        eol_2_i_i_i_i_phi_fu_608_p4 = eol_2_i_i_i_i_reg_605.read();
    }
}

void AXIvideo2Mat44::thread_eol_i_i_i_i_phi_fu_550_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()))) {
        eol_i_i_i_i_phi_fu_550_p4 = axi_last_V_2_i_i_i_i_phi_fu_585_p4.read();
    } else {
        eol_i_i_i_i_phi_fu_550_p4 = eol_i_i_i_i_reg_546.read();
    }
}

void AXIvideo2Mat44::thread_exitcond2_i_i_i_i_fu_667_p2() {
    exitcond2_i_i_i_i_fu_667_p2 = (!p_i_i_i_i_reg_524.read().is_01() || !tmp_fu_650_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(p_i_i_i_i_reg_524.read() == tmp_fu_650_p1.read());
}

void AXIvideo2Mat44::thread_exitcond_i_i_i_i_fu_678_p2() {
    exitcond_i_i_i_i_fu_678_p2 = (!p_3_i_i_i_i_reg_535.read().is_01() || !tmp_30_fu_654_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(p_3_i_i_i_i_reg_535.read() == tmp_30_fu_654_p1.read());
}

void AXIvideo2Mat44::thread_i_V_fu_672_p2() {
    i_V_fu_672_p2 = (!p_i_i_i_i_reg_524.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(p_i_i_i_i_reg_524.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void AXIvideo2Mat44::thread_img_0_data_stream_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()))) {
        img_0_data_stream_0_blk_n = img_0_data_stream_0_full_n.read();
    } else {
        img_0_data_stream_0_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_img_0_data_stream_0_din() {
    img_0_data_stream_0_din = p_Val2_s_phi_fu_597_p4.read().range(8-1, 0);
}

void AXIvideo2Mat44::thread_img_0_data_stream_0_write() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)))) {
        img_0_data_stream_0_write = ap_const_logic_1;
    } else {
        img_0_data_stream_0_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_img_0_data_stream_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()))) {
        img_0_data_stream_1_blk_n = img_0_data_stream_1_full_n.read();
    } else {
        img_0_data_stream_1_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_img_0_data_stream_1_din() {
    img_0_data_stream_1_din = p_Val2_s_phi_fu_597_p4.read().range(15, 8);
}

void AXIvideo2Mat44::thread_img_0_data_stream_1_write() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)))) {
        img_0_data_stream_1_write = ap_const_logic_1;
    } else {
        img_0_data_stream_1_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_j_V_fu_683_p2() {
    j_V_fu_683_p2 = (!p_3_i_i_i_i_reg_535.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(p_3_i_i_i_i_reg_535.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void AXIvideo2Mat44::thread_p_Val2_s_phi_fu_597_p4() {
    if (esl_seteq<1,1,1>(ap_condition_584.read(), ap_const_boolean_1)) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read())) {
            p_Val2_s_phi_fu_597_p4 = axi_data_V_1_i_i_i_i_reg_569.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read())) {
            p_Val2_s_phi_fu_597_p4 = video_in_V_data_V_0_data_out.read();
        } else {
            p_Val2_s_phi_fu_597_p4 = ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593.read();
        }
    } else {
        p_Val2_s_phi_fu_597_p4 = ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593.read();
    }
}

void AXIvideo2Mat44::thread_tmp_30_fu_654_p1() {
    tmp_30_fu_654_p1 = cols.read().range(11-1, 0);
}

void AXIvideo2Mat44::thread_tmp_fu_650_p1() {
    tmp_fu_650_p1 = rows.read().range(11-1, 0);
}

void AXIvideo2Mat44::thread_tmp_user_V_fu_658_p1() {
    tmp_user_V_fu_658_p1 = video_in_V_user_V_0_data_out.read();
}

void AXIvideo2Mat44::thread_video_in_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read())))) {
        video_in_TDATA_blk_n =  (sc_logic) (video_in_V_data_V_0_state.read()[0]);
    } else {
        video_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat44::thread_video_in_TREADY() {
    video_in_TREADY =  (sc_logic) (video_in_V_dest_V_0_state.read()[1]);
}

void AXIvideo2Mat44::thread_video_in_V_data_V_0_ack_in() {
    video_in_V_data_V_0_ack_in =  (sc_logic) (video_in_V_data_V_0_state.read()[1]);
}

void AXIvideo2Mat44::thread_video_in_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          !esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1))))) {
        video_in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_video_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_sel.read())) {
        video_in_V_data_V_0_data_out = video_in_V_data_V_0_payload_B.read();
    } else {
        video_in_V_data_V_0_data_out = video_in_V_data_V_0_payload_A.read();
    }
}

void AXIvideo2Mat44::thread_video_in_V_data_V_0_load_A() {
    video_in_V_data_V_0_load_A = (video_in_V_data_V_0_state_cmp_full.read() & ~video_in_V_data_V_0_sel_wr.read());
}

void AXIvideo2Mat44::thread_video_in_V_data_V_0_load_B() {
    video_in_V_data_V_0_load_B = (video_in_V_data_V_0_sel_wr.read() & video_in_V_data_V_0_state_cmp_full.read());
}

void AXIvideo2Mat44::thread_video_in_V_data_V_0_sel() {
    video_in_V_data_V_0_sel = video_in_V_data_V_0_sel_rd.read();
}

void AXIvideo2Mat44::thread_video_in_V_data_V_0_state_cmp_full() {
    video_in_V_data_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2Mat44::thread_video_in_V_data_V_0_vld_in() {
    video_in_V_data_V_0_vld_in = video_in_TVALID.read();
}

void AXIvideo2Mat44::thread_video_in_V_data_V_0_vld_out() {
    video_in_V_data_V_0_vld_out =  (sc_logic) (video_in_V_data_V_0_state.read()[0]);
}

void AXIvideo2Mat44::thread_video_in_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          !esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1))))) {
        video_in_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_video_in_V_dest_V_0_vld_in() {
    video_in_V_dest_V_0_vld_in = video_in_TVALID.read();
}

void AXIvideo2Mat44::thread_video_in_V_last_V_0_ack_in() {
    video_in_V_last_V_0_ack_in =  (sc_logic) (video_in_V_last_V_0_state.read()[1]);
}

void AXIvideo2Mat44::thread_video_in_V_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          !esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1))))) {
        video_in_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_video_in_V_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_sel.read())) {
        video_in_V_last_V_0_data_out = video_in_V_last_V_0_payload_B.read();
    } else {
        video_in_V_last_V_0_data_out = video_in_V_last_V_0_payload_A.read();
    }
}

void AXIvideo2Mat44::thread_video_in_V_last_V_0_load_A() {
    video_in_V_last_V_0_load_A = (video_in_V_last_V_0_state_cmp_full.read() & ~video_in_V_last_V_0_sel_wr.read());
}

void AXIvideo2Mat44::thread_video_in_V_last_V_0_load_B() {
    video_in_V_last_V_0_load_B = (video_in_V_last_V_0_sel_wr.read() & video_in_V_last_V_0_state_cmp_full.read());
}

void AXIvideo2Mat44::thread_video_in_V_last_V_0_sel() {
    video_in_V_last_V_0_sel = video_in_V_last_V_0_sel_rd.read();
}

void AXIvideo2Mat44::thread_video_in_V_last_V_0_state_cmp_full() {
    video_in_V_last_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2Mat44::thread_video_in_V_last_V_0_vld_in() {
    video_in_V_last_V_0_vld_in = video_in_TVALID.read();
}

void AXIvideo2Mat44::thread_video_in_V_last_V_0_vld_out() {
    video_in_V_last_V_0_vld_out =  (sc_logic) (video_in_V_last_V_0_state.read()[0]);
}

void AXIvideo2Mat44::thread_video_in_V_user_V_0_ack_in() {
    video_in_V_user_V_0_ack_in =  (sc_logic) (video_in_V_user_V_0_state.read()[1]);
}

void AXIvideo2Mat44::thread_video_in_V_user_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          !esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_reg_758.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_i_i_i_reg_767.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1))))) {
        video_in_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat44::thread_video_in_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_sel.read())) {
        video_in_V_user_V_0_data_out = video_in_V_user_V_0_payload_B.read();
    } else {
        video_in_V_user_V_0_data_out = video_in_V_user_V_0_payload_A.read();
    }
}

void AXIvideo2Mat44::thread_video_in_V_user_V_0_load_A() {
    video_in_V_user_V_0_load_A = (video_in_V_user_V_0_state_cmp_full.read() & ~video_in_V_user_V_0_sel_wr.read());
}

void AXIvideo2Mat44::thread_video_in_V_user_V_0_load_B() {
    video_in_V_user_V_0_load_B = (video_in_V_user_V_0_sel_wr.read() & video_in_V_user_V_0_state_cmp_full.read());
}

void AXIvideo2Mat44::thread_video_in_V_user_V_0_sel() {
    video_in_V_user_V_0_sel = video_in_V_user_V_0_sel_rd.read();
}

void AXIvideo2Mat44::thread_video_in_V_user_V_0_state_cmp_full() {
    video_in_V_user_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2Mat44::thread_video_in_V_user_V_0_vld_in() {
    video_in_V_user_V_0_vld_in = video_in_TVALID.read();
}

void AXIvideo2Mat44::thread_video_in_V_user_V_0_vld_out() {
    video_in_V_user_V_0_vld_out =  (sc_logic) (video_in_V_user_V_0_state.read()[0]);
}

void AXIvideo2Mat44::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_condition_671.read(), ap_const_boolean_1)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_user_V_fu_658_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((!esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_user_V_fu_658_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_i_i_fu_667_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_condition_703.read(), ap_const_boolean_1)) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_i_i_i_reg_605.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

