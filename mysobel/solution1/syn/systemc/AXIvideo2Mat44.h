// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AXIvideo2Mat44_HH_
#define _AXIvideo2Mat44_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct AXIvideo2Mat44 : public sc_module {
    // Port declarations 104
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > video_in_TDATA;
    sc_in< sc_logic > video_in_TVALID;
    sc_out< sc_logic > video_in_TREADY;
    sc_in< sc_lv<2> > video_in_TKEEP;
    sc_in< sc_lv<2> > video_in_TSTRB;
    sc_in< sc_lv<1> > video_in_TUSER;
    sc_in< sc_lv<1> > video_in_TLAST;
    sc_in< sc_lv<1> > video_in_TID;
    sc_in< sc_lv<1> > video_in_TDEST;
    sc_in< sc_lv<32> > rows;
    sc_in< sc_lv<32> > cols;
    sc_out< sc_lv<8> > img_0_data_stream_0_din;
    sc_in< sc_logic > img_0_data_stream_0_full_n;
    sc_out< sc_logic > img_0_data_stream_0_write;
    sc_out< sc_lv<8> > img_0_data_stream_1_din;
    sc_in< sc_logic > img_0_data_stream_1_full_n;
    sc_out< sc_logic > img_0_data_stream_1_write;
    sc_in< sc_lv<32> > C_XR0C0;
    sc_in< sc_lv<32> > C_XR0C1;
    sc_in< sc_lv<32> > C_XR0C2;
    sc_in< sc_lv<32> > C_XR1C0;
    sc_in< sc_lv<32> > C_XR1C1;
    sc_in< sc_lv<32> > C_XR1C2;
    sc_in< sc_lv<32> > C_XR2C0;
    sc_in< sc_lv<32> > C_XR2C1;
    sc_in< sc_lv<32> > C_XR2C2;
    sc_in< sc_lv<32> > C_YR0C0;
    sc_in< sc_lv<32> > C_YR0C1;
    sc_in< sc_lv<32> > C_YR0C2;
    sc_in< sc_lv<32> > C_YR1C0;
    sc_in< sc_lv<32> > C_YR1C1;
    sc_in< sc_lv<32> > C_YR1C2;
    sc_in< sc_lv<32> > C_YR2C0;
    sc_in< sc_lv<32> > C_YR2C1;
    sc_in< sc_lv<32> > c_high_thresh;
    sc_in< sc_lv<32> > c_low_thresh;
    sc_in< sc_lv<32> > c_invert;
    sc_out< sc_lv<32> > C_XR0C0_channel_din;
    sc_in< sc_logic > C_XR0C0_channel_full_n;
    sc_out< sc_logic > C_XR0C0_channel_write;
    sc_out< sc_lv<32> > C_XR0C1_channel_din;
    sc_in< sc_logic > C_XR0C1_channel_full_n;
    sc_out< sc_logic > C_XR0C1_channel_write;
    sc_out< sc_lv<32> > C_XR0C2_channel_din;
    sc_in< sc_logic > C_XR0C2_channel_full_n;
    sc_out< sc_logic > C_XR0C2_channel_write;
    sc_out< sc_lv<32> > C_XR1C0_channel_din;
    sc_in< sc_logic > C_XR1C0_channel_full_n;
    sc_out< sc_logic > C_XR1C0_channel_write;
    sc_out< sc_lv<32> > C_XR1C1_channel_din;
    sc_in< sc_logic > C_XR1C1_channel_full_n;
    sc_out< sc_logic > C_XR1C1_channel_write;
    sc_out< sc_lv<32> > C_XR1C2_channel_din;
    sc_in< sc_logic > C_XR1C2_channel_full_n;
    sc_out< sc_logic > C_XR1C2_channel_write;
    sc_out< sc_lv<32> > C_XR2C0_channel_din;
    sc_in< sc_logic > C_XR2C0_channel_full_n;
    sc_out< sc_logic > C_XR2C0_channel_write;
    sc_out< sc_lv<32> > C_XR2C1_channel_din;
    sc_in< sc_logic > C_XR2C1_channel_full_n;
    sc_out< sc_logic > C_XR2C1_channel_write;
    sc_out< sc_lv<32> > C_XR2C2_channel_din;
    sc_in< sc_logic > C_XR2C2_channel_full_n;
    sc_out< sc_logic > C_XR2C2_channel_write;
    sc_out< sc_lv<32> > C_YR0C0_channel_din;
    sc_in< sc_logic > C_YR0C0_channel_full_n;
    sc_out< sc_logic > C_YR0C0_channel_write;
    sc_out< sc_lv<32> > C_YR0C1_channel_din;
    sc_in< sc_logic > C_YR0C1_channel_full_n;
    sc_out< sc_logic > C_YR0C1_channel_write;
    sc_out< sc_lv<32> > C_YR0C2_channel_din;
    sc_in< sc_logic > C_YR0C2_channel_full_n;
    sc_out< sc_logic > C_YR0C2_channel_write;
    sc_out< sc_lv<32> > C_YR1C0_channel_din;
    sc_in< sc_logic > C_YR1C0_channel_full_n;
    sc_out< sc_logic > C_YR1C0_channel_write;
    sc_out< sc_lv<32> > C_YR1C1_channel_din;
    sc_in< sc_logic > C_YR1C1_channel_full_n;
    sc_out< sc_logic > C_YR1C1_channel_write;
    sc_out< sc_lv<32> > C_YR1C2_channel_din;
    sc_in< sc_logic > C_YR1C2_channel_full_n;
    sc_out< sc_logic > C_YR1C2_channel_write;
    sc_out< sc_lv<32> > C_YR2C0_channel_din;
    sc_in< sc_logic > C_YR2C0_channel_full_n;
    sc_out< sc_logic > C_YR2C0_channel_write;
    sc_out< sc_lv<32> > C_YR2C1_channel_din;
    sc_in< sc_logic > C_YR2C1_channel_full_n;
    sc_out< sc_logic > C_YR2C1_channel_write;
    sc_out< sc_lv<32> > c_high_thresh_channe_din;
    sc_in< sc_logic > c_high_thresh_channe_full_n;
    sc_out< sc_logic > c_high_thresh_channe_write;
    sc_out< sc_lv<32> > c_low_thresh_channel_1_din;
    sc_in< sc_logic > c_low_thresh_channel_1_full_n;
    sc_out< sc_logic > c_low_thresh_channel_1_write;
    sc_out< sc_lv<32> > c_invert_channel_din;
    sc_in< sc_logic > c_invert_channel_full_n;
    sc_out< sc_logic > c_invert_channel_write;


    // Module declarations
    AXIvideo2Mat44(sc_module_name name);
    SC_HAS_PROCESS(AXIvideo2Mat44);

    ~AXIvideo2Mat44();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<16> > video_in_V_data_V_0_data_out;
    sc_signal< sc_logic > video_in_V_data_V_0_vld_in;
    sc_signal< sc_logic > video_in_V_data_V_0_vld_out;
    sc_signal< sc_logic > video_in_V_data_V_0_ack_in;
    sc_signal< sc_logic > video_in_V_data_V_0_ack_out;
    sc_signal< sc_lv<16> > video_in_V_data_V_0_payload_A;
    sc_signal< sc_lv<16> > video_in_V_data_V_0_payload_B;
    sc_signal< sc_logic > video_in_V_data_V_0_sel_rd;
    sc_signal< sc_logic > video_in_V_data_V_0_sel_wr;
    sc_signal< sc_logic > video_in_V_data_V_0_sel;
    sc_signal< sc_logic > video_in_V_data_V_0_load_A;
    sc_signal< sc_logic > video_in_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > video_in_V_data_V_0_state;
    sc_signal< sc_logic > video_in_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > video_in_V_user_V_0_data_out;
    sc_signal< sc_logic > video_in_V_user_V_0_vld_in;
    sc_signal< sc_logic > video_in_V_user_V_0_vld_out;
    sc_signal< sc_logic > video_in_V_user_V_0_ack_in;
    sc_signal< sc_logic > video_in_V_user_V_0_ack_out;
    sc_signal< sc_lv<1> > video_in_V_user_V_0_payload_A;
    sc_signal< sc_lv<1> > video_in_V_user_V_0_payload_B;
    sc_signal< sc_logic > video_in_V_user_V_0_sel_rd;
    sc_signal< sc_logic > video_in_V_user_V_0_sel_wr;
    sc_signal< sc_logic > video_in_V_user_V_0_sel;
    sc_signal< sc_logic > video_in_V_user_V_0_load_A;
    sc_signal< sc_logic > video_in_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > video_in_V_user_V_0_state;
    sc_signal< sc_logic > video_in_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > video_in_V_last_V_0_data_out;
    sc_signal< sc_logic > video_in_V_last_V_0_vld_in;
    sc_signal< sc_logic > video_in_V_last_V_0_vld_out;
    sc_signal< sc_logic > video_in_V_last_V_0_ack_in;
    sc_signal< sc_logic > video_in_V_last_V_0_ack_out;
    sc_signal< sc_lv<1> > video_in_V_last_V_0_payload_A;
    sc_signal< sc_lv<1> > video_in_V_last_V_0_payload_B;
    sc_signal< sc_logic > video_in_V_last_V_0_sel_rd;
    sc_signal< sc_logic > video_in_V_last_V_0_sel_wr;
    sc_signal< sc_logic > video_in_V_last_V_0_sel;
    sc_signal< sc_logic > video_in_V_last_V_0_load_A;
    sc_signal< sc_logic > video_in_V_last_V_0_load_B;
    sc_signal< sc_lv<2> > video_in_V_last_V_0_state;
    sc_signal< sc_logic > video_in_V_last_V_0_state_cmp_full;
    sc_signal< sc_logic > video_in_V_dest_V_0_vld_in;
    sc_signal< sc_logic > video_in_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > video_in_V_dest_V_0_state;
    sc_signal< sc_logic > video_in_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > exitcond_i_i_i_i_reg_758;
    sc_signal< sc_lv<1> > brmerge_i_i_i_i_reg_767;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_lv<1> > eol_2_i_i_i_i_reg_605;
    sc_signal< sc_logic > img_0_data_stream_0_blk_n;
    sc_signal< sc_logic > img_0_data_stream_1_blk_n;
    sc_signal< sc_logic > C_XR0C0_channel_blk_n;
    sc_signal< sc_logic > C_XR0C1_channel_blk_n;
    sc_signal< sc_logic > C_XR0C2_channel_blk_n;
    sc_signal< sc_logic > C_XR1C0_channel_blk_n;
    sc_signal< sc_logic > C_XR1C1_channel_blk_n;
    sc_signal< sc_logic > C_XR1C2_channel_blk_n;
    sc_signal< sc_logic > C_XR2C0_channel_blk_n;
    sc_signal< sc_logic > C_XR2C1_channel_blk_n;
    sc_signal< sc_logic > C_XR2C2_channel_blk_n;
    sc_signal< sc_logic > C_YR0C0_channel_blk_n;
    sc_signal< sc_logic > C_YR0C1_channel_blk_n;
    sc_signal< sc_logic > C_YR0C2_channel_blk_n;
    sc_signal< sc_logic > C_YR1C0_channel_blk_n;
    sc_signal< sc_logic > C_YR1C1_channel_blk_n;
    sc_signal< sc_logic > C_YR1C2_channel_blk_n;
    sc_signal< sc_logic > C_YR2C0_channel_blk_n;
    sc_signal< sc_logic > C_YR2C1_channel_blk_n;
    sc_signal< sc_logic > c_high_thresh_channe_blk_n;
    sc_signal< sc_logic > c_low_thresh_channel_1_blk_n;
    sc_signal< sc_logic > c_invert_channel_blk_n;
    sc_signal< sc_lv<11> > p_3_i_i_i_i_reg_535;
    sc_signal< sc_lv<1> > eol_i_i_i_i_reg_546;
    sc_signal< sc_lv<1> > eol_reg_558;
    sc_signal< sc_lv<16> > axi_data_V_1_i_i_i_i_reg_569;
    sc_signal< sc_lv<1> > axi_last_V_3_i_i_i_i_reg_616;
    sc_signal< sc_lv<16> > axi_data_V_3_i_i_i_i_reg_628;
    sc_signal< sc_lv<11> > tmp_fu_650_p1;
    sc_signal< bool > ap_condition_671;
    sc_signal< sc_lv<11> > tmp_30_fu_654_p1;
    sc_signal< sc_lv<16> > tmp_data_V_reg_729;
    sc_signal< sc_lv<1> > tmp_last_V_reg_737;
    sc_signal< sc_lv<1> > exitcond2_i_i_i_i_fu_667_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > i_V_fu_672_p2;
    sc_signal< sc_lv<11> > i_V_reg_753;
    sc_signal< sc_lv<1> > exitcond_i_i_i_i_fu_678_p2;
    sc_signal< bool > ap_condition_703;
    sc_signal< sc_lv<11> > j_V_fu_683_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > brmerge_i_i_i_i_fu_692_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > eol_2_i_i_i_i_phi_fu_608_p4;
    sc_signal< sc_lv<1> > axi_last_V1_i_i_i_i_reg_504;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<16> > axi_data_V1_i_i_i_i_reg_514;
    sc_signal< sc_lv<11> > p_i_i_i_i_reg_524;
    sc_signal< sc_lv<1> > eol_i_i_i_i_phi_fu_550_p4;
    sc_signal< sc_lv<1> > axi_last_V_2_i_i_i_i_phi_fu_585_p4;
    sc_signal< sc_lv<16> > p_Val2_s_phi_fu_597_p4;
    sc_signal< sc_lv<1> > ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580;
    sc_signal< sc_lv<16> > ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593;
    sc_signal< sc_lv<1> > sof_1_i_i_i_i_fu_176;
    sc_signal< sc_lv<1> > tmp_user_V_fu_658_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< bool > ap_condition_584;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_pp1_stage0;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_pp2_stage0;
    static const sc_lv<8> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_C_XR0C0_channel_blk_n();
    void thread_C_XR0C0_channel_din();
    void thread_C_XR0C0_channel_write();
    void thread_C_XR0C1_channel_blk_n();
    void thread_C_XR0C1_channel_din();
    void thread_C_XR0C1_channel_write();
    void thread_C_XR0C2_channel_blk_n();
    void thread_C_XR0C2_channel_din();
    void thread_C_XR0C2_channel_write();
    void thread_C_XR1C0_channel_blk_n();
    void thread_C_XR1C0_channel_din();
    void thread_C_XR1C0_channel_write();
    void thread_C_XR1C1_channel_blk_n();
    void thread_C_XR1C1_channel_din();
    void thread_C_XR1C1_channel_write();
    void thread_C_XR1C2_channel_blk_n();
    void thread_C_XR1C2_channel_din();
    void thread_C_XR1C2_channel_write();
    void thread_C_XR2C0_channel_blk_n();
    void thread_C_XR2C0_channel_din();
    void thread_C_XR2C0_channel_write();
    void thread_C_XR2C1_channel_blk_n();
    void thread_C_XR2C1_channel_din();
    void thread_C_XR2C1_channel_write();
    void thread_C_XR2C2_channel_blk_n();
    void thread_C_XR2C2_channel_din();
    void thread_C_XR2C2_channel_write();
    void thread_C_YR0C0_channel_blk_n();
    void thread_C_YR0C0_channel_din();
    void thread_C_YR0C0_channel_write();
    void thread_C_YR0C1_channel_blk_n();
    void thread_C_YR0C1_channel_din();
    void thread_C_YR0C1_channel_write();
    void thread_C_YR0C2_channel_blk_n();
    void thread_C_YR0C2_channel_din();
    void thread_C_YR0C2_channel_write();
    void thread_C_YR1C0_channel_blk_n();
    void thread_C_YR1C0_channel_din();
    void thread_C_YR1C0_channel_write();
    void thread_C_YR1C1_channel_blk_n();
    void thread_C_YR1C1_channel_din();
    void thread_C_YR1C1_channel_write();
    void thread_C_YR1C2_channel_blk_n();
    void thread_C_YR1C2_channel_din();
    void thread_C_YR1C2_channel_write();
    void thread_C_YR2C0_channel_blk_n();
    void thread_C_YR2C0_channel_din();
    void thread_C_YR2C0_channel_write();
    void thread_C_YR2C1_channel_blk_n();
    void thread_C_YR2C1_channel_din();
    void thread_C_YR2C1_channel_write();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_condition_584();
    void thread_ap_condition_671();
    void thread_ap_condition_703();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580();
    void thread_ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593();
    void thread_ap_ready();
    void thread_axi_last_V_2_i_i_i_i_phi_fu_585_p4();
    void thread_brmerge_i_i_i_i_fu_692_p2();
    void thread_c_high_thresh_channe_blk_n();
    void thread_c_high_thresh_channe_din();
    void thread_c_high_thresh_channe_write();
    void thread_c_invert_channel_blk_n();
    void thread_c_invert_channel_din();
    void thread_c_invert_channel_write();
    void thread_c_low_thresh_channel_1_blk_n();
    void thread_c_low_thresh_channel_1_din();
    void thread_c_low_thresh_channel_1_write();
    void thread_eol_2_i_i_i_i_phi_fu_608_p4();
    void thread_eol_i_i_i_i_phi_fu_550_p4();
    void thread_exitcond2_i_i_i_i_fu_667_p2();
    void thread_exitcond_i_i_i_i_fu_678_p2();
    void thread_i_V_fu_672_p2();
    void thread_img_0_data_stream_0_blk_n();
    void thread_img_0_data_stream_0_din();
    void thread_img_0_data_stream_0_write();
    void thread_img_0_data_stream_1_blk_n();
    void thread_img_0_data_stream_1_din();
    void thread_img_0_data_stream_1_write();
    void thread_j_V_fu_683_p2();
    void thread_p_Val2_s_phi_fu_597_p4();
    void thread_tmp_30_fu_654_p1();
    void thread_tmp_fu_650_p1();
    void thread_tmp_user_V_fu_658_p1();
    void thread_video_in_TDATA_blk_n();
    void thread_video_in_TREADY();
    void thread_video_in_V_data_V_0_ack_in();
    void thread_video_in_V_data_V_0_ack_out();
    void thread_video_in_V_data_V_0_data_out();
    void thread_video_in_V_data_V_0_load_A();
    void thread_video_in_V_data_V_0_load_B();
    void thread_video_in_V_data_V_0_sel();
    void thread_video_in_V_data_V_0_state_cmp_full();
    void thread_video_in_V_data_V_0_vld_in();
    void thread_video_in_V_data_V_0_vld_out();
    void thread_video_in_V_dest_V_0_ack_out();
    void thread_video_in_V_dest_V_0_vld_in();
    void thread_video_in_V_last_V_0_ack_in();
    void thread_video_in_V_last_V_0_ack_out();
    void thread_video_in_V_last_V_0_data_out();
    void thread_video_in_V_last_V_0_load_A();
    void thread_video_in_V_last_V_0_load_B();
    void thread_video_in_V_last_V_0_sel();
    void thread_video_in_V_last_V_0_state_cmp_full();
    void thread_video_in_V_last_V_0_vld_in();
    void thread_video_in_V_last_V_0_vld_out();
    void thread_video_in_V_user_V_0_ack_in();
    void thread_video_in_V_user_V_0_ack_out();
    void thread_video_in_V_user_V_0_data_out();
    void thread_video_in_V_user_V_0_load_A();
    void thread_video_in_V_user_V_0_load_B();
    void thread_video_in_V_user_V_0_sel();
    void thread_video_in_V_user_V_0_state_cmp_full();
    void thread_video_in_V_user_V_0_vld_in();
    void thread_video_in_V_user_V_0_vld_out();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
