// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Mat2AXIvideo_HH_
#define _Mat2AXIvideo_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Mat2AXIvideo : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > rows;
    sc_in< sc_lv<32> > cols;
    sc_in< sc_lv<8> > img_1_data_stream_0_dout;
    sc_in< sc_logic > img_1_data_stream_0_empty_n;
    sc_out< sc_logic > img_1_data_stream_0_read;
    sc_in< sc_lv<8> > img_1_data_stream_1_dout;
    sc_in< sc_logic > img_1_data_stream_1_empty_n;
    sc_out< sc_logic > img_1_data_stream_1_read;
    sc_out< sc_lv<16> > video_out_TDATA;
    sc_out< sc_logic > video_out_TVALID;
    sc_in< sc_logic > video_out_TREADY;
    sc_out< sc_lv<2> > video_out_TKEEP;
    sc_out< sc_lv<2> > video_out_TSTRB;
    sc_out< sc_lv<1> > video_out_TUSER;
    sc_out< sc_lv<1> > video_out_TLAST;
    sc_out< sc_lv<1> > video_out_TID;
    sc_out< sc_lv<1> > video_out_TDEST;


    // Module declarations
    Mat2AXIvideo(sc_module_name name);
    SC_HAS_PROCESS(Mat2AXIvideo);

    ~Mat2AXIvideo();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<16> > video_out_V_data_V_1_data_out;
    sc_signal< sc_logic > video_out_V_data_V_1_vld_in;
    sc_signal< sc_logic > video_out_V_data_V_1_vld_out;
    sc_signal< sc_logic > video_out_V_data_V_1_ack_in;
    sc_signal< sc_logic > video_out_V_data_V_1_ack_out;
    sc_signal< sc_lv<16> > video_out_V_data_V_1_payload_A;
    sc_signal< sc_lv<16> > video_out_V_data_V_1_payload_B;
    sc_signal< sc_logic > video_out_V_data_V_1_sel_rd;
    sc_signal< sc_logic > video_out_V_data_V_1_sel_wr;
    sc_signal< sc_logic > video_out_V_data_V_1_sel;
    sc_signal< sc_logic > video_out_V_data_V_1_load_A;
    sc_signal< sc_logic > video_out_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > video_out_V_data_V_1_state;
    sc_signal< sc_logic > video_out_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > video_out_V_keep_V_1_data_out;
    sc_signal< sc_logic > video_out_V_keep_V_1_vld_in;
    sc_signal< sc_logic > video_out_V_keep_V_1_vld_out;
    sc_signal< sc_logic > video_out_V_keep_V_1_ack_in;
    sc_signal< sc_logic > video_out_V_keep_V_1_ack_out;
    sc_signal< sc_logic > video_out_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > video_out_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > video_out_V_keep_V_1_state;
    sc_signal< sc_lv<2> > video_out_V_strb_V_1_data_out;
    sc_signal< sc_logic > video_out_V_strb_V_1_vld_in;
    sc_signal< sc_logic > video_out_V_strb_V_1_vld_out;
    sc_signal< sc_logic > video_out_V_strb_V_1_ack_in;
    sc_signal< sc_logic > video_out_V_strb_V_1_ack_out;
    sc_signal< sc_logic > video_out_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > video_out_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > video_out_V_strb_V_1_state;
    sc_signal< sc_lv<1> > video_out_V_user_V_1_data_out;
    sc_signal< sc_logic > video_out_V_user_V_1_vld_in;
    sc_signal< sc_logic > video_out_V_user_V_1_vld_out;
    sc_signal< sc_logic > video_out_V_user_V_1_ack_in;
    sc_signal< sc_logic > video_out_V_user_V_1_ack_out;
    sc_signal< sc_lv<1> > video_out_V_user_V_1_payload_A;
    sc_signal< sc_lv<1> > video_out_V_user_V_1_payload_B;
    sc_signal< sc_logic > video_out_V_user_V_1_sel_rd;
    sc_signal< sc_logic > video_out_V_user_V_1_sel_wr;
    sc_signal< sc_logic > video_out_V_user_V_1_sel;
    sc_signal< sc_logic > video_out_V_user_V_1_load_A;
    sc_signal< sc_logic > video_out_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > video_out_V_user_V_1_state;
    sc_signal< sc_logic > video_out_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > video_out_V_last_V_1_data_out;
    sc_signal< sc_logic > video_out_V_last_V_1_vld_in;
    sc_signal< sc_logic > video_out_V_last_V_1_vld_out;
    sc_signal< sc_logic > video_out_V_last_V_1_ack_in;
    sc_signal< sc_logic > video_out_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > video_out_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > video_out_V_last_V_1_payload_B;
    sc_signal< sc_logic > video_out_V_last_V_1_sel_rd;
    sc_signal< sc_logic > video_out_V_last_V_1_sel_wr;
    sc_signal< sc_logic > video_out_V_last_V_1_sel;
    sc_signal< sc_logic > video_out_V_last_V_1_load_A;
    sc_signal< sc_logic > video_out_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > video_out_V_last_V_1_state;
    sc_signal< sc_logic > video_out_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > video_out_V_id_V_1_data_out;
    sc_signal< sc_logic > video_out_V_id_V_1_vld_in;
    sc_signal< sc_logic > video_out_V_id_V_1_vld_out;
    sc_signal< sc_logic > video_out_V_id_V_1_ack_in;
    sc_signal< sc_logic > video_out_V_id_V_1_ack_out;
    sc_signal< sc_logic > video_out_V_id_V_1_sel_rd;
    sc_signal< sc_logic > video_out_V_id_V_1_sel;
    sc_signal< sc_lv<2> > video_out_V_id_V_1_state;
    sc_signal< sc_lv<1> > video_out_V_dest_V_1_data_out;
    sc_signal< sc_logic > video_out_V_dest_V_1_vld_in;
    sc_signal< sc_logic > video_out_V_dest_V_1_vld_out;
    sc_signal< sc_logic > video_out_V_dest_V_1_ack_in;
    sc_signal< sc_logic > video_out_V_dest_V_1_ack_out;
    sc_signal< sc_logic > video_out_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > video_out_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > video_out_V_dest_V_1_state;
    sc_signal< sc_logic > img_1_data_stream_0_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > exitcond_i_i_reg_268;
    sc_signal< sc_logic > img_1_data_stream_1_blk_n;
    sc_signal< sc_logic > video_out_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_exitcond_i_i_reg_268;
    sc_signal< sc_lv<11> > p_1_i_i_reg_162;
    sc_signal< sc_lv<11> > tmp_fu_173_p1;
    sc_signal< sc_lv<11> > tmp_26_fu_177_p1;
    sc_signal< sc_lv<11> > r_V_fu_181_p2;
    sc_signal< sc_lv<1> > exitcond1_i_i_fu_192_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< bool > ap_condition_499;
    sc_signal< sc_lv<11> > i_V_fu_197_p2;
    sc_signal< sc_lv<11> > i_V_reg_263;
    sc_signal< sc_lv<1> > exitcond_i_i_fu_203_p2;
    sc_signal< bool > ap_condition_514;
    sc_signal< sc_lv<11> > j_V_fu_208_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > axi_last_V_fu_214_p2;
    sc_signal< sc_lv<1> > axi_last_V_reg_277;
    sc_signal< sc_lv<16> > tmp_data_V_fu_223_p3;
    sc_signal< sc_lv<11> > p_i_i_reg_151;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_user_V_fu_94;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<11> ap_const_lv11_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_condition_499();
    void thread_ap_condition_514();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_axi_last_V_fu_214_p2();
    void thread_exitcond1_i_i_fu_192_p2();
    void thread_exitcond_i_i_fu_203_p2();
    void thread_i_V_fu_197_p2();
    void thread_img_1_data_stream_0_blk_n();
    void thread_img_1_data_stream_0_read();
    void thread_img_1_data_stream_1_blk_n();
    void thread_img_1_data_stream_1_read();
    void thread_j_V_fu_208_p2();
    void thread_r_V_fu_181_p2();
    void thread_tmp_26_fu_177_p1();
    void thread_tmp_data_V_fu_223_p3();
    void thread_tmp_fu_173_p1();
    void thread_video_out_TDATA();
    void thread_video_out_TDATA_blk_n();
    void thread_video_out_TDEST();
    void thread_video_out_TID();
    void thread_video_out_TKEEP();
    void thread_video_out_TLAST();
    void thread_video_out_TSTRB();
    void thread_video_out_TUSER();
    void thread_video_out_TVALID();
    void thread_video_out_V_data_V_1_ack_in();
    void thread_video_out_V_data_V_1_ack_out();
    void thread_video_out_V_data_V_1_data_out();
    void thread_video_out_V_data_V_1_load_A();
    void thread_video_out_V_data_V_1_load_B();
    void thread_video_out_V_data_V_1_sel();
    void thread_video_out_V_data_V_1_state_cmp_full();
    void thread_video_out_V_data_V_1_vld_in();
    void thread_video_out_V_data_V_1_vld_out();
    void thread_video_out_V_dest_V_1_ack_in();
    void thread_video_out_V_dest_V_1_ack_out();
    void thread_video_out_V_dest_V_1_data_out();
    void thread_video_out_V_dest_V_1_sel();
    void thread_video_out_V_dest_V_1_vld_in();
    void thread_video_out_V_dest_V_1_vld_out();
    void thread_video_out_V_id_V_1_ack_in();
    void thread_video_out_V_id_V_1_ack_out();
    void thread_video_out_V_id_V_1_data_out();
    void thread_video_out_V_id_V_1_sel();
    void thread_video_out_V_id_V_1_vld_in();
    void thread_video_out_V_id_V_1_vld_out();
    void thread_video_out_V_keep_V_1_ack_in();
    void thread_video_out_V_keep_V_1_ack_out();
    void thread_video_out_V_keep_V_1_data_out();
    void thread_video_out_V_keep_V_1_sel();
    void thread_video_out_V_keep_V_1_vld_in();
    void thread_video_out_V_keep_V_1_vld_out();
    void thread_video_out_V_last_V_1_ack_in();
    void thread_video_out_V_last_V_1_ack_out();
    void thread_video_out_V_last_V_1_data_out();
    void thread_video_out_V_last_V_1_load_A();
    void thread_video_out_V_last_V_1_load_B();
    void thread_video_out_V_last_V_1_sel();
    void thread_video_out_V_last_V_1_state_cmp_full();
    void thread_video_out_V_last_V_1_vld_in();
    void thread_video_out_V_last_V_1_vld_out();
    void thread_video_out_V_strb_V_1_ack_in();
    void thread_video_out_V_strb_V_1_ack_out();
    void thread_video_out_V_strb_V_1_data_out();
    void thread_video_out_V_strb_V_1_sel();
    void thread_video_out_V_strb_V_1_vld_in();
    void thread_video_out_V_strb_V_1_vld_out();
    void thread_video_out_V_user_V_1_ack_in();
    void thread_video_out_V_user_V_1_ack_out();
    void thread_video_out_V_user_V_1_data_out();
    void thread_video_out_V_user_V_1_load_A();
    void thread_video_out_V_user_V_1_load_B();
    void thread_video_out_V_user_V_1_sel();
    void thread_video_out_V_user_V_1_state_cmp_full();
    void thread_video_out_V_user_V_1_vld_in();
    void thread_video_out_V_user_V_1_vld_out();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
