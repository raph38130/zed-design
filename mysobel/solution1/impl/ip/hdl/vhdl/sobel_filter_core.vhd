-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_filter_core is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_data_stream_0_V_read : OUT STD_LOGIC;
    src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_1_V_empty_n : IN STD_LOGIC;
    src_data_stream_1_V_read : OUT STD_LOGIC;
    dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_0_V_full_n : IN STD_LOGIC;
    dst_data_stream_0_V_write : OUT STD_LOGIC;
    dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_1_V_full_n : IN STD_LOGIC;
    dst_data_stream_1_V_write : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C0_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C0_channel_empty_n : IN STD_LOGIC;
    C_XR0C0_channel_read : OUT STD_LOGIC;
    C_XR0C1_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C1_channel_empty_n : IN STD_LOGIC;
    C_XR0C1_channel_read : OUT STD_LOGIC;
    C_XR0C2_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C2_channel_empty_n : IN STD_LOGIC;
    C_XR0C2_channel_read : OUT STD_LOGIC;
    C_XR1C0_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C0_channel_empty_n : IN STD_LOGIC;
    C_XR1C0_channel_read : OUT STD_LOGIC;
    C_XR1C1_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C1_channel_empty_n : IN STD_LOGIC;
    C_XR1C1_channel_read : OUT STD_LOGIC;
    C_XR1C2_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C2_channel_empty_n : IN STD_LOGIC;
    C_XR1C2_channel_read : OUT STD_LOGIC;
    C_XR2C0_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C0_channel_empty_n : IN STD_LOGIC;
    C_XR2C0_channel_read : OUT STD_LOGIC;
    C_XR2C1_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C1_channel_empty_n : IN STD_LOGIC;
    C_XR2C1_channel_read : OUT STD_LOGIC;
    C_XR2C2_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C2_channel_empty_n : IN STD_LOGIC;
    C_XR2C2_channel_read : OUT STD_LOGIC;
    C_YR0C0_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C0_channel_empty_n : IN STD_LOGIC;
    C_YR0C0_channel_read : OUT STD_LOGIC;
    C_YR0C1_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C1_channel_empty_n : IN STD_LOGIC;
    C_YR0C1_channel_read : OUT STD_LOGIC;
    C_YR0C2_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C2_channel_empty_n : IN STD_LOGIC;
    C_YR0C2_channel_read : OUT STD_LOGIC;
    C_YR1C0_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C0_channel_empty_n : IN STD_LOGIC;
    C_YR1C0_channel_read : OUT STD_LOGIC;
    C_YR1C1_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C1_channel_empty_n : IN STD_LOGIC;
    C_YR1C1_channel_read : OUT STD_LOGIC;
    C_YR1C2_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C2_channel_empty_n : IN STD_LOGIC;
    C_YR1C2_channel_read : OUT STD_LOGIC;
    C_YR2C0_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C0_channel_empty_n : IN STD_LOGIC;
    C_YR2C0_channel_read : OUT STD_LOGIC;
    C_YR2C1_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C1_channel_empty_n : IN STD_LOGIC;
    C_YR2C1_channel_read : OUT STD_LOGIC;
    c_high_thresh_channe_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_high_thresh_channe_empty_n : IN STD_LOGIC;
    c_high_thresh_channe_read : OUT STD_LOGIC;
    c_low_thresh_channel_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_low_thresh_channel_1_empty_n : IN STD_LOGIC;
    c_low_thresh_channel_1_read : OUT STD_LOGIC;
    c_invert_channel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_invert_channel_empty_n : IN STD_LOGIC;
    c_invert_channel_read : OUT STD_LOGIC );
end;


architecture behav of sobel_filter_core is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_FF : STD_LOGIC_VECTOR (15 downto 0) := "0000000011111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_i_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1346 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_data_stream_1_V_blk_n : STD_LOGIC;
    signal dst_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal or_cond3_i_i_i_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_data_stream_1_V_blk_n : STD_LOGIC;
    signal C_XR0C0_channel_blk_n : STD_LOGIC;
    signal C_XR0C1_channel_blk_n : STD_LOGIC;
    signal C_XR0C2_channel_blk_n : STD_LOGIC;
    signal C_XR1C0_channel_blk_n : STD_LOGIC;
    signal C_XR1C1_channel_blk_n : STD_LOGIC;
    signal C_XR1C2_channel_blk_n : STD_LOGIC;
    signal C_XR2C0_channel_blk_n : STD_LOGIC;
    signal C_XR2C1_channel_blk_n : STD_LOGIC;
    signal C_XR2C2_channel_blk_n : STD_LOGIC;
    signal C_YR0C0_channel_blk_n : STD_LOGIC;
    signal C_YR0C1_channel_blk_n : STD_LOGIC;
    signal C_YR0C2_channel_blk_n : STD_LOGIC;
    signal C_YR1C0_channel_blk_n : STD_LOGIC;
    signal C_YR1C1_channel_blk_n : STD_LOGIC;
    signal C_YR1C2_channel_blk_n : STD_LOGIC;
    signal C_YR2C0_channel_blk_n : STD_LOGIC;
    signal C_YR2C1_channel_blk_n : STD_LOGIC;
    signal c_high_thresh_channe_blk_n : STD_LOGIC;
    signal c_low_thresh_channel_1_blk_n : STD_LOGIC;
    signal c_invert_channel_blk_n : STD_LOGIC;
    signal col_assign_i_reg_391 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_condition_188 : BOOLEAN;
    signal ap_condition_196 : BOOLEAN;
    signal c_high_thresh_channe_1_reg_1155 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_245 : BOOLEAN;
    signal c_low_thresh_channel_reg_1160 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_cast_i_i_cast_i_fu_411_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_i_i_cast_i_fu_421_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_cast_i_i_cast_i_fu_425_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_i_i_cast_i_fu_435_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_3_i_fu_439_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_i_fu_445_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_36_0_i_i_i_i_fu_519_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_i_i_i_i_reg_1195 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_i_i_i_i_fu_523_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_i_i_i_i_reg_1200 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_1_i_i_i_i_fu_527_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_1_i_i_i_i_reg_1205 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_1_i_i_i_i_fu_531_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_1_i_i_i_i_reg_1210 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_2_i_i_i_i_fu_535_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_2_i_i_i_i_reg_1215 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_2_i_i_i_i_fu_539_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_2_i_i_i_i_reg_1220 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_i_i_i_i_fu_543_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_i_i_i_i_reg_1225 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_i_i_i_i_fu_547_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_i_i_i_i_reg_1230 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_1_i_i_i_i_fu_551_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_1_i_i_i_i_reg_1235 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_1_i_i_i_i_fu_555_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_1_i_i_i_i_reg_1240 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_2_i_i_i_i_fu_559_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_2_i_i_i_i_reg_1245 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_2_i_i_i_i_fu_563_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_2_i_i_i_i_reg_1250 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_i_i_i_i_fu_567_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_i_i_i_i_reg_1255 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_i_i_i_i_fu_571_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_i_i_i_i_reg_1260 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_1_i_i_i_i_fu_575_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_1_i_i_i_i_reg_1265 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_1_i_i_i_i_fu_579_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_1_i_i_i_i_reg_1270 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_2_i_i_i_i_fu_583_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_2_i_i_i_i_reg_1275 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_i_i_i_i_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_i_i_i_i_reg_1280 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_fu_602_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_reg_1289 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_34_i_i_i_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_i_i_i_reg_1294 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1299 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_i_i_i_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_i_i_i_reg_1304 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_i_i_i_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_i_i_i_reg_1309 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_i_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_fu_649_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_reg_1318 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_39_i_i_i_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_i_i_i_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_39_i_i_i_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_i_i_i_fu_660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_i_i_i_reg_1330 : STD_LOGIC_VECTOR (63 downto 0);
    signal buff_A_val_1_addr_reg_1335 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond_i_i_i_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_i_i_i_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_i_i_i_reg_1350 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_45_i_i_i_reg_1350 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_45_i_i_i_reg_1350 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_45_i_i_i_reg_1350 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_45_i_i_i_reg_1350 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_45_i_i_i_reg_1350 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_45_i_i_i_reg_1350 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_i_i_i_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_or_cond3_i_i_i_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_or_cond3_i_i_i_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_or_cond3_i_i_i_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_or_cond3_i_i_i_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_or_cond3_i_i_i_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal buff_C_val_1_0_loa_reg_1359 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp6_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp6_reg_1369 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_icmp6_reg_1369 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_icmp6_reg_1369 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_icmp6_reg_1369 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_icmp6_reg_1369 : STD_LOGIC_VECTOR (0 downto 0);
    signal buff_C_val_0_0_i_i_1_reg_1374 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_1_i_i_1_reg_1379 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_1_i_i_1_reg_1384 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_0_1_fu_747_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_0_1_reg_1389 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_1_fu_754_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_1_reg_1394 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_0_i_i_i_i_fu_771_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_0_i_i_i_i_reg_1399 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_0_i_i_i_i_fu_776_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_0_i_i_i_i_reg_1404 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_1_1_i_i_i_i_fu_785_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_1_1_i_i_i_i_reg_1409 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_1_1_i_i_i_i_fu_790_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_1_1_i_i_i_i_reg_1414 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_2_1_i_i_i_i_fu_799_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_2_1_i_i_i_i_reg_1419 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_2_1_i_i_i_i_fu_804_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_2_1_i_i_i_i_reg_1424 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_2_2_i_i_i_i_fu_813_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_2_2_i_i_i_i_reg_1429 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_i_fu_869_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp4_i_fu_869_p2 : signal is "no";
    signal tmp4_i_reg_1435 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1039_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_i_reg_1440 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal grp_fu_1063_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_i_reg_1445 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_i_fu_873_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp11_i_fu_873_p2 : signal is "no";
    signal tmp11_i_reg_1450 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1045_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_i_reg_1455 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1070_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_i_reg_1460 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_i_i_i_i_fu_907_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_i_i_i_i_reg_1465 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_i_i_i_i_fu_927_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_i_i_i_i_reg_1470 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_935_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_reg_1475 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_939_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_reg_1480 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val1_i_i_i_i_fu_963_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val1_i_i_i_i_reg_1485 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_i_i_i_i_fu_975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_i_i_i_i_reg_1490 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_i_i_i_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_i_i_i_reg_1496 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal buff_A_val_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_0_ce0 : STD_LOGIC;
    signal buff_A_val_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_0_ce1 : STD_LOGIC;
    signal buff_A_val_0_we1 : STD_LOGIC;
    signal buff_A_val_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_1_ce0 : STD_LOGIC;
    signal buff_A_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_1_ce1 : STD_LOGIC;
    signal buff_A_val_1_we1 : STD_LOGIC;
    signal buff_A_val_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_2_ce0 : STD_LOGIC;
    signal buff_A_val_2_we0 : STD_LOGIC;
    signal buff_A_val_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_2_ce1 : STD_LOGIC;
    signal buff_A_val_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_i_i_i_reg_380 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal col_assign_i_phi_fu_395_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_42_i_i_i_fu_692_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_i_i_i_fu_705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buff_C_val_1_0_fu_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_i_i_s_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_2_fu_760_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_1_i_i_s_fu_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_i_i_s_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_1_i_i_s_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_1_i_i_s_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_0_i_i_s_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_403_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_i_i_i_fu_415_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_407_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_i_i_i_fu_429_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_451_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_487_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_455_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_491_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_459_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_463_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_499_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_467_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_503_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_471_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_507_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_475_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_511_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_479_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_515_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_483_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_613_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_cast_cast_i_i_i_fu_593_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_assign_cast_cast_fu_640_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_46_i_i_i_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_710_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_0_i_i_i_i_fu_771_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_0_i_i_i_i_fu_771_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_0_i_i_i_i_fu_767_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_0_i_i_i_i_fu_776_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_0_i_i_i_i_fu_776_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_1_1_i_i_i_i_fu_785_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_1_1_i_i_i_i_fu_785_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_1_1_i_i_i_i_fu_781_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_1_1_i_i_i_i_fu_790_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_1_1_i_i_i_i_fu_790_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_2_1_i_i_i_i_fu_799_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_2_1_i_i_i_i_fu_799_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_2_1_i_i_i_i_fu_795_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_2_1_i_i_i_i_fu_804_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_2_1_i_i_i_i_fu_804_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_2_2_i_i_i_i_fu_813_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_2_2_i_i_i_i_fu_813_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1091_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1077_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1098_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1084_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_i_fu_877_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp8_i_fu_877_p2 : signal is "no";
    signal tmp15_i_fu_886_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp15_i_fu_886_p2 : signal is "no";
    signal x_weight_2_2_2_i_i_i_fu_881_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_i_i_i_i_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_i_i_i_fu_901_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_weight_2_2_2_i_i_i_fu_890_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_i_i_i_i_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_i_i_i_fu_921_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_weight_fu_943_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_i_i_i_i_fu_953_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_i_i_i_i_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal edge_val_fu_957_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_i_i_i_i_fu_971_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_i_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_10_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_edge_val_i_i_i_i_fu_999_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_fu_1010_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_2_fu_1017_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond4_i_i_i_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal edge_val_4_fu_1023_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1039_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1039_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_0_1_i_i_i_i_fu_854_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1045_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1045_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1051_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1051_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_0_2_i_i_i_i_fu_857_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1057_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1057_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1063_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1063_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_1_i_i_i_i_fu_860_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1051_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1070_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1070_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1057_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1077_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1077_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_1_2_i_i_i_i_fu_863_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1084_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1084_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1091_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1091_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_2_i_i_i_i_fu_866_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1098_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1098_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_37_2_2_i_i_i_i_fu_813_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_201 : BOOLEAN;

    component image_filter_mac_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component image_filter_mac_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component sobel_filter_corebkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_filter_coredEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buff_A_val_0_U : component sobel_filter_corebkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_val_0_address0,
        ce0 => buff_A_val_0_ce0,
        q0 => buff_A_val_0_q0,
        address1 => buff_A_val_0_address1,
        ce1 => buff_A_val_0_ce1,
        we1 => buff_A_val_0_we1,
        d1 => src_data_stream_0_V_dout);

    buff_A_val_1_U : component sobel_filter_corebkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_val_1_address0,
        ce0 => buff_A_val_1_ce0,
        q0 => buff_A_val_1_q0,
        address1 => buff_A_val_1_addr_reg_1335,
        ce1 => buff_A_val_1_ce1,
        we1 => buff_A_val_1_we1,
        d1 => buff_A_val_0_q0);

    buff_A_val_2_U : component sobel_filter_coredEe
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_val_2_address0,
        ce0 => buff_A_val_2_ce0,
        we0 => buff_A_val_2_we0,
        d0 => buff_A_val_1_q0,
        address1 => buff_A_val_2_address1,
        ce1 => buff_A_val_2_ce1,
        q1 => buff_A_val_2_q1);

    image_filter_mac_eOg_U52 : component image_filter_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1039_p0,
        din1 => grp_fu_1039_p1,
        din2 => tmp_37_0_i_i_i_i_reg_1399,
        dout => grp_fu_1039_p3);

    image_filter_mac_eOg_U53 : component image_filter_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1045_p0,
        din1 => grp_fu_1045_p1,
        din2 => tmp_39_0_i_i_i_i_reg_1404,
        dout => grp_fu_1045_p3);

    image_filter_mac_eOg_U54 : component image_filter_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1051_p0,
        din1 => grp_fu_1051_p1,
        din2 => tmp_37_2_2_i_i_i_i_reg_1429,
        dout => grp_fu_1051_p3);

    image_filter_mac_eOg_U55 : component image_filter_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1057_p0,
        din1 => grp_fu_1057_p1,
        din2 => tmp_37_2_2_i_i_i_i_reg_1429,
        dout => grp_fu_1057_p3);

    image_filter_mac_fYi_U56 : component image_filter_mac_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1063_p0,
        din1 => grp_fu_1063_p1,
        din2 => grp_fu_1051_p3,
        dout => grp_fu_1063_p3);

    image_filter_mac_fYi_U57 : component image_filter_mac_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1070_p0,
        din1 => grp_fu_1070_p1,
        din2 => grp_fu_1057_p3,
        dout => grp_fu_1070_p3);

    image_filter_mac_eOg_U58 : component image_filter_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1077_p0,
        din1 => grp_fu_1077_p1,
        din2 => tmp_37_1_1_i_i_i_i_reg_1409,
        dout => grp_fu_1077_p3);

    image_filter_mac_eOg_U59 : component image_filter_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1084_p0,
        din1 => grp_fu_1084_p1,
        din2 => tmp_39_1_1_i_i_i_i_reg_1414,
        dout => grp_fu_1084_p3);

    image_filter_mac_eOg_U60 : component image_filter_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1091_p0,
        din1 => grp_fu_1091_p1,
        din2 => tmp_37_2_1_i_i_i_i_reg_1419,
        dout => grp_fu_1091_p3);

    image_filter_mac_eOg_U61 : component image_filter_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1098_p0,
        din1 => grp_fu_1098_p1,
        din2 => tmp_39_2_1_i_i_i_i_reg_1424,
        dout => grp_fu_1098_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = exitcond1_i_fu_597_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and not((ap_const_lv1_0 = exitcond_i_fu_644_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond1_i_fu_597_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond1_i_fu_597_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_condition_201 = ap_const_boolean_1)) then
                    if (not((ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                        ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_enable_reg_pp0_iter2)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond1_i_fu_597_p2))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_assign_i_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_1314 = ap_const_lv1_0))) then 
                col_assign_i_reg_391 <= col_reg_1318;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond1_i_fu_597_p2))) then 
                col_assign_i_reg_391 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    row_i_i_i_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
                row_i_i_i_reg_380 <= row_reg_1289;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
                row_i_i_i_reg_380 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then
                ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391 <= col_assign_i_reg_391;
                ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 <= exitcond_i_reg_1314;
                ap_pipeline_reg_pp0_iter1_or_cond3_i_i_i_reg_1355 <= or_cond3_i_i_i_reg_1355;
                ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346 <= or_cond_i_i_i_reg_1346;
                ap_pipeline_reg_pp0_iter1_tmp_39_i_i_i_reg_1323 <= tmp_39_i_i_i_reg_1323;
                ap_pipeline_reg_pp0_iter1_tmp_45_i_i_i_reg_1350 <= tmp_45_i_i_i_reg_1350;
                exitcond_i_reg_1314 <= exitcond_i_fu_644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1))))) then
                ap_pipeline_reg_pp0_iter2_exitcond_i_reg_1314 <= ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314;
                ap_pipeline_reg_pp0_iter2_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter1_or_cond3_i_i_i_reg_1355;
                ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323 <= ap_pipeline_reg_pp0_iter1_tmp_39_i_i_i_reg_1323;
                ap_pipeline_reg_pp0_iter2_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter1_tmp_45_i_i_i_reg_1350;
                ap_pipeline_reg_pp0_iter3_icmp6_reg_1369 <= icmp6_reg_1369;
                ap_pipeline_reg_pp0_iter3_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter2_or_cond3_i_i_i_reg_1355;
                ap_pipeline_reg_pp0_iter3_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter2_tmp_45_i_i_i_reg_1350;
                ap_pipeline_reg_pp0_iter4_icmp6_reg_1369 <= ap_pipeline_reg_pp0_iter3_icmp6_reg_1369;
                ap_pipeline_reg_pp0_iter4_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter3_or_cond3_i_i_i_reg_1355;
                ap_pipeline_reg_pp0_iter4_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter3_tmp_45_i_i_i_reg_1350;
                ap_pipeline_reg_pp0_iter5_icmp6_reg_1369 <= ap_pipeline_reg_pp0_iter4_icmp6_reg_1369;
                ap_pipeline_reg_pp0_iter5_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter4_or_cond3_i_i_i_reg_1355;
                ap_pipeline_reg_pp0_iter5_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter4_tmp_45_i_i_i_reg_1350;
                ap_pipeline_reg_pp0_iter6_icmp6_reg_1369 <= ap_pipeline_reg_pp0_iter5_icmp6_reg_1369;
                ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter5_or_cond3_i_i_i_reg_1355;
                ap_pipeline_reg_pp0_iter6_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter5_tmp_45_i_i_i_reg_1350;
                edge_val1_i_i_i_i_reg_1485 <= edge_val1_i_i_i_i_fu_963_p3;
                tmp11_i_reg_1450 <= tmp11_i_fu_873_p2;
                tmp4_i_reg_1435 <= tmp4_i_fu_869_p2;
                tmp_19_i_i_i_i_reg_1465 <= tmp_19_i_i_i_i_fu_907_p3;
                tmp_22_i_i_i_i_reg_1470 <= tmp_22_i_i_i_i_fu_927_p3;
                tmp_22_reg_1475 <= tmp_22_fu_935_p1;
                tmp_23_reg_1480 <= tmp_23_fu_939_p1;
                tmp_27_i_i_i_i_reg_1490 <= tmp_27_i_i_i_i_fu_975_p2;
                tmp_28_i_i_i_i_reg_1496 <= tmp_28_i_i_i_i_fu_980_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_lv1_0 = exitcond_i_fu_644_p2) and not((ap_const_lv1_0 = tmp_39_i_i_i_fu_655_p2)))) then
                buff_A_val_1_addr_reg_1335 <= tmp_40_i_i_i_fu_660_p1(11 - 1 downto 0);
                    tmp_40_i_i_i_reg_1330(11 downto 0) <= tmp_40_i_i_i_fu_660_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then
                buff_C_val_0_0_fu_130 <= src_data_stream_0_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_i_reg_1314))) then
                buff_C_val_0_0_i_i_1_reg_1374 <= buff_C_val_0_0_i_i_s_fu_122;
                buff_C_val_0_1_i_i_1_reg_1379 <= buff_C_val_0_1_i_i_s_fu_126;
                buff_C_val_1_0_1_reg_1394 <= buff_C_val_1_0_1_fu_754_p3;
                buff_C_val_1_1_i_i_1_reg_1384 <= buff_C_val_1_1_i_i_s_fu_138;
                buff_C_val_2_0_1_reg_1389 <= buff_C_val_2_0_1_fu_747_p3;
                tmp_37_0_i_i_i_i_reg_1399 <= tmp_37_0_i_i_i_i_fu_771_p2;
                tmp_37_1_1_i_i_i_i_reg_1409 <= tmp_37_1_1_i_i_i_i_fu_785_p2;
                tmp_37_2_1_i_i_i_i_reg_1419 <= tmp_37_2_1_i_i_i_i_fu_799_p2;
                tmp_37_2_2_i_i_i_i_reg_1429 <= tmp_37_2_2_i_i_i_i_fu_813_p2;
                tmp_39_0_i_i_i_i_reg_1404 <= tmp_39_0_i_i_i_i_fu_776_p2;
                tmp_39_1_1_i_i_i_i_reg_1414 <= tmp_39_1_1_i_i_i_i_fu_790_p2;
                tmp_39_2_1_i_i_i_i_reg_1424 <= tmp_39_2_1_i_i_i_i_fu_804_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_i_reg_1314) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then
                buff_C_val_0_0_i_i_s_fu_122 <= buff_C_val_0_0_2_fu_760_p3;
                buff_C_val_0_1_i_i_s_fu_126 <= buff_C_val_0_0_i_i_s_fu_122;
                buff_C_val_1_0_i_i_s_fu_134 <= buff_C_val_1_0_1_fu_754_p3;
                buff_C_val_1_1_i_i_s_fu_138 <= buff_C_val_1_0_i_i_s_fu_134;
                buff_C_val_2_0_i_i_s_fu_146 <= buff_C_val_2_0_1_fu_747_p3;
                buff_C_val_2_1_i_i_s_fu_142 <= buff_C_val_2_0_i_i_s_fu_146;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_39_i_i_i_reg_1323)))) then
                buff_C_val_1_0_fu_118 <= buff_A_val_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_39_i_i_i_reg_1323)))) then
                buff_C_val_1_0_loa_reg_1359 <= buff_C_val_1_0_fu_118;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then
                c_high_thresh_channe_1_reg_1155 <= c_high_thresh_channe_dout;
                c_low_thresh_channel_reg_1160 <= c_low_thresh_channel_1_dout;
                tmp_30_i_i_i_i_reg_1280 <= tmp_30_i_i_i_i_fu_587_p2;
                tmp_36_0_1_i_i_i_i_reg_1205 <= tmp_36_0_1_i_i_i_i_fu_527_p1;
                tmp_36_0_2_i_i_i_i_reg_1215 <= tmp_36_0_2_i_i_i_i_fu_535_p1;
                tmp_36_0_i_i_i_i_reg_1195 <= tmp_36_0_i_i_i_i_fu_519_p1;
                tmp_36_1_1_i_i_i_i_reg_1235 <= tmp_36_1_1_i_i_i_i_fu_551_p1;
                tmp_36_1_2_i_i_i_i_reg_1245 <= tmp_36_1_2_i_i_i_i_fu_559_p1;
                tmp_36_1_i_i_i_i_reg_1225 <= tmp_36_1_i_i_i_i_fu_543_p1;
                tmp_36_2_1_i_i_i_i_reg_1265 <= tmp_36_2_1_i_i_i_i_fu_575_p1;
                tmp_36_2_2_i_i_i_i_reg_1275 <= tmp_36_2_2_i_i_i_i_fu_583_p1;
                tmp_36_2_i_i_i_i_reg_1255 <= tmp_36_2_i_i_i_i_fu_567_p1;
                tmp_38_0_1_i_i_i_i_reg_1210 <= tmp_38_0_1_i_i_i_i_fu_531_p1;
                tmp_38_0_2_i_i_i_i_reg_1220 <= tmp_38_0_2_i_i_i_i_fu_539_p1;
                tmp_38_0_i_i_i_i_reg_1200 <= tmp_38_0_i_i_i_i_fu_523_p1;
                tmp_38_1_1_i_i_i_i_reg_1240 <= tmp_38_1_1_i_i_i_i_fu_555_p1;
                tmp_38_1_2_i_i_i_i_reg_1250 <= tmp_38_1_2_i_i_i_i_fu_563_p1;
                tmp_38_1_i_i_i_i_reg_1230 <= tmp_38_1_i_i_i_i_fu_547_p1;
                tmp_38_2_1_i_i_i_i_reg_1270 <= tmp_38_2_1_i_i_i_i_fu_579_p1;
                tmp_38_2_i_i_i_i_reg_1260 <= tmp_38_2_i_i_i_i_fu_571_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                col_reg_1318 <= col_fu_649_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then
                icmp6_reg_1369 <= icmp6_fu_720_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond1_i_fu_597_p2))) then
                icmp_reg_1299 <= icmp_fu_623_p2;
                tmp_34_i_i_i_reg_1294 <= tmp_34_i_i_i_fu_608_p2;
                tmp_36_i_i_i_reg_1304 <= tmp_36_i_i_i_fu_629_p2;
                tmp_37_i_i_i_reg_1309 <= tmp_37_i_i_i_fu_635_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_lv1_0 = exitcond_i_fu_644_p2))) then
                or_cond3_i_i_i_reg_1355 <= or_cond3_i_i_i_fu_682_p2;
                or_cond_i_i_i_reg_1346 <= or_cond_i_i_i_fu_666_p2;
                tmp_39_i_i_i_reg_1323 <= tmp_39_i_i_i_fu_655_p2;
                tmp_45_i_i_i_reg_1350 <= tmp_45_i_i_i_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                row_reg_1289 <= row_fu_602_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then
                tmp12_i_reg_1455 <= grp_fu_1045_p3;
                tmp14_i_reg_1460 <= grp_fu_1070_p3;
                tmp5_i_reg_1440 <= grp_fu_1039_p3;
                tmp7_i_reg_1445 <= grp_fu_1063_p3;
            end if;
        end if;
    end process;
    tmp_40_i_i_i_reg_1330(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_condition_188, ap_condition_196, ap_condition_245, exitcond1_i_fu_597_p2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_condition_245 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (not((ap_const_lv1_0 = exitcond1_i_fu_597_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter6)))) and not((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter6))) or (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4))))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    C_XR0C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR0C0_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR0C0_channel_blk_n <= C_XR0C0_channel_empty_n;
        else 
            C_XR0C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_XR0C0_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_XR0C0_channel_read <= ap_const_logic_1;
        else 
            C_XR0C0_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_XR0C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR0C1_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR0C1_channel_blk_n <= C_XR0C1_channel_empty_n;
        else 
            C_XR0C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_XR0C1_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_XR0C1_channel_read <= ap_const_logic_1;
        else 
            C_XR0C1_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_XR0C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR0C2_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR0C2_channel_blk_n <= C_XR0C2_channel_empty_n;
        else 
            C_XR0C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_XR0C2_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_XR0C2_channel_read <= ap_const_logic_1;
        else 
            C_XR0C2_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_XR1C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR1C0_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR1C0_channel_blk_n <= C_XR1C0_channel_empty_n;
        else 
            C_XR1C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_XR1C0_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_XR1C0_channel_read <= ap_const_logic_1;
        else 
            C_XR1C0_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_XR1C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR1C1_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR1C1_channel_blk_n <= C_XR1C1_channel_empty_n;
        else 
            C_XR1C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_XR1C1_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_XR1C1_channel_read <= ap_const_logic_1;
        else 
            C_XR1C1_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_XR1C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR1C2_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR1C2_channel_blk_n <= C_XR1C2_channel_empty_n;
        else 
            C_XR1C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_XR1C2_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_XR1C2_channel_read <= ap_const_logic_1;
        else 
            C_XR1C2_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_XR2C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR2C0_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR2C0_channel_blk_n <= C_XR2C0_channel_empty_n;
        else 
            C_XR2C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_XR2C0_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_XR2C0_channel_read <= ap_const_logic_1;
        else 
            C_XR2C0_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_XR2C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR2C1_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR2C1_channel_blk_n <= C_XR2C1_channel_empty_n;
        else 
            C_XR2C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_XR2C1_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_XR2C1_channel_read <= ap_const_logic_1;
        else 
            C_XR2C1_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_XR2C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR2C2_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR2C2_channel_blk_n <= C_XR2C2_channel_empty_n;
        else 
            C_XR2C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_XR2C2_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_XR2C2_channel_read <= ap_const_logic_1;
        else 
            C_XR2C2_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_YR0C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR0C0_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR0C0_channel_blk_n <= C_YR0C0_channel_empty_n;
        else 
            C_YR0C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_YR0C0_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_YR0C0_channel_read <= ap_const_logic_1;
        else 
            C_YR0C0_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_YR0C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR0C1_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR0C1_channel_blk_n <= C_YR0C1_channel_empty_n;
        else 
            C_YR0C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_YR0C1_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_YR0C1_channel_read <= ap_const_logic_1;
        else 
            C_YR0C1_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_YR0C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR0C2_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR0C2_channel_blk_n <= C_YR0C2_channel_empty_n;
        else 
            C_YR0C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_YR0C2_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_YR0C2_channel_read <= ap_const_logic_1;
        else 
            C_YR0C2_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_YR1C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR1C0_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR1C0_channel_blk_n <= C_YR1C0_channel_empty_n;
        else 
            C_YR1C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_YR1C0_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_YR1C0_channel_read <= ap_const_logic_1;
        else 
            C_YR1C0_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_YR1C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR1C1_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR1C1_channel_blk_n <= C_YR1C1_channel_empty_n;
        else 
            C_YR1C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_YR1C1_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_YR1C1_channel_read <= ap_const_logic_1;
        else 
            C_YR1C1_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_YR1C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR1C2_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR1C2_channel_blk_n <= C_YR1C2_channel_empty_n;
        else 
            C_YR1C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_YR1C2_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_YR1C2_channel_read <= ap_const_logic_1;
        else 
            C_YR1C2_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_YR2C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR2C0_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR2C0_channel_blk_n <= C_YR2C0_channel_empty_n;
        else 
            C_YR2C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_YR2C0_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_YR2C0_channel_read <= ap_const_logic_1;
        else 
            C_YR2C0_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    C_YR2C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR2C1_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR2C1_channel_blk_n <= C_YR2C1_channel_empty_n;
        else 
            C_YR2C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_YR2C1_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            C_YR2C1_channel_read <= ap_const_logic_1;
        else 
            C_YR2C1_channel_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state11 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);

    ap_condition_188_assign_proc : process(src_data_stream_0_V_empty_n, src_data_stream_1_V_empty_n, ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314, ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)
    begin
                ap_condition_188 <= (((ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)) and (src_data_stream_0_V_empty_n = ap_const_logic_0)) or ((ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)) and (src_data_stream_1_V_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_196_assign_proc : process(dst_data_stream_0_V_full_n, dst_data_stream_1_V_full_n, ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355)
    begin
                ap_condition_196 <= ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355)) and (dst_data_stream_0_V_full_n = ap_const_logic_0)) or (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355)) and (dst_data_stream_1_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_201_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_condition_188, ap_condition_196)
    begin
                ap_condition_201 <= not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1))));
    end process;


    ap_condition_245_assign_proc : process(ap_start, ap_done_reg, C_XR0C0_channel_empty_n, C_XR0C1_channel_empty_n, C_XR0C2_channel_empty_n, C_XR1C0_channel_empty_n, C_XR1C1_channel_empty_n, C_XR1C2_channel_empty_n, C_XR2C0_channel_empty_n, C_XR2C1_channel_empty_n, C_XR2C2_channel_empty_n, C_YR0C0_channel_empty_n, C_YR0C1_channel_empty_n, C_YR0C2_channel_empty_n, C_YR1C0_channel_empty_n, C_YR1C1_channel_empty_n, C_YR1C2_channel_empty_n, C_YR2C0_channel_empty_n, C_YR2C1_channel_empty_n, c_high_thresh_channe_empty_n, c_low_thresh_channel_1_empty_n, c_invert_channel_empty_n)
    begin
                ap_condition_245 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (C_XR0C0_channel_empty_n = ap_const_logic_0) or (C_XR0C1_channel_empty_n = ap_const_logic_0) or (C_XR0C2_channel_empty_n = ap_const_logic_0) or (C_XR1C0_channel_empty_n = ap_const_logic_0) or (C_XR1C1_channel_empty_n = ap_const_logic_0) or (C_XR1C2_channel_empty_n = ap_const_logic_0) or (C_XR2C0_channel_empty_n = ap_const_logic_0) or (C_XR2C1_channel_empty_n = ap_const_logic_0) or (C_XR2C2_channel_empty_n = ap_const_logic_0) or (C_YR0C0_channel_empty_n = ap_const_logic_0) or (C_YR0C1_channel_empty_n = ap_const_logic_0) or (C_YR0C2_channel_empty_n = ap_const_logic_0) or (C_YR1C0_channel_empty_n = ap_const_logic_0) or (C_YR1C1_channel_empty_n = ap_const_logic_0) or (C_YR1C2_channel_empty_n = ap_const_logic_0) or (C_YR2C0_channel_empty_n = ap_const_logic_0) or (C_YR2C1_channel_empty_n = ap_const_logic_0) or (c_high_thresh_channe_empty_n = ap_const_logic_0) or (c_low_thresh_channel_1_empty_n = ap_const_logic_0) or (c_invert_channel_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond1_i_fu_597_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = exitcond1_i_fu_597_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond1_i_fu_597_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = exitcond1_i_fu_597_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_0_address0 <= tmp_40_i_i_i_fu_660_p1(11 - 1 downto 0);
    buff_A_val_0_address1 <= tmp_42_i_i_i_fu_692_p1(11 - 1 downto 0);

    buff_A_val_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage0, ap_condition_188, ap_condition_196, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            buff_A_val_0_ce0 <= ap_const_logic_1;
        else 
            buff_A_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_val_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_condition_188, ap_condition_196)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then 
            buff_A_val_0_ce1 <= ap_const_logic_1;
        else 
            buff_A_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_val_0_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314, ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346, ap_enable_reg_pp0_iter7, ap_condition_188, ap_condition_196)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1))))))) then 
            buff_A_val_0_we1 <= ap_const_logic_1;
        else 
            buff_A_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_1_address0 <= tmp_40_i_i_i_fu_660_p1(11 - 1 downto 0);

    buff_A_val_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage0, ap_condition_188, ap_condition_196, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            buff_A_val_1_ce0 <= ap_const_logic_1;
        else 
            buff_A_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_val_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage0, ap_condition_188, ap_condition_196, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            buff_A_val_1_ce1 <= ap_const_logic_1;
        else 
            buff_A_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_val_1_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_i_reg_1314, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage0, ap_condition_188, ap_condition_196, tmp_39_i_i_i_reg_1323, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_39_i_i_i_reg_1323))))) then 
            buff_A_val_1_we1 <= ap_const_logic_1;
        else 
            buff_A_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_2_address0 <= tmp_40_i_i_i_reg_1330(11 - 1 downto 0);
    buff_A_val_2_address1 <= tmp_43_i_i_i_fu_705_p1(11 - 1 downto 0);

    buff_A_val_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage0, ap_condition_188, ap_condition_196, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            buff_A_val_2_ce0 <= ap_const_logic_1;
        else 
            buff_A_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_val_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_condition_188, ap_condition_196)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then 
            buff_A_val_2_ce1 <= ap_const_logic_1;
        else 
            buff_A_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_val_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_i_reg_1314, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage0, ap_condition_188, ap_condition_196, tmp_39_i_i_i_reg_1323, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_39_i_i_i_reg_1323))))) then 
            buff_A_val_2_we0 <= ap_const_logic_1;
        else 
            buff_A_val_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buff_C_val_0_0_2_fu_760_p3 <= 
        buff_C_val_0_0_fu_130 when (ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323(0) = '1') else 
        buff_C_val_0_0_i_i_s_fu_122;
    buff_C_val_1_0_1_fu_754_p3 <= 
        buff_C_val_1_0_loa_reg_1359 when (ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323(0) = '1') else 
        buff_C_val_1_0_i_i_s_fu_134;
    buff_C_val_2_0_1_fu_747_p3 <= 
        buff_A_val_2_q1 when (ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323(0) = '1') else 
        buff_C_val_2_0_i_i_s_fu_146;

    c_high_thresh_channe_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, c_high_thresh_channe_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            c_high_thresh_channe_blk_n <= c_high_thresh_channe_empty_n;
        else 
            c_high_thresh_channe_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    c_high_thresh_channe_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            c_high_thresh_channe_read <= ap_const_logic_1;
        else 
            c_high_thresh_channe_read <= ap_const_logic_0;
        end if; 
    end process;


    c_invert_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, c_invert_channel_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            c_invert_channel_blk_n <= c_invert_channel_empty_n;
        else 
            c_invert_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    c_invert_channel_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            c_invert_channel_read <= ap_const_logic_1;
        else 
            c_invert_channel_read <= ap_const_logic_0;
        end if; 
    end process;


    c_low_thresh_channel_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, c_low_thresh_channel_1_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            c_low_thresh_channel_1_blk_n <= c_low_thresh_channel_1_empty_n;
        else 
            c_low_thresh_channel_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    c_low_thresh_channel_1_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_245)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_245 = ap_const_boolean_1)))) then 
            c_low_thresh_channel_1_read <= ap_const_logic_1;
        else 
            c_low_thresh_channel_1_read <= ap_const_logic_0;
        end if; 
    end process;

    col_assign_cast_cast_fu_640_p1 <= std_logic_vector(resize(unsigned(col_assign_i_phi_fu_395_p4),13));

    col_assign_i_phi_fu_395_p4_assign_proc : process(exitcond_i_reg_1314, col_assign_i_reg_391, ap_CS_fsm_pp0_stage0, col_reg_1318, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_1314 = ap_const_lv1_0))) then 
            col_assign_i_phi_fu_395_p4 <= col_reg_1318;
        else 
            col_assign_i_phi_fu_395_p4 <= col_assign_i_reg_391;
        end if; 
    end process;

    col_fu_649_p2 <= std_logic_vector(unsigned(col_assign_i_phi_fu_395_p4) + unsigned(ap_const_lv12_1));
    cols_cast_i_i_cast_i_fu_425_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_407_p1),12));

    dst_data_stream_0_V_blk_n_assign_proc : process(dst_data_stream_0_V_full_n, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355)))) then 
            dst_data_stream_0_V_blk_n <= dst_data_stream_0_V_full_n;
        else 
            dst_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_data_stream_0_V_din <= 
        ap_const_lv8_0 when (or_cond4_i_i_i_fu_993_p2(0) = '1') else 
        edge_val_4_fu_1023_p3;

    dst_data_stream_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355, ap_condition_188, ap_condition_196)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355)) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then 
            dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_data_stream_1_V_blk_n_assign_proc : process(dst_data_stream_1_V_full_n, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355)))) then 
            dst_data_stream_1_V_blk_n <= dst_data_stream_1_V_full_n;
        else 
            dst_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_data_stream_1_V_din <= ap_const_lv8_80;

    dst_data_stream_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355, ap_condition_188, ap_condition_196)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355)) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then 
            dst_data_stream_1_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    edge_val1_i_i_i_i_fu_963_p3 <= 
        edge_val_fu_957_p2 when (tmp_23_i_i_i_i_fu_947_p2(0) = '1') else 
        ap_const_lv8_0;
    edge_val_1_fu_1010_p3 <= 
        p_edge_val_i_i_i_i_fu_999_p3 when (tmp_i_10_fu_1006_p2(0) = '1') else 
        edge_val1_i_i_i_i_reg_1485;
    edge_val_2_fu_1017_p2 <= (edge_val_1_fu_1010_p3 xor ap_const_lv8_FF);
    edge_val_4_fu_1023_p3 <= 
        edge_val_2_fu_1017_p2 when (tmp_30_i_i_i_i_reg_1280(0) = '1') else 
        edge_val_1_fu_1010_p3;
    edge_val_fu_957_p2 <= (tmp_25_i_i_i_i_fu_953_p2 xor ap_const_lv8_FF);
    edge_weight_fu_943_p2 <= std_logic_vector(unsigned(tmp_22_i_i_i_i_reg_1470) + unsigned(tmp_19_i_i_i_i_reg_1465));
    exitcond1_i_fu_597_p2 <= "1" when (row_i_i_i_reg_380 = tmp_6_i_fu_445_p2) else "0";
    exitcond_i_fu_644_p2 <= "1" when (col_assign_i_phi_fu_395_p4 = tmp_3_i_fu_439_p2) else "0";
    grp_fu_1039_p0 <= tmp_36_0_1_i_i_i_i_reg_1205(8 - 1 downto 0);
    grp_fu_1039_p1 <= tmp_35_0_1_i_i_i_i_fu_854_p1(8 - 1 downto 0);
    grp_fu_1045_p0 <= tmp_38_0_1_i_i_i_i_reg_1210(8 - 1 downto 0);
    grp_fu_1045_p1 <= tmp_35_0_1_i_i_i_i_fu_854_p1(8 - 1 downto 0);
    grp_fu_1051_p0 <= tmp_36_0_2_i_i_i_i_reg_1215(8 - 1 downto 0);
    grp_fu_1051_p1 <= tmp_35_0_2_i_i_i_i_fu_857_p1(8 - 1 downto 0);
    grp_fu_1057_p0 <= tmp_38_0_2_i_i_i_i_reg_1220(8 - 1 downto 0);
    grp_fu_1057_p1 <= tmp_35_0_2_i_i_i_i_fu_857_p1(8 - 1 downto 0);
    grp_fu_1063_p0 <= tmp_36_1_i_i_i_i_reg_1225(8 - 1 downto 0);
    grp_fu_1063_p1 <= tmp_35_1_i_i_i_i_fu_860_p1(8 - 1 downto 0);
    grp_fu_1070_p0 <= tmp_38_1_i_i_i_i_reg_1230(8 - 1 downto 0);
    grp_fu_1070_p1 <= tmp_35_1_i_i_i_i_fu_860_p1(8 - 1 downto 0);
    grp_fu_1077_p0 <= tmp_36_1_2_i_i_i_i_reg_1245(8 - 1 downto 0);
    grp_fu_1077_p1 <= tmp_35_1_2_i_i_i_i_fu_863_p1(8 - 1 downto 0);
    grp_fu_1084_p0 <= tmp_38_1_2_i_i_i_i_reg_1250(8 - 1 downto 0);
    grp_fu_1084_p1 <= tmp_35_1_2_i_i_i_i_fu_863_p1(8 - 1 downto 0);
    grp_fu_1091_p0 <= tmp_36_2_i_i_i_i_reg_1255(8 - 1 downto 0);
    grp_fu_1091_p1 <= tmp_35_2_i_i_i_i_fu_866_p1(8 - 1 downto 0);
    grp_fu_1098_p0 <= tmp_38_2_i_i_i_i_reg_1260(8 - 1 downto 0);
    grp_fu_1098_p1 <= tmp_35_2_i_i_i_i_fu_866_p1(8 - 1 downto 0);
    icmp6_fu_720_p2 <= "1" when (tmp_21_fu_710_p4 = ap_const_lv11_0) else "0";
    icmp_fu_623_p2 <= "1" when (tmp_19_fu_613_p4 = ap_const_lv11_0) else "0";
    or_cond3_i_i_i_fu_682_p2 <= (tmp_36_i_i_i_reg_1304 and tmp_46_i_i_i_fu_676_p2);
    or_cond4_i_i_i_fu_993_p2 <= (tmp1_i_fu_989_p2 or tmp_i_fu_985_p2);
    or_cond_i_i_i_fu_666_p2 <= (tmp_39_i_i_i_fu_655_p2 and tmp_34_i_i_i_reg_1294);
    p_edge_val_i_i_i_i_fu_999_p3 <= 
        ap_const_lv8_FF when (tmp_27_i_i_i_i_reg_1490(0) = '1') else 
        ap_const_lv8_0;
    row_cast_cast_i_i_i_fu_593_p1 <= std_logic_vector(resize(unsigned(row_i_i_i_reg_380),13));
    row_fu_602_p2 <= std_logic_vector(unsigned(row_i_i_i_reg_380) + unsigned(ap_const_lv12_1));
    rows_cast_i_i_cast_i_fu_411_p1 <= std_logic_vector(resize(unsigned(tmp_fu_403_p1),12));

    src_data_stream_0_V_blk_n_assign_proc : process(src_data_stream_0_V_empty_n, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314, ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)))) then 
            src_data_stream_0_V_blk_n <= src_data_stream_0_V_empty_n;
        else 
            src_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_0_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314, ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346, ap_enable_reg_pp0_iter7, ap_condition_188, ap_condition_196)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then 
            src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src_data_stream_1_V_blk_n_assign_proc : process(src_data_stream_1_V_empty_n, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314, ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)))) then 
            src_data_stream_1_V_blk_n <= src_data_stream_1_V_empty_n;
        else 
            src_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_1_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314, ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346, ap_enable_reg_pp0_iter7, ap_condition_188, ap_condition_196)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346)) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_condition_188 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_condition_196 = ap_const_boolean_1)))))) then 
            src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp11_i_fu_873_p2 <= std_logic_vector(signed(grp_fu_1098_p3) + signed(grp_fu_1084_p3));
    tmp15_i_fu_886_p2 <= std_logic_vector(signed(tmp12_i_reg_1455) + signed(tmp14_i_reg_1460));
    tmp1_i_fu_989_p2 <= (tmp_37_i_i_i_reg_1309 or ap_pipeline_reg_pp0_iter6_tmp_45_i_i_i_reg_1350);
    tmp4_i_fu_869_p2 <= std_logic_vector(signed(grp_fu_1091_p3) + signed(grp_fu_1077_p3));
    tmp8_i_fu_877_p2 <= std_logic_vector(signed(tmp5_i_reg_1440) + signed(tmp7_i_reg_1445));
    tmp_10_fu_483_p1 <= C_XR2C2_channel_dout(8 - 1 downto 0);
    tmp_11_fu_487_p1 <= C_YR0C0_channel_dout(8 - 1 downto 0);
    tmp_12_fu_491_p1 <= C_YR0C1_channel_dout(8 - 1 downto 0);
    tmp_13_fu_495_p1 <= C_YR0C2_channel_dout(8 - 1 downto 0);
    tmp_14_fu_499_p1 <= C_YR1C0_channel_dout(8 - 1 downto 0);
    tmp_15_fu_503_p1 <= C_YR1C1_channel_dout(8 - 1 downto 0);
    tmp_16_fu_507_p1 <= C_YR1C2_channel_dout(8 - 1 downto 0);
    tmp_17_fu_511_p1 <= C_YR2C0_channel_dout(8 - 1 downto 0);
    tmp_17_i_i_i_i_fu_895_p2 <= "1" when (signed(x_weight_2_2_2_i_i_i_fu_881_p2) > signed(ap_const_lv16_0)) else "0";
    tmp_18_fu_515_p1 <= C_YR2C1_channel_dout(8 - 1 downto 0);
    tmp_18_i_i_i_i_fu_901_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(x_weight_2_2_2_i_i_i_fu_881_p2));
    tmp_19_fu_613_p4 <= row_i_i_i_reg_380(11 downto 1);
    tmp_19_i_i_i_i_fu_907_p3 <= 
        x_weight_2_2_2_i_i_i_fu_881_p2 when (tmp_17_i_i_i_i_fu_895_p2(0) = '1') else 
        tmp_18_i_i_i_i_fu_901_p2;
    tmp_1_fu_407_p1 <= cols(11 - 1 downto 0);
    tmp_20_i_i_i_i_fu_915_p2 <= "1" when (signed(y_weight_2_2_2_i_i_i_fu_890_p2) > signed(ap_const_lv16_0)) else "0";
    tmp_21_fu_710_p4 <= ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391(11 downto 1);
    tmp_21_i_i_i_i_fu_921_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(y_weight_2_2_2_i_i_i_fu_890_p2));
    tmp_22_fu_935_p1 <= tmp_22_i_i_i_i_fu_927_p3(8 - 1 downto 0);
    tmp_22_i_i_i_i_fu_927_p3 <= 
        y_weight_2_2_2_i_i_i_fu_890_p2 when (tmp_20_i_i_i_i_fu_915_p2(0) = '1') else 
        tmp_21_i_i_i_i_fu_921_p2;
    tmp_23_fu_939_p1 <= tmp_19_i_i_i_i_fu_907_p3(8 - 1 downto 0);
    tmp_23_i_i_i_i_fu_947_p2 <= "1" when (signed(edge_weight_fu_943_p2) < signed(ap_const_lv16_FF)) else "0";
    tmp_25_i_i_i_i_fu_953_p2 <= std_logic_vector(unsigned(tmp_23_reg_1480) + unsigned(tmp_22_reg_1475));
    tmp_26_i_i_i_i_fu_971_p1 <= std_logic_vector(resize(unsigned(edge_val1_i_i_i_i_fu_963_p3),32));
    tmp_27_i_i_i_i_fu_975_p2 <= "1" when (signed(tmp_26_i_i_i_i_fu_971_p1) > signed(c_high_thresh_channe_1_reg_1155)) else "0";
    tmp_28_i_i_i_i_fu_980_p2 <= "1" when (signed(tmp_26_i_i_i_i_fu_971_p1) < signed(c_low_thresh_channel_reg_1160)) else "0";
    tmp_2_fu_451_p1 <= C_XR0C0_channel_dout(8 - 1 downto 0);
    tmp_30_i_i_i_i_fu_587_p2 <= "1" when (c_invert_channel_dout = ap_const_lv32_1) else "0";
        tmp_31_i_i_cast_i_fu_421_p1 <= std_logic_vector(resize(signed(tmp_31_i_i_i_fu_415_p2),13));

    tmp_31_i_i_i_fu_415_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(rows_cast_i_i_cast_i_fu_411_p1));
        tmp_32_i_i_cast_i_fu_435_p1 <= std_logic_vector(resize(signed(tmp_32_i_i_i_fu_429_p2),13));

    tmp_32_i_i_i_fu_429_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(cols_cast_i_i_cast_i_fu_425_p1));
    tmp_34_i_i_i_fu_608_p2 <= "1" when (unsigned(row_i_i_i_reg_380) < unsigned(rows_cast_i_i_cast_i_fu_411_p1)) else "0";
    tmp_35_0_1_i_i_i_i_fu_854_p1 <= std_logic_vector(resize(unsigned(buff_C_val_0_0_i_i_1_reg_1374),16));
    tmp_35_0_2_i_i_i_i_fu_857_p1 <= std_logic_vector(resize(unsigned(buff_C_val_0_1_i_i_1_reg_1379),16));
    tmp_35_0_i_i_i_i_fu_767_p1 <= std_logic_vector(resize(unsigned(buff_C_val_0_0_2_fu_760_p3),16));
    tmp_35_1_1_i_i_i_i_fu_781_p1 <= std_logic_vector(resize(unsigned(buff_C_val_1_0_i_i_s_fu_134),16));
    tmp_35_1_2_i_i_i_i_fu_863_p1 <= std_logic_vector(resize(unsigned(buff_C_val_1_1_i_i_1_reg_1384),16));
    tmp_35_1_i_i_i_i_fu_860_p1 <= std_logic_vector(resize(unsigned(buff_C_val_1_0_1_reg_1394),16));
    tmp_35_2_1_i_i_i_i_fu_795_p1 <= std_logic_vector(resize(unsigned(buff_C_val_2_0_i_i_s_fu_146),16));
    tmp_35_2_i_i_i_i_fu_866_p1 <= std_logic_vector(resize(unsigned(buff_C_val_2_0_1_reg_1389),16));
        tmp_36_0_1_i_i_i_i_fu_527_p1 <= std_logic_vector(resize(signed(tmp_3_fu_455_p1),16));

        tmp_36_0_2_i_i_i_i_fu_535_p1 <= std_logic_vector(resize(signed(tmp_4_fu_459_p1),16));

        tmp_36_0_i_i_i_i_fu_519_p1 <= std_logic_vector(resize(signed(tmp_2_fu_451_p1),16));

        tmp_36_1_1_i_i_i_i_fu_551_p1 <= std_logic_vector(resize(signed(tmp_6_fu_467_p1),16));

        tmp_36_1_2_i_i_i_i_fu_559_p1 <= std_logic_vector(resize(signed(tmp_7_fu_471_p1),16));

        tmp_36_1_i_i_i_i_fu_543_p1 <= std_logic_vector(resize(signed(tmp_5_fu_463_p1),16));

        tmp_36_2_1_i_i_i_i_fu_575_p1 <= std_logic_vector(resize(signed(tmp_9_fu_479_p1),16));

        tmp_36_2_2_i_i_i_i_fu_583_p1 <= std_logic_vector(resize(signed(tmp_10_fu_483_p1),16));

        tmp_36_2_i_i_i_i_fu_567_p1 <= std_logic_vector(resize(signed(tmp_8_fu_475_p1),16));

    tmp_36_i_i_i_fu_629_p2 <= "0" when (row_i_i_i_reg_380 = ap_const_lv12_0) else "1";
    tmp_37_0_i_i_i_i_fu_771_p0 <= tmp_36_0_i_i_i_i_reg_1195(8 - 1 downto 0);
    tmp_37_0_i_i_i_i_fu_771_p1 <= tmp_35_0_i_i_i_i_fu_767_p1(8 - 1 downto 0);
    tmp_37_0_i_i_i_i_fu_771_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(tmp_37_0_i_i_i_i_fu_771_p0) * signed('0' &tmp_37_0_i_i_i_i_fu_771_p1))), 16));
    tmp_37_1_1_i_i_i_i_fu_785_p0 <= tmp_36_1_1_i_i_i_i_reg_1235(8 - 1 downto 0);
    tmp_37_1_1_i_i_i_i_fu_785_p1 <= tmp_35_1_1_i_i_i_i_fu_781_p1(8 - 1 downto 0);
    tmp_37_1_1_i_i_i_i_fu_785_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(tmp_37_1_1_i_i_i_i_fu_785_p0) * signed('0' &tmp_37_1_1_i_i_i_i_fu_785_p1))), 16));
    tmp_37_2_1_i_i_i_i_fu_799_p0 <= tmp_36_2_1_i_i_i_i_reg_1265(8 - 1 downto 0);
    tmp_37_2_1_i_i_i_i_fu_799_p1 <= tmp_35_2_1_i_i_i_i_fu_795_p1(8 - 1 downto 0);
    tmp_37_2_1_i_i_i_i_fu_799_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(tmp_37_2_1_i_i_i_i_fu_799_p0) * signed('0' &tmp_37_2_1_i_i_i_i_fu_799_p1))), 16));
    tmp_37_2_2_i_i_i_i_fu_813_p0 <= tmp_36_2_2_i_i_i_i_reg_1275(8 - 1 downto 0);
    tmp_37_2_2_i_i_i_i_fu_813_p1 <= tmp_37_2_2_i_i_i_i_fu_813_p10(8 - 1 downto 0);
    tmp_37_2_2_i_i_i_i_fu_813_p10 <= std_logic_vector(resize(unsigned(buff_C_val_2_1_i_i_s_fu_142),16));
    tmp_37_2_2_i_i_i_i_fu_813_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(tmp_37_2_2_i_i_i_i_fu_813_p0) * signed('0' &tmp_37_2_2_i_i_i_i_fu_813_p1))), 16));
    tmp_37_i_i_i_fu_635_p2 <= "1" when (signed(row_cast_cast_i_i_i_fu_593_p1) > signed(tmp_31_i_i_cast_i_fu_421_p1)) else "0";
        tmp_38_0_1_i_i_i_i_fu_531_p1 <= std_logic_vector(resize(signed(tmp_12_fu_491_p1),16));

        tmp_38_0_2_i_i_i_i_fu_539_p1 <= std_logic_vector(resize(signed(tmp_13_fu_495_p1),16));

        tmp_38_0_i_i_i_i_fu_523_p1 <= std_logic_vector(resize(signed(tmp_11_fu_487_p1),16));

        tmp_38_1_1_i_i_i_i_fu_555_p1 <= std_logic_vector(resize(signed(tmp_15_fu_503_p1),16));

        tmp_38_1_2_i_i_i_i_fu_563_p1 <= std_logic_vector(resize(signed(tmp_16_fu_507_p1),16));

        tmp_38_1_i_i_i_i_fu_547_p1 <= std_logic_vector(resize(signed(tmp_14_fu_499_p1),16));

        tmp_38_2_1_i_i_i_i_fu_579_p1 <= std_logic_vector(resize(signed(tmp_18_fu_515_p1),16));

        tmp_38_2_i_i_i_i_fu_571_p1 <= std_logic_vector(resize(signed(tmp_17_fu_511_p1),16));

    tmp_39_0_i_i_i_i_fu_776_p0 <= tmp_38_0_i_i_i_i_reg_1200(8 - 1 downto 0);
    tmp_39_0_i_i_i_i_fu_776_p1 <= tmp_35_0_i_i_i_i_fu_767_p1(8 - 1 downto 0);
    tmp_39_0_i_i_i_i_fu_776_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(tmp_39_0_i_i_i_i_fu_776_p0) * signed('0' &tmp_39_0_i_i_i_i_fu_776_p1))), 16));
    tmp_39_1_1_i_i_i_i_fu_790_p0 <= tmp_38_1_1_i_i_i_i_reg_1240(8 - 1 downto 0);
    tmp_39_1_1_i_i_i_i_fu_790_p1 <= tmp_35_1_1_i_i_i_i_fu_781_p1(8 - 1 downto 0);
    tmp_39_1_1_i_i_i_i_fu_790_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(tmp_39_1_1_i_i_i_i_fu_790_p0) * signed('0' &tmp_39_1_1_i_i_i_i_fu_790_p1))), 16));
    tmp_39_2_1_i_i_i_i_fu_804_p0 <= tmp_38_2_1_i_i_i_i_reg_1270(8 - 1 downto 0);
    tmp_39_2_1_i_i_i_i_fu_804_p1 <= tmp_35_2_1_i_i_i_i_fu_795_p1(8 - 1 downto 0);
    tmp_39_2_1_i_i_i_i_fu_804_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(tmp_39_2_1_i_i_i_i_fu_804_p0) * signed('0' &tmp_39_2_1_i_i_i_i_fu_804_p1))), 16));
    tmp_39_i_i_i_fu_655_p2 <= "1" when (unsigned(col_assign_i_phi_fu_395_p4) < unsigned(cols_cast_i_i_cast_i_fu_425_p1)) else "0";
    tmp_3_fu_455_p1 <= C_XR0C1_channel_dout(8 - 1 downto 0);
    tmp_3_i_fu_439_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(cols_cast_i_i_cast_i_fu_425_p1));
    tmp_40_i_i_i_fu_660_p1 <= std_logic_vector(resize(unsigned(col_assign_i_phi_fu_395_p4),64));
    tmp_42_i_i_i_fu_692_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391),64));
    tmp_43_i_i_i_fu_705_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391),64));
    tmp_45_i_i_i_fu_671_p2 <= "1" when (signed(col_assign_cast_cast_fu_640_p1) > signed(tmp_32_i_i_cast_i_fu_435_p1)) else "0";
    tmp_46_i_i_i_fu_676_p2 <= "0" when (col_assign_i_phi_fu_395_p4 = ap_const_lv12_0) else "1";
    tmp_4_fu_459_p1 <= C_XR0C2_channel_dout(8 - 1 downto 0);
    tmp_5_fu_463_p1 <= C_XR1C0_channel_dout(8 - 1 downto 0);
    tmp_6_fu_467_p1 <= C_XR1C1_channel_dout(8 - 1 downto 0);
    tmp_6_i_fu_445_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(rows_cast_i_i_cast_i_fu_411_p1));
    tmp_7_fu_471_p1 <= C_XR1C2_channel_dout(8 - 1 downto 0);
    tmp_8_fu_475_p1 <= C_XR2C0_channel_dout(8 - 1 downto 0);
    tmp_9_fu_479_p1 <= C_XR2C1_channel_dout(8 - 1 downto 0);
    tmp_fu_403_p1 <= rows(11 - 1 downto 0);
    tmp_i_10_fu_1006_p2 <= (tmp_27_i_i_i_i_reg_1490 or tmp_28_i_i_i_i_reg_1496);
    tmp_i_fu_985_p2 <= (icmp_reg_1299 or ap_pipeline_reg_pp0_iter6_icmp6_reg_1369);
    x_weight_2_2_2_i_i_i_fu_881_p2 <= std_logic_vector(unsigned(tmp4_i_reg_1435) + unsigned(tmp8_i_fu_877_p2));
    y_weight_2_2_2_i_i_i_fu_890_p2 <= std_logic_vector(unsigned(tmp11_i_reg_1450) + unsigned(tmp15_i_fu_886_p2));
end behav;
