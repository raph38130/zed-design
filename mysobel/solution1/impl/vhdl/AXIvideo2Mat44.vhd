-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AXIvideo2Mat44 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    video_in_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    video_in_TVALID : IN STD_LOGIC;
    video_in_TREADY : OUT STD_LOGIC;
    video_in_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    video_in_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    video_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    img_0_data_stream_0_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_0_data_stream_0_full_n : IN STD_LOGIC;
    img_0_data_stream_0_write : OUT STD_LOGIC;
    img_0_data_stream_1_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_0_data_stream_1_full_n : IN STD_LOGIC;
    img_0_data_stream_1_write : OUT STD_LOGIC;
    C_XR0C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    c_high_thresh : IN STD_LOGIC_VECTOR (31 downto 0);
    c_low_thresh : IN STD_LOGIC_VECTOR (31 downto 0);
    c_invert : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C0_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C0_channel_full_n : IN STD_LOGIC;
    C_XR0C0_channel_write : OUT STD_LOGIC;
    C_XR0C1_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C1_channel_full_n : IN STD_LOGIC;
    C_XR0C1_channel_write : OUT STD_LOGIC;
    C_XR0C2_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C2_channel_full_n : IN STD_LOGIC;
    C_XR0C2_channel_write : OUT STD_LOGIC;
    C_XR1C0_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C0_channel_full_n : IN STD_LOGIC;
    C_XR1C0_channel_write : OUT STD_LOGIC;
    C_XR1C1_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C1_channel_full_n : IN STD_LOGIC;
    C_XR1C1_channel_write : OUT STD_LOGIC;
    C_XR1C2_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C2_channel_full_n : IN STD_LOGIC;
    C_XR1C2_channel_write : OUT STD_LOGIC;
    C_XR2C0_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C0_channel_full_n : IN STD_LOGIC;
    C_XR2C0_channel_write : OUT STD_LOGIC;
    C_XR2C1_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C1_channel_full_n : IN STD_LOGIC;
    C_XR2C1_channel_write : OUT STD_LOGIC;
    C_XR2C2_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C2_channel_full_n : IN STD_LOGIC;
    C_XR2C2_channel_write : OUT STD_LOGIC;
    C_YR0C0_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C0_channel_full_n : IN STD_LOGIC;
    C_YR0C0_channel_write : OUT STD_LOGIC;
    C_YR0C1_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C1_channel_full_n : IN STD_LOGIC;
    C_YR0C1_channel_write : OUT STD_LOGIC;
    C_YR0C2_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C2_channel_full_n : IN STD_LOGIC;
    C_YR0C2_channel_write : OUT STD_LOGIC;
    C_YR1C0_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C0_channel_full_n : IN STD_LOGIC;
    C_YR1C0_channel_write : OUT STD_LOGIC;
    C_YR1C1_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C1_channel_full_n : IN STD_LOGIC;
    C_YR1C1_channel_write : OUT STD_LOGIC;
    C_YR1C2_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C2_channel_full_n : IN STD_LOGIC;
    C_YR1C2_channel_write : OUT STD_LOGIC;
    C_YR2C0_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C0_channel_full_n : IN STD_LOGIC;
    C_YR2C0_channel_write : OUT STD_LOGIC;
    C_YR2C1_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C1_channel_full_n : IN STD_LOGIC;
    C_YR2C1_channel_write : OUT STD_LOGIC;
    c_high_thresh_channe_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_high_thresh_channe_full_n : IN STD_LOGIC;
    c_high_thresh_channe_write : OUT STD_LOGIC;
    c_low_thresh_channel_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_low_thresh_channel_1_full_n : IN STD_LOGIC;
    c_low_thresh_channel_1_write : OUT STD_LOGIC;
    c_invert_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_invert_channel_full_n : IN STD_LOGIC;
    c_invert_channel_write : OUT STD_LOGIC );
end;


architecture behav of AXIvideo2Mat44 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal video_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal video_in_V_data_V_0_vld_in : STD_LOGIC;
    signal video_in_V_data_V_0_vld_out : STD_LOGIC;
    signal video_in_V_data_V_0_ack_in : STD_LOGIC;
    signal video_in_V_data_V_0_ack_out : STD_LOGIC;
    signal video_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal video_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal video_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal video_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal video_in_V_data_V_0_sel : STD_LOGIC;
    signal video_in_V_data_V_0_load_A : STD_LOGIC;
    signal video_in_V_data_V_0_load_B : STD_LOGIC;
    signal video_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal video_in_V_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_user_V_0_vld_in : STD_LOGIC;
    signal video_in_V_user_V_0_vld_out : STD_LOGIC;
    signal video_in_V_user_V_0_ack_in : STD_LOGIC;
    signal video_in_V_user_V_0_ack_out : STD_LOGIC;
    signal video_in_V_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal video_in_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal video_in_V_user_V_0_sel : STD_LOGIC;
    signal video_in_V_user_V_0_load_A : STD_LOGIC;
    signal video_in_V_user_V_0_load_B : STD_LOGIC;
    signal video_in_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_in_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal video_in_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_last_V_0_vld_in : STD_LOGIC;
    signal video_in_V_last_V_0_vld_out : STD_LOGIC;
    signal video_in_V_last_V_0_ack_in : STD_LOGIC;
    signal video_in_V_last_V_0_ack_out : STD_LOGIC;
    signal video_in_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal video_in_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal video_in_V_last_V_0_sel : STD_LOGIC;
    signal video_in_V_last_V_0_load_A : STD_LOGIC;
    signal video_in_V_last_V_0_load_B : STD_LOGIC;
    signal video_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_in_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal video_in_V_dest_V_0_vld_in : STD_LOGIC;
    signal video_in_V_dest_V_0_ack_out : STD_LOGIC;
    signal video_in_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond_i_i_i_i_reg_758 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_i_reg_767 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal eol_2_i_i_i_i_reg_605 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_0_data_stream_0_blk_n : STD_LOGIC;
    signal img_0_data_stream_1_blk_n : STD_LOGIC;
    signal C_XR0C0_channel_blk_n : STD_LOGIC;
    signal C_XR0C1_channel_blk_n : STD_LOGIC;
    signal C_XR0C2_channel_blk_n : STD_LOGIC;
    signal C_XR1C0_channel_blk_n : STD_LOGIC;
    signal C_XR1C1_channel_blk_n : STD_LOGIC;
    signal C_XR1C2_channel_blk_n : STD_LOGIC;
    signal C_XR2C0_channel_blk_n : STD_LOGIC;
    signal C_XR2C1_channel_blk_n : STD_LOGIC;
    signal C_XR2C2_channel_blk_n : STD_LOGIC;
    signal C_YR0C0_channel_blk_n : STD_LOGIC;
    signal C_YR0C1_channel_blk_n : STD_LOGIC;
    signal C_YR0C2_channel_blk_n : STD_LOGIC;
    signal C_YR1C0_channel_blk_n : STD_LOGIC;
    signal C_YR1C1_channel_blk_n : STD_LOGIC;
    signal C_YR1C2_channel_blk_n : STD_LOGIC;
    signal C_YR2C0_channel_blk_n : STD_LOGIC;
    signal C_YR2C1_channel_blk_n : STD_LOGIC;
    signal c_high_thresh_channe_blk_n : STD_LOGIC;
    signal c_low_thresh_channel_1_blk_n : STD_LOGIC;
    signal c_invert_channel_blk_n : STD_LOGIC;
    signal p_3_i_i_i_i_reg_535 : STD_LOGIC_VECTOR (10 downto 0);
    signal eol_i_i_i_i_reg_546 : STD_LOGIC_VECTOR (0 downto 0);
    signal eol_reg_558 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_i_i_i_i_reg_569 : STD_LOGIC_VECTOR (15 downto 0);
    signal axi_last_V_3_i_i_i_i_reg_616 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_3_i_i_i_i_reg_628 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_650_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_condition_671 : BOOLEAN;
    signal tmp_30_fu_654_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_data_V_reg_729 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_last_V_reg_737 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_i_i_i_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_V_fu_672_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_753 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i_i_i_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_703 : BOOLEAN;
    signal j_V_fu_683_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal brmerge_i_i_i_i_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal eol_2_i_i_i_i_phi_fu_608_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V1_i_i_i_i_reg_504 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal axi_data_V1_i_i_i_i_reg_514 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_i_i_i_i_reg_524 : STD_LOGIC_VECTOR (10 downto 0);
    signal eol_i_i_i_i_phi_fu_550_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_2_i_i_i_i_phi_fu_585_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_phi_fu_597_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593 : STD_LOGIC_VECTOR (15 downto 0);
    signal sof_1_i_i_i_i_fu_176 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_fu_658_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_584 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))) and not((ap_const_lv1_0 = exitcond_i_i_i_i_fu_678_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = eol_2_i_i_i_i_phi_fu_608_p4)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    video_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_data_V_0_ack_out) and (ap_const_logic_1 = video_in_V_data_V_0_vld_out))) then 
                                        video_in_V_data_V_0_sel_rd <= not(video_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_data_V_0_vld_in) and (ap_const_logic_1 = video_in_V_data_V_0_ack_in))) then 
                                        video_in_V_data_V_0_sel_wr <= not(video_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_in_V_data_V_0_vld_in) and (ap_const_logic_1 = video_in_V_data_V_0_ack_out) and (video_in_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = video_in_V_data_V_0_vld_in) and (video_in_V_data_V_0_state = ap_const_lv2_2)))) then 
                    video_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_in_V_data_V_0_vld_in) and (ap_const_logic_0 = video_in_V_data_V_0_ack_out) and (video_in_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = video_in_V_data_V_0_ack_out) and (video_in_V_data_V_0_state = ap_const_lv2_1)))) then 
                    video_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_in_V_data_V_0_vld_in) and (video_in_V_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = video_in_V_data_V_0_ack_out) and (video_in_V_data_V_0_state = ap_const_lv2_1)) or ((video_in_V_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = video_in_V_data_V_0_vld_in) and (ap_const_logic_0 = video_in_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = video_in_V_data_V_0_vld_in) and (ap_const_logic_1 = video_in_V_data_V_0_ack_out)))))) then 
                    video_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    video_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_in_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_in_V_dest_V_0_vld_in) and (ap_const_logic_1 = video_in_V_dest_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_dest_V_0_state)) or ((ap_const_logic_0 = video_in_V_dest_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_dest_V_0_state)))) then 
                    video_in_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_in_V_dest_V_0_vld_in) and (ap_const_logic_0 = video_in_V_dest_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_dest_V_0_state)) or ((ap_const_logic_0 = video_in_V_dest_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_dest_V_0_state)))) then 
                    video_in_V_dest_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_in_V_dest_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_dest_V_0_state)) or ((ap_const_logic_1 = video_in_V_dest_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_dest_V_0_state)) or ((ap_const_lv2_3 = video_in_V_dest_V_0_state) and not(((ap_const_logic_1 = video_in_V_dest_V_0_vld_in) and (ap_const_logic_0 = video_in_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = video_in_V_dest_V_0_vld_in) and (ap_const_logic_1 = video_in_V_dest_V_0_ack_out)))))) then 
                    video_in_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    video_in_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_in_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_last_V_0_ack_out) and (ap_const_logic_1 = video_in_V_last_V_0_vld_out))) then 
                                        video_in_V_last_V_0_sel_rd <= not(video_in_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_last_V_0_vld_in) and (ap_const_logic_1 = video_in_V_last_V_0_ack_in))) then 
                                        video_in_V_last_V_0_sel_wr <= not(video_in_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_in_V_last_V_0_vld_in) and (ap_const_logic_1 = video_in_V_last_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_last_V_0_state)) or ((ap_const_logic_0 = video_in_V_last_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_last_V_0_state)))) then 
                    video_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_in_V_last_V_0_vld_in) and (ap_const_logic_0 = video_in_V_last_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_last_V_0_state)) or ((ap_const_logic_0 = video_in_V_last_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_last_V_0_state)))) then 
                    video_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_in_V_last_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_last_V_0_state)) or ((ap_const_logic_1 = video_in_V_last_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_last_V_0_state)) or ((ap_const_lv2_3 = video_in_V_last_V_0_state) and not(((ap_const_logic_1 = video_in_V_last_V_0_vld_in) and (ap_const_logic_0 = video_in_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = video_in_V_last_V_0_vld_in) and (ap_const_logic_1 = video_in_V_last_V_0_ack_out)))))) then 
                    video_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    video_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_in_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_user_V_0_ack_out) and (ap_const_logic_1 = video_in_V_user_V_0_vld_out))) then 
                                        video_in_V_user_V_0_sel_rd <= not(video_in_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_user_V_0_vld_in) and (ap_const_logic_1 = video_in_V_user_V_0_ack_in))) then 
                                        video_in_V_user_V_0_sel_wr <= not(video_in_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                video_in_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_in_V_user_V_0_vld_in) and (ap_const_logic_1 = video_in_V_user_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_user_V_0_state)) or ((ap_const_logic_0 = video_in_V_user_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_user_V_0_state)))) then 
                    video_in_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_in_V_user_V_0_vld_in) and (ap_const_logic_0 = video_in_V_user_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_user_V_0_state)) or ((ap_const_logic_0 = video_in_V_user_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_user_V_0_state)))) then 
                    video_in_V_user_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_in_V_user_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_user_V_0_state)) or ((ap_const_logic_1 = video_in_V_user_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_user_V_0_state)) or ((ap_const_lv2_3 = video_in_V_user_V_0_state) and not(((ap_const_logic_1 = video_in_V_user_V_0_vld_in) and (ap_const_logic_0 = video_in_V_user_V_0_ack_out))) and not(((ap_const_logic_0 = video_in_V_user_V_0_vld_in) and (ap_const_logic_1 = video_in_V_user_V_0_ack_out)))))) then 
                    video_in_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    video_in_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    axi_data_V1_i_i_i_i_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                axi_data_V1_i_i_i_i_reg_514 <= tmp_data_V_reg_729;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                axi_data_V1_i_i_i_i_reg_514 <= axi_data_V_3_i_i_i_i_reg_628;
            end if; 
        end if;
    end process;

    axi_data_V_1_i_i_i_i_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))))) then 
                axi_data_V_1_i_i_i_i_reg_569 <= p_Val2_s_phi_fu_597_p4;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2))) then 
                axi_data_V_1_i_i_i_i_reg_569 <= axi_data_V1_i_i_i_i_reg_514;
            end if; 
        end if;
    end process;

    axi_data_V_3_i_i_i_i_reg_628_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                axi_data_V_3_i_i_i_i_reg_628 <= axi_data_V_1_i_i_i_i_reg_569;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0))))) then 
                axi_data_V_3_i_i_i_i_reg_628 <= video_in_V_data_V_0_data_out;
            end if; 
        end if;
    end process;

    axi_last_V1_i_i_i_i_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                axi_last_V1_i_i_i_i_reg_504 <= tmp_last_V_reg_737;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                axi_last_V1_i_i_i_i_reg_504 <= axi_last_V_3_i_i_i_i_reg_616;
            end if; 
        end if;
    end process;

    axi_last_V_3_i_i_i_i_reg_616_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                axi_last_V_3_i_i_i_i_reg_616 <= eol_reg_558;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0))))) then 
                axi_last_V_3_i_i_i_i_reg_616 <= video_in_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_2_i_i_i_i_reg_605_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                eol_2_i_i_i_i_reg_605 <= eol_i_i_i_i_reg_546;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0))))) then 
                eol_2_i_i_i_i_reg_605 <= video_in_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_i_i_i_i_reg_546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))))) then 
                eol_i_i_i_i_reg_546 <= axi_last_V_2_i_i_i_i_phi_fu_585_p4;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2))) then 
                eol_i_i_i_i_reg_546 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    eol_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))))) then 
                eol_reg_558 <= axi_last_V_2_i_i_i_i_phi_fu_585_p4;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2))) then 
                eol_reg_558 <= axi_last_V1_i_i_i_i_reg_504;
            end if; 
        end if;
    end process;

    p_3_i_i_i_i_reg_535_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_i_i_fu_678_p2))) then 
                p_3_i_i_i_i_reg_535 <= j_V_fu_683_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2))) then 
                p_3_i_i_i_i_reg_535 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_i_i_i_i_reg_524_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                p_i_i_i_i_reg_524 <= ap_const_lv11_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                p_i_i_i_i_reg_524 <= i_V_reg_753;
            end if; 
        end if;
    end process;

    sof_1_i_i_i_i_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_i_i_fu_678_p2))) then 
                sof_1_i_i_i_i_fu_176 <= ap_const_lv1_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                sof_1_i_i_i_i_fu_176 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))) and (ap_const_lv1_0 = exitcond_i_i_i_i_fu_678_p2))) then
                brmerge_i_i_i_i_reg_767 <= brmerge_i_i_i_i_fu_692_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))))) then
                exitcond_i_i_i_i_reg_758 <= exitcond_i_i_i_i_fu_678_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                i_V_reg_753 <= i_V_fu_672_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((video_in_V_data_V_0_vld_out = ap_const_logic_0)))) then
                tmp_data_V_reg_729 <= video_in_V_data_V_0_data_out;
                tmp_last_V_reg_737 <= video_in_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_data_V_0_load_A)) then
                video_in_V_data_V_0_payload_A <= video_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_data_V_0_load_B)) then
                video_in_V_data_V_0_payload_B <= video_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_last_V_0_load_A)) then
                video_in_V_last_V_0_payload_A <= video_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_last_V_0_load_B)) then
                video_in_V_last_V_0_payload_B <= video_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_user_V_0_load_A)) then
                video_in_V_user_V_0_payload_A <= video_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_user_V_0_load_B)) then
                video_in_V_user_V_0_payload_B <= video_in_TUSER;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, video_in_V_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_i_i_reg_605, ap_condition_671, exitcond2_i_i_i_i_fu_667_p2, ap_condition_703, ap_enable_reg_pp1_iter0, ap_enable_reg_pp2_iter0, tmp_user_V_fu_658_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_condition_671 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((video_in_V_data_V_0_vld_out = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_user_V_fu_658_p1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((video_in_V_data_V_0_vld_out = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_user_V_fu_658_p1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (not((ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    C_XR0C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR0C0_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR0C0_channel_blk_n <= C_XR0C0_channel_full_n;
        else 
            C_XR0C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_XR0C0_channel_din <= C_XR0C0;

    C_XR0C0_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_XR0C0_channel_write <= ap_const_logic_1;
        else 
            C_XR0C0_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_XR0C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR0C1_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR0C1_channel_blk_n <= C_XR0C1_channel_full_n;
        else 
            C_XR0C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_XR0C1_channel_din <= C_XR0C1;

    C_XR0C1_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_XR0C1_channel_write <= ap_const_logic_1;
        else 
            C_XR0C1_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_XR0C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR0C2_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR0C2_channel_blk_n <= C_XR0C2_channel_full_n;
        else 
            C_XR0C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_XR0C2_channel_din <= C_XR0C2;

    C_XR0C2_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_XR0C2_channel_write <= ap_const_logic_1;
        else 
            C_XR0C2_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_XR1C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR1C0_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR1C0_channel_blk_n <= C_XR1C0_channel_full_n;
        else 
            C_XR1C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_XR1C0_channel_din <= C_XR1C0;

    C_XR1C0_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_XR1C0_channel_write <= ap_const_logic_1;
        else 
            C_XR1C0_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_XR1C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR1C1_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR1C1_channel_blk_n <= C_XR1C1_channel_full_n;
        else 
            C_XR1C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_XR1C1_channel_din <= C_XR1C1;

    C_XR1C1_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_XR1C1_channel_write <= ap_const_logic_1;
        else 
            C_XR1C1_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_XR1C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR1C2_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR1C2_channel_blk_n <= C_XR1C2_channel_full_n;
        else 
            C_XR1C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_XR1C2_channel_din <= C_XR1C2;

    C_XR1C2_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_XR1C2_channel_write <= ap_const_logic_1;
        else 
            C_XR1C2_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_XR2C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR2C0_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR2C0_channel_blk_n <= C_XR2C0_channel_full_n;
        else 
            C_XR2C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_XR2C0_channel_din <= C_XR2C0;

    C_XR2C0_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_XR2C0_channel_write <= ap_const_logic_1;
        else 
            C_XR2C0_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_XR2C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR2C1_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR2C1_channel_blk_n <= C_XR2C1_channel_full_n;
        else 
            C_XR2C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_XR2C1_channel_din <= C_XR2C1;

    C_XR2C1_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_XR2C1_channel_write <= ap_const_logic_1;
        else 
            C_XR2C1_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_XR2C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_XR2C2_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_XR2C2_channel_blk_n <= C_XR2C2_channel_full_n;
        else 
            C_XR2C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_XR2C2_channel_din <= C_XR2C2;

    C_XR2C2_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_XR2C2_channel_write <= ap_const_logic_1;
        else 
            C_XR2C2_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_YR0C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR0C0_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR0C0_channel_blk_n <= C_YR0C0_channel_full_n;
        else 
            C_YR0C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_YR0C0_channel_din <= C_YR0C0;

    C_YR0C0_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_YR0C0_channel_write <= ap_const_logic_1;
        else 
            C_YR0C0_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_YR0C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR0C1_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR0C1_channel_blk_n <= C_YR0C1_channel_full_n;
        else 
            C_YR0C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_YR0C1_channel_din <= C_YR0C1;

    C_YR0C1_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_YR0C1_channel_write <= ap_const_logic_1;
        else 
            C_YR0C1_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_YR0C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR0C2_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR0C2_channel_blk_n <= C_YR0C2_channel_full_n;
        else 
            C_YR0C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_YR0C2_channel_din <= C_YR0C2;

    C_YR0C2_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_YR0C2_channel_write <= ap_const_logic_1;
        else 
            C_YR0C2_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_YR1C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR1C0_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR1C0_channel_blk_n <= C_YR1C0_channel_full_n;
        else 
            C_YR1C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_YR1C0_channel_din <= C_YR1C0;

    C_YR1C0_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_YR1C0_channel_write <= ap_const_logic_1;
        else 
            C_YR1C0_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_YR1C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR1C1_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR1C1_channel_blk_n <= C_YR1C1_channel_full_n;
        else 
            C_YR1C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_YR1C1_channel_din <= C_YR1C1;

    C_YR1C1_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_YR1C1_channel_write <= ap_const_logic_1;
        else 
            C_YR1C1_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_YR1C2_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR1C2_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR1C2_channel_blk_n <= C_YR1C2_channel_full_n;
        else 
            C_YR1C2_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_YR1C2_channel_din <= C_YR1C2;

    C_YR1C2_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_YR1C2_channel_write <= ap_const_logic_1;
        else 
            C_YR1C2_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_YR2C0_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR2C0_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR2C0_channel_blk_n <= C_YR2C0_channel_full_n;
        else 
            C_YR2C0_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_YR2C0_channel_din <= C_YR2C0;

    C_YR2C0_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_YR2C0_channel_write <= ap_const_logic_1;
        else 
            C_YR2C0_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    C_YR2C1_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, C_YR2C1_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            C_YR2C1_channel_blk_n <= C_YR2C1_channel_full_n;
        else 
            C_YR2C1_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_YR2C1_channel_din <= C_YR2C1;

    C_YR2C1_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            C_YR2C1_channel_write <= ap_const_logic_1;
        else 
            C_YR2C1_channel_write <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5 downto 5);

    ap_condition_584_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758)
    begin
                ap_condition_584 <= ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758));
    end process;


    ap_condition_671_assign_proc : process(ap_start, ap_done_reg, C_XR0C0_channel_full_n, C_XR0C1_channel_full_n, C_XR0C2_channel_full_n, C_XR1C0_channel_full_n, C_XR1C1_channel_full_n, C_XR1C2_channel_full_n, C_XR2C0_channel_full_n, C_XR2C1_channel_full_n, C_XR2C2_channel_full_n, C_YR0C0_channel_full_n, C_YR0C1_channel_full_n, C_YR0C2_channel_full_n, C_YR1C0_channel_full_n, C_YR1C1_channel_full_n, C_YR1C2_channel_full_n, C_YR2C0_channel_full_n, C_YR2C1_channel_full_n, c_high_thresh_channe_full_n, c_low_thresh_channel_1_full_n, c_invert_channel_full_n)
    begin
                ap_condition_671 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (C_XR0C0_channel_full_n = ap_const_logic_0) or (C_XR0C1_channel_full_n = ap_const_logic_0) or (C_XR0C2_channel_full_n = ap_const_logic_0) or (C_XR1C0_channel_full_n = ap_const_logic_0) or (C_XR1C1_channel_full_n = ap_const_logic_0) or (C_XR1C2_channel_full_n = ap_const_logic_0) or (C_XR2C0_channel_full_n = ap_const_logic_0) or (C_XR2C1_channel_full_n = ap_const_logic_0) or (C_XR2C2_channel_full_n = ap_const_logic_0) or (C_YR0C0_channel_full_n = ap_const_logic_0) or (C_YR0C1_channel_full_n = ap_const_logic_0) or (C_YR0C2_channel_full_n = ap_const_logic_0) or (C_YR1C0_channel_full_n = ap_const_logic_0) or (C_YR1C1_channel_full_n = ap_const_logic_0) or (C_YR1C2_channel_full_n = ap_const_logic_0) or (C_YR2C0_channel_full_n = ap_const_logic_0) or (C_YR2C1_channel_full_n = ap_const_logic_0) or (c_high_thresh_channe_full_n = ap_const_logic_0) or (c_low_thresh_channel_1_full_n = ap_const_logic_0) or (c_invert_channel_full_n = ap_const_logic_0));
    end process;


    ap_condition_703_assign_proc : process(video_in_V_data_V_0_vld_out, img_0_data_stream_0_full_n, img_0_data_stream_1_full_n, exitcond_i_i_i_i_reg_758, brmerge_i_i_i_i_reg_767)
    begin
                ap_condition_703 <= (((ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and (ap_const_lv1_0 = brmerge_i_i_i_i_reg_767) and (video_in_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and (img_0_data_stream_0_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and (img_0_data_stream_1_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond2_i_i_i_i_fu_667_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580 <= "X";
    ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593 <= "XXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(exitcond2_i_i_i_i_fu_667_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = exitcond2_i_i_i_i_fu_667_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    axi_last_V_2_i_i_i_i_phi_fu_585_p4_assign_proc : process(video_in_V_last_V_0_data_out, brmerge_i_i_i_i_reg_767, eol_reg_558, ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580, ap_condition_584)
    begin
        if ((ap_condition_584 = ap_const_boolean_1)) then
            if (not((ap_const_lv1_0 = brmerge_i_i_i_i_reg_767))) then 
                axi_last_V_2_i_i_i_i_phi_fu_585_p4 <= eol_reg_558;
            elsif ((ap_const_lv1_0 = brmerge_i_i_i_i_reg_767)) then 
                axi_last_V_2_i_i_i_i_phi_fu_585_p4 <= video_in_V_last_V_0_data_out;
            else 
                axi_last_V_2_i_i_i_i_phi_fu_585_p4 <= ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580;
            end if;
        else 
            axi_last_V_2_i_i_i_i_phi_fu_585_p4 <= ap_phi_precharge_reg_pp1_iter1_axi_last_V_2_i_i_i_i_reg_580;
        end if; 
    end process;

    brmerge_i_i_i_i_fu_692_p2 <= (sof_1_i_i_i_i_fu_176 or eol_i_i_i_i_phi_fu_550_p4);

    c_high_thresh_channe_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, c_high_thresh_channe_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            c_high_thresh_channe_blk_n <= c_high_thresh_channe_full_n;
        else 
            c_high_thresh_channe_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    c_high_thresh_channe_din <= c_high_thresh;

    c_high_thresh_channe_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            c_high_thresh_channe_write <= ap_const_logic_1;
        else 
            c_high_thresh_channe_write <= ap_const_logic_0;
        end if; 
    end process;


    c_invert_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, c_invert_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            c_invert_channel_blk_n <= c_invert_channel_full_n;
        else 
            c_invert_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    c_invert_channel_din <= c_invert;

    c_invert_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            c_invert_channel_write <= ap_const_logic_1;
        else 
            c_invert_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    c_low_thresh_channel_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, c_low_thresh_channel_1_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            c_low_thresh_channel_1_blk_n <= c_low_thresh_channel_1_full_n;
        else 
            c_low_thresh_channel_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    c_low_thresh_channel_1_din <= c_low_thresh;

    c_low_thresh_channel_1_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_671)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_671 = ap_const_boolean_1)))) then 
            c_low_thresh_channel_1_write <= ap_const_logic_1;
        else 
            c_low_thresh_channel_1_write <= ap_const_logic_0;
        end if; 
    end process;


    eol_2_i_i_i_i_phi_fu_608_p4_assign_proc : process(video_in_V_last_V_0_data_out, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_i_i_reg_605)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605))) then 
            eol_2_i_i_i_i_phi_fu_608_p4 <= video_in_V_last_V_0_data_out;
        else 
            eol_2_i_i_i_i_phi_fu_608_p4 <= eol_2_i_i_i_i_reg_605;
        end if; 
    end process;


    eol_i_i_i_i_phi_fu_550_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758, eol_i_i_i_i_reg_546, axi_last_V_2_i_i_i_i_phi_fu_585_p4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758))) then 
            eol_i_i_i_i_phi_fu_550_p4 <= axi_last_V_2_i_i_i_i_phi_fu_585_p4;
        else 
            eol_i_i_i_i_phi_fu_550_p4 <= eol_i_i_i_i_reg_546;
        end if; 
    end process;

    exitcond2_i_i_i_i_fu_667_p2 <= "1" when (p_i_i_i_i_reg_524 = tmp_fu_650_p1) else "0";
    exitcond_i_i_i_i_fu_678_p2 <= "1" when (p_3_i_i_i_i_reg_535 = tmp_30_fu_654_p1) else "0";
    i_V_fu_672_p2 <= std_logic_vector(unsigned(p_i_i_i_i_reg_524) + unsigned(ap_const_lv11_1));

    img_0_data_stream_0_blk_n_assign_proc : process(img_0_data_stream_0_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758))) then 
            img_0_data_stream_0_blk_n <= img_0_data_stream_0_full_n;
        else 
            img_0_data_stream_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_0_data_stream_0_din <= p_Val2_s_phi_fu_597_p4(8 - 1 downto 0);

    img_0_data_stream_0_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758, ap_condition_703)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))))) then 
            img_0_data_stream_0_write <= ap_const_logic_1;
        else 
            img_0_data_stream_0_write <= ap_const_logic_0;
        end if; 
    end process;


    img_0_data_stream_1_blk_n_assign_proc : process(img_0_data_stream_1_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758))) then 
            img_0_data_stream_1_blk_n <= img_0_data_stream_1_full_n;
        else 
            img_0_data_stream_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_0_data_stream_1_din <= p_Val2_s_phi_fu_597_p4(15 downto 8);

    img_0_data_stream_1_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758, ap_condition_703)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1))))) then 
            img_0_data_stream_1_write <= ap_const_logic_1;
        else 
            img_0_data_stream_1_write <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_683_p2 <= std_logic_vector(unsigned(p_3_i_i_i_i_reg_535) + unsigned(ap_const_lv11_1));

    p_Val2_s_phi_fu_597_p4_assign_proc : process(video_in_V_data_V_0_data_out, brmerge_i_i_i_i_reg_767, axi_data_V_1_i_i_i_i_reg_569, ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593, ap_condition_584)
    begin
        if ((ap_condition_584 = ap_const_boolean_1)) then
            if (not((ap_const_lv1_0 = brmerge_i_i_i_i_reg_767))) then 
                p_Val2_s_phi_fu_597_p4 <= axi_data_V_1_i_i_i_i_reg_569;
            elsif ((ap_const_lv1_0 = brmerge_i_i_i_i_reg_767)) then 
                p_Val2_s_phi_fu_597_p4 <= video_in_V_data_V_0_data_out;
            else 
                p_Val2_s_phi_fu_597_p4 <= ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593;
            end if;
        else 
            p_Val2_s_phi_fu_597_p4 <= ap_phi_precharge_reg_pp1_iter1_p_Val2_s_reg_593;
        end if; 
    end process;

    tmp_30_fu_654_p1 <= cols(11 - 1 downto 0);
    tmp_fu_650_p1 <= rows(11 - 1 downto 0);
    tmp_user_V_fu_658_p1 <= video_in_V_user_V_0_data_out;

    video_in_TDATA_blk_n_assign_proc : process(video_in_V_data_V_0_state, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758, brmerge_i_i_i_i_reg_767, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_i_i_reg_605)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and (ap_const_lv1_0 = brmerge_i_i_i_i_reg_767)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605)))) then 
            video_in_TDATA_blk_n <= video_in_V_data_V_0_state(0);
        else 
            video_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    video_in_TREADY <= video_in_V_dest_V_0_state(1);
    video_in_V_data_V_0_ack_in <= video_in_V_data_V_0_state(1);

    video_in_V_data_V_0_ack_out_assign_proc : process(video_in_V_data_V_0_vld_out, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758, brmerge_i_i_i_i_reg_767, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_i_i_reg_605, ap_condition_703)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and not((video_in_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and (ap_const_lv1_0 = brmerge_i_i_i_i_reg_767) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1)))))) then 
            video_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            video_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    video_in_V_data_V_0_data_out_assign_proc : process(video_in_V_data_V_0_payload_A, video_in_V_data_V_0_payload_B, video_in_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = video_in_V_data_V_0_sel)) then 
            video_in_V_data_V_0_data_out <= video_in_V_data_V_0_payload_B;
        else 
            video_in_V_data_V_0_data_out <= video_in_V_data_V_0_payload_A;
        end if; 
    end process;

    video_in_V_data_V_0_load_A <= (video_in_V_data_V_0_state_cmp_full and not(video_in_V_data_V_0_sel_wr));
    video_in_V_data_V_0_load_B <= (video_in_V_data_V_0_sel_wr and video_in_V_data_V_0_state_cmp_full);
    video_in_V_data_V_0_sel <= video_in_V_data_V_0_sel_rd;
    video_in_V_data_V_0_state_cmp_full <= '0' when (video_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    video_in_V_data_V_0_vld_in <= video_in_TVALID;
    video_in_V_data_V_0_vld_out <= video_in_V_data_V_0_state(0);

    video_in_V_dest_V_0_ack_out_assign_proc : process(video_in_V_data_V_0_vld_out, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758, brmerge_i_i_i_i_reg_767, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_i_i_reg_605, ap_condition_703)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and not((video_in_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and (ap_const_lv1_0 = brmerge_i_i_i_i_reg_767) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1)))))) then 
            video_in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            video_in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    video_in_V_dest_V_0_vld_in <= video_in_TVALID;
    video_in_V_last_V_0_ack_in <= video_in_V_last_V_0_state(1);

    video_in_V_last_V_0_ack_out_assign_proc : process(video_in_V_data_V_0_vld_out, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758, brmerge_i_i_i_i_reg_767, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_i_i_reg_605, ap_condition_703)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and not((video_in_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and (ap_const_lv1_0 = brmerge_i_i_i_i_reg_767) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1)))))) then 
            video_in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            video_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    video_in_V_last_V_0_data_out_assign_proc : process(video_in_V_last_V_0_payload_A, video_in_V_last_V_0_payload_B, video_in_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = video_in_V_last_V_0_sel)) then 
            video_in_V_last_V_0_data_out <= video_in_V_last_V_0_payload_B;
        else 
            video_in_V_last_V_0_data_out <= video_in_V_last_V_0_payload_A;
        end if; 
    end process;

    video_in_V_last_V_0_load_A <= (video_in_V_last_V_0_state_cmp_full and not(video_in_V_last_V_0_sel_wr));
    video_in_V_last_V_0_load_B <= (video_in_V_last_V_0_sel_wr and video_in_V_last_V_0_state_cmp_full);
    video_in_V_last_V_0_sel <= video_in_V_last_V_0_sel_rd;
    video_in_V_last_V_0_state_cmp_full <= '0' when (video_in_V_last_V_0_state = ap_const_lv2_1) else '1';
    video_in_V_last_V_0_vld_in <= video_in_TVALID;
    video_in_V_last_V_0_vld_out <= video_in_V_last_V_0_state(0);
    video_in_V_user_V_0_ack_in <= video_in_V_user_V_0_state(1);

    video_in_V_user_V_0_ack_out_assign_proc : process(video_in_V_data_V_0_vld_out, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_i_i_i_i_reg_758, brmerge_i_i_i_i_reg_767, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_i_i_reg_605, ap_condition_703)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and not((video_in_V_data_V_0_vld_out = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = eol_2_i_i_i_i_reg_605) and (video_in_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i_i_i_reg_758) and (ap_const_lv1_0 = brmerge_i_i_i_i_reg_767) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_condition_703 = ap_const_boolean_1)))))) then 
            video_in_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            video_in_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    video_in_V_user_V_0_data_out_assign_proc : process(video_in_V_user_V_0_payload_A, video_in_V_user_V_0_payload_B, video_in_V_user_V_0_sel)
    begin
        if ((ap_const_logic_1 = video_in_V_user_V_0_sel)) then 
            video_in_V_user_V_0_data_out <= video_in_V_user_V_0_payload_B;
        else 
            video_in_V_user_V_0_data_out <= video_in_V_user_V_0_payload_A;
        end if; 
    end process;

    video_in_V_user_V_0_load_A <= (video_in_V_user_V_0_state_cmp_full and not(video_in_V_user_V_0_sel_wr));
    video_in_V_user_V_0_load_B <= (video_in_V_user_V_0_sel_wr and video_in_V_user_V_0_state_cmp_full);
    video_in_V_user_V_0_sel <= video_in_V_user_V_0_sel_rd;
    video_in_V_user_V_0_state_cmp_full <= '0' when (video_in_V_user_V_0_state = ap_const_lv2_1) else '1';
    video_in_V_user_V_0_vld_in <= video_in_TVALID;
    video_in_V_user_V_0_vld_out <= video_in_V_user_V_0_state(0);
end behav;
