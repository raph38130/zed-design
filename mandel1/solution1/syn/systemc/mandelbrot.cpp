// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mandelbrot.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mandelbrot::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mandelbrot::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<72> mandelbrot::ap_ST_fsm_state1 = "1";
const sc_lv<72> mandelbrot::ap_ST_fsm_state2 = "10";
const sc_lv<72> mandelbrot::ap_ST_fsm_state3 = "100";
const sc_lv<72> mandelbrot::ap_ST_fsm_state4 = "1000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state5 = "10000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state6 = "100000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state7 = "1000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state8 = "10000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state9 = "100000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state10 = "1000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state11 = "10000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state12 = "100000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage0 = "1000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage1 = "10000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage2 = "100000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage3 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage4 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage5 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage6 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage7 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage8 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage9 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage10 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage11 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage12 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage13 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage14 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage15 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage16 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage17 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage18 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage19 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage20 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage21 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_pp0_stage22 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> mandelbrot::ap_ST_fsm_state73 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> mandelbrot::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> mandelbrot::ap_const_lv1_1 = "1";
const int mandelbrot::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> mandelbrot::ap_const_lv32_2A = "101010";
const sc_lv<32> mandelbrot::ap_const_lv32_35 = "110101";
const sc_lv<1> mandelbrot::ap_const_lv1_0 = "0";
const sc_lv<32> mandelbrot::ap_const_lv32_3A = "111010";
const sc_lv<32> mandelbrot::ap_const_lv32_43 = "1000011";
const sc_lv<32> mandelbrot::ap_const_lv32_3E = "111110";
const sc_lv<32> mandelbrot::ap_const_lv32_5 = "101";
const sc_lv<32> mandelbrot::ap_const_lv32_24 = "100100";
const sc_lv<32> mandelbrot::ap_const_lv32_2F = "101111";
const sc_lv<32> mandelbrot::ap_const_lv32_30 = "110000";
const sc_lv<32> mandelbrot::ap_const_lv32_46 = "1000110";
const sc_lv<64> mandelbrot::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> mandelbrot::ap_const_lv32_47 = "1000111";
const sc_lv<64> mandelbrot::ap_const_lv64_C000000000000000 = "1100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> mandelbrot::ap_const_lv32_2B = "101011";
const sc_lv<32> mandelbrot::ap_const_lv32_36 = "110110";
const sc_lv<64> mandelbrot::ap_const_lv64_3FF0000000000000 = "11111111110000000000000000000000000000000000000000000000000000";
const sc_lv<64> mandelbrot::ap_const_lv64_4008000000000000 = "100000000001000000000000000000000000000000000000000000000000000";
const sc_lv<32> mandelbrot::ap_const_lv32_25 = "100101";
const sc_lv<64> mandelbrot::ap_const_lv64_4000000000000000 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> mandelbrot::ap_const_lv64_4084000000000000 = "100000010000100000000000000000000000000000000000000000000000000";
const sc_lv<32> mandelbrot::ap_const_lv32_6 = "110";
const sc_lv<64> mandelbrot::ap_const_lv64_407E000000000000 = "100000001111110000000000000000000000000000000000000000000000000";
const sc_lv<64> mandelbrot::ap_const_lv64_4010000000000000 = "100000000010000000000000000000000000000000000000000000000000000";
const sc_lv<32> mandelbrot::ap_const_lv32_8 = "1000";
const sc_lv<32> mandelbrot::ap_const_lv32_1F = "11111";
const sc_lv<24> mandelbrot::ap_const_lv24_1 = "1";
const sc_lv<32> mandelbrot::ap_const_lv32_1 = "1";
const sc_lv<32> mandelbrot::ap_const_lv32_34 = "110100";
const sc_lv<11> mandelbrot::ap_const_lv11_7FF = "11111111111";
const sc_lv<52> mandelbrot::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<32> mandelbrot::ap_const_lv32_101 = "100000001";
const sc_lv<2> mandelbrot::ap_const_lv2_0 = "00";
const sc_lv<2> mandelbrot::ap_const_lv2_1 = "1";
const sc_lv<5> mandelbrot::ap_const_lv5_2 = "10";

mandelbrot::mandelbrot(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mandelbrot_AXILiteS_s_axi_U = new mandelbrot_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("mandelbrot_AXILiteS_s_axi_U");
    mandelbrot_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    mandelbrot_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    mandelbrot_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    mandelbrot_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    mandelbrot_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    mandelbrot_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    mandelbrot_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    mandelbrot_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    mandelbrot_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    mandelbrot_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    mandelbrot_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    mandelbrot_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    mandelbrot_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    mandelbrot_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    mandelbrot_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    mandelbrot_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    mandelbrot_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    mandelbrot_AXILiteS_s_axi_U->ACLK(ap_clk);
    mandelbrot_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    mandelbrot_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    mandelbrot_AXILiteS_s_axi_U->ap_start(ap_start);
    mandelbrot_AXILiteS_s_axi_U->interrupt(interrupt);
    mandelbrot_AXILiteS_s_axi_U->ap_ready(ap_ready);
    mandelbrot_AXILiteS_s_axi_U->ap_done(ap_done);
    mandelbrot_AXILiteS_s_axi_U->ap_idle(ap_idle);
    mandelbrot_AXILiteS_s_axi_U->ap_return(tmp_6_reg_86);
    mandelbrot_AXILiteS_s_axi_U->cx(cx);
    mandelbrot_AXILiteS_s_axi_U->cy(cy);
    mandelbrot_dadddsbkb_U1 = new mandelbrot_dadddsbkb<1,5,64,64,64>("mandelbrot_dadddsbkb_U1");
    mandelbrot_dadddsbkb_U1->clk(ap_clk);
    mandelbrot_dadddsbkb_U1->reset(ap_rst_n_inv);
    mandelbrot_dadddsbkb_U1->din0(grp_fu_122_p0);
    mandelbrot_dadddsbkb_U1->din1(grp_fu_122_p1);
    mandelbrot_dadddsbkb_U1->opcode(grp_fu_122_opcode);
    mandelbrot_dadddsbkb_U1->ce(ap_var_for_const0);
    mandelbrot_dadddsbkb_U1->dout(grp_fu_122_p2);
    mandelbrot_dadd_6cud_U2 = new mandelbrot_dadd_6cud<1,5,64,64,64>("mandelbrot_dadd_6cud_U2");
    mandelbrot_dadd_6cud_U2->clk(ap_clk);
    mandelbrot_dadd_6cud_U2->reset(ap_rst_n_inv);
    mandelbrot_dadd_6cud_U2->din0(grp_fu_127_p0);
    mandelbrot_dadd_6cud_U2->din1(grp_fu_127_p1);
    mandelbrot_dadd_6cud_U2->ce(ap_var_for_const0);
    mandelbrot_dadd_6cud_U2->dout(grp_fu_127_p2);
    mandelbrot_dmul_6dEe_U3 = new mandelbrot_dmul_6dEe<1,6,64,64,64>("mandelbrot_dmul_6dEe_U3");
    mandelbrot_dmul_6dEe_U3->clk(ap_clk);
    mandelbrot_dmul_6dEe_U3->reset(ap_rst_n_inv);
    mandelbrot_dmul_6dEe_U3->din0(grp_fu_133_p0);
    mandelbrot_dmul_6dEe_U3->din1(grp_fu_133_p1);
    mandelbrot_dmul_6dEe_U3->ce(ap_var_for_const0);
    mandelbrot_dmul_6dEe_U3->dout(grp_fu_133_p2);
    mandelbrot_dmul_6dEe_U4 = new mandelbrot_dmul_6dEe<1,6,64,64,64>("mandelbrot_dmul_6dEe_U4");
    mandelbrot_dmul_6dEe_U4->clk(ap_clk);
    mandelbrot_dmul_6dEe_U4->reset(ap_rst_n_inv);
    mandelbrot_dmul_6dEe_U4->din0(grp_fu_138_p0);
    mandelbrot_dmul_6dEe_U4->din1(grp_fu_138_p1);
    mandelbrot_dmul_6dEe_U4->ce(ap_var_for_const0);
    mandelbrot_dmul_6dEe_U4->dout(grp_fu_138_p2);
    mandelbrot_dmul_6dEe_U5 = new mandelbrot_dmul_6dEe<1,6,64,64,64>("mandelbrot_dmul_6dEe_U5");
    mandelbrot_dmul_6dEe_U5->clk(ap_clk);
    mandelbrot_dmul_6dEe_U5->reset(ap_rst_n_inv);
    mandelbrot_dmul_6dEe_U5->din0(t_phi_fu_102_p4);
    mandelbrot_dmul_6dEe_U5->din1(ap_var_for_const1);
    mandelbrot_dmul_6dEe_U5->ce(ap_var_for_const0);
    mandelbrot_dmul_6dEe_U5->dout(grp_fu_147_p2);
    mandelbrot_ddiv_6eOg_U6 = new mandelbrot_ddiv_6eOg<1,31,64,64,64>("mandelbrot_ddiv_6eOg_U6");
    mandelbrot_ddiv_6eOg_U6->clk(ap_clk);
    mandelbrot_ddiv_6eOg_U6->reset(ap_rst_n_inv);
    mandelbrot_ddiv_6eOg_U6->din0(tmp_reg_293);
    mandelbrot_ddiv_6eOg_U6->din1(ap_var_for_const2);
    mandelbrot_ddiv_6eOg_U6->ce(ap_var_for_const0);
    mandelbrot_ddiv_6eOg_U6->dout(grp_fu_162_p2);
    mandelbrot_ddiv_6eOg_U7 = new mandelbrot_ddiv_6eOg<1,31,64,64,64>("mandelbrot_ddiv_6eOg_U7");
    mandelbrot_ddiv_6eOg_U7->clk(ap_clk);
    mandelbrot_ddiv_6eOg_U7->reset(ap_rst_n_inv);
    mandelbrot_ddiv_6eOg_U7->din0(tmp_3_reg_298);
    mandelbrot_ddiv_6eOg_U7->din1(ap_var_for_const3);
    mandelbrot_ddiv_6eOg_U7->ce(ap_var_for_const0);
    mandelbrot_ddiv_6eOg_U7->dout(grp_fu_167_p2);
    mandelbrot_dcmp_6fYi_U8 = new mandelbrot_dcmp_6fYi<1,1,64,64,1>("mandelbrot_dcmp_6fYi_U8");
    mandelbrot_dcmp_6fYi_U8->din0(grp_fu_122_p2);
    mandelbrot_dcmp_6fYi_U8->din1(ap_var_for_const4);
    mandelbrot_dcmp_6fYi_U8->opcode(ap_var_for_const5);
    mandelbrot_dcmp_6fYi_U8->dout(tmp_20_fu_172_p2);
    mandelbrot_sitodpg8j_U9 = new mandelbrot_sitodpg8j<1,6,32,64>("mandelbrot_sitodpg8j_U9");
    mandelbrot_sitodpg8j_U9->clk(ap_clk);
    mandelbrot_sitodpg8j_U9->reset(ap_rst_n_inv);
    mandelbrot_sitodpg8j_U9->din0(cx);
    mandelbrot_sitodpg8j_U9->ce(ap_var_for_const0);
    mandelbrot_sitodpg8j_U9->dout(grp_fu_178_p1);
    mandelbrot_sitodpg8j_U10 = new mandelbrot_sitodpg8j<1,6,32,64>("mandelbrot_sitodpg8j_U10");
    mandelbrot_sitodpg8j_U10->clk(ap_clk);
    mandelbrot_sitodpg8j_U10->reset(ap_rst_n_inv);
    mandelbrot_sitodpg8j_U10->din0(cy);
    mandelbrot_sitodpg8j_U10->ce(ap_var_for_const0);
    mandelbrot_sitodpg8j_U10->dout(grp_fu_182_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state73);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state73 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state73 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_fu_122_opcode);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_reg_323 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage19 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_grp_fu_122_p0);
    sensitive << ( grp_fu_133_p2 );
    sensitive << ( reg_186 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage19 );
    sensitive << ( grp_fu_122_p2 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_grp_fu_122_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage19 );
    sensitive << ( grp_fu_138_p2 );
    sensitive << ( reg_192 );
    sensitive << ( dcx_reg_313 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_grp_fu_127_p0);
    sensitive << ( grp_fu_133_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( reg_192 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_127_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( dcy_reg_318 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_133_p0);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( grp_fu_122_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( tmp_1_reg_303 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( grp_fu_147_p2 );
    sensitive << ( t_phi_fu_102_p4 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_133_p1);
    sensitive << ( y_reg_110 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( grp_fu_122_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_phi_fu_102_p4 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_138_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( tmp_4_reg_308 );
    sensitive << ( grp_fu_127_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( y_phi_fu_114_p4 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_138_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( grp_fu_127_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( y_phi_fu_114_p4 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_icmp_fu_216_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_7_fu_206_p4 );

    SC_METHOD(thread_notlhs_fu_246_p2);
    sensitive << ( icmp_reg_323 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_17_fu_232_p4 );

    SC_METHOD(thread_notrhs_fu_252_p2);
    sensitive << ( icmp_reg_323 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_18_fu_242_p1 );

    SC_METHOD(thread_t_phi_fu_102_p4);
    sensitive << ( t_reg_98 );
    sensitive << ( icmp_reg_323 );
    sensitive << ( reg_198 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp_14_to_int_fu_228_p1);
    sensitive << ( grp_fu_122_p2 );

    SC_METHOD(thread_tmp_16_fu_270_p3);
    sensitive << ( tmp_6_op_reg_332 );
    sensitive << ( tmp_21_fu_264_p2 );

    SC_METHOD(thread_tmp_17_fu_232_p4);
    sensitive << ( tmp_14_to_int_fu_228_p1 );

    SC_METHOD(thread_tmp_18_fu_242_p1);
    sensitive << ( tmp_14_to_int_fu_228_p1 );

    SC_METHOD(thread_tmp_19_fu_258_p2);
    sensitive << ( notrhs_fu_252_p2 );
    sensitive << ( notlhs_fu_246_p2 );

    SC_METHOD(thread_tmp_21_fu_264_p2);
    sensitive << ( tmp_19_fu_258_p2 );
    sensitive << ( tmp_20_fu_172_p2 );

    SC_METHOD(thread_tmp_6_op_fu_222_p2);
    sensitive << ( tmp_6_reg_86 );

    SC_METHOD(thread_tmp_6_phi_fu_90_p4);
    sensitive << ( tmp_6_reg_86 );
    sensitive << ( icmp_reg_323 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_16_fu_270_p3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp_7_fu_206_p4);
    sensitive << ( tmp_6_phi_fu_90_p4 );

    SC_METHOD(thread_y_phi_fu_114_p4);
    sensitive << ( y_reg_110 );
    sensitive << ( icmp_reg_323 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( y_1_reg_337 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_fu_216_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mandelbrot_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, cx, "cx");
    sc_trace(mVcdFile, cy, "cy");
    sc_trace(mVcdFile, tmp_6_reg_86, "tmp_6_reg_86");
    sc_trace(mVcdFile, t_reg_98, "t_reg_98");
    sc_trace(mVcdFile, y_reg_110, "y_reg_110");
    sc_trace(mVcdFile, grp_fu_133_p2, "grp_fu_133_p2");
    sc_trace(mVcdFile, reg_186, "reg_186");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_reg_323, "icmp_reg_323");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage10, "ap_CS_fsm_pp0_stage10");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage19, "ap_CS_fsm_pp0_stage19");
    sc_trace(mVcdFile, grp_fu_138_p2, "grp_fu_138_p2");
    sc_trace(mVcdFile, reg_192, "reg_192");
    sc_trace(mVcdFile, grp_fu_122_p2, "grp_fu_122_p2");
    sc_trace(mVcdFile, reg_198, "reg_198");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage14, "ap_CS_fsm_pp0_stage14");
    sc_trace(mVcdFile, grp_fu_178_p1, "grp_fu_178_p1");
    sc_trace(mVcdFile, tmp_reg_293, "tmp_reg_293");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_182_p1, "grp_fu_182_p1");
    sc_trace(mVcdFile, tmp_3_reg_298, "tmp_3_reg_298");
    sc_trace(mVcdFile, grp_fu_162_p2, "grp_fu_162_p2");
    sc_trace(mVcdFile, tmp_1_reg_303, "tmp_1_reg_303");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, grp_fu_167_p2, "grp_fu_167_p2");
    sc_trace(mVcdFile, tmp_4_reg_308, "tmp_4_reg_308");
    sc_trace(mVcdFile, dcx_reg_313, "dcx_reg_313");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, grp_fu_127_p2, "grp_fu_127_p2");
    sc_trace(mVcdFile, dcy_reg_318, "dcy_reg_318");
    sc_trace(mVcdFile, icmp_fu_216_p2, "icmp_fu_216_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, grp_fu_147_p2, "grp_fu_147_p2");
    sc_trace(mVcdFile, tmp_6_op_fu_222_p2, "tmp_6_op_fu_222_p2");
    sc_trace(mVcdFile, tmp_6_op_reg_332, "tmp_6_op_reg_332");
    sc_trace(mVcdFile, y_1_reg_337, "y_1_reg_337");
    sc_trace(mVcdFile, tmp_16_fu_270_p3, "tmp_16_fu_270_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage22, "ap_CS_fsm_pp0_stage22");
    sc_trace(mVcdFile, tmp_6_phi_fu_90_p4, "tmp_6_phi_fu_90_p4");
    sc_trace(mVcdFile, t_phi_fu_102_p4, "t_phi_fu_102_p4");
    sc_trace(mVcdFile, y_phi_fu_114_p4, "y_phi_fu_114_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state73, "ap_CS_fsm_state73");
    sc_trace(mVcdFile, grp_fu_122_p0, "grp_fu_122_p0");
    sc_trace(mVcdFile, grp_fu_122_p1, "grp_fu_122_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, grp_fu_127_p0, "grp_fu_127_p0");
    sc_trace(mVcdFile, grp_fu_127_p1, "grp_fu_127_p1");
    sc_trace(mVcdFile, grp_fu_133_p0, "grp_fu_133_p0");
    sc_trace(mVcdFile, grp_fu_133_p1, "grp_fu_133_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, grp_fu_138_p0, "grp_fu_138_p0");
    sc_trace(mVcdFile, grp_fu_138_p1, "grp_fu_138_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_7_fu_206_p4, "tmp_7_fu_206_p4");
    sc_trace(mVcdFile, tmp_14_to_int_fu_228_p1, "tmp_14_to_int_fu_228_p1");
    sc_trace(mVcdFile, tmp_17_fu_232_p4, "tmp_17_fu_232_p4");
    sc_trace(mVcdFile, tmp_18_fu_242_p1, "tmp_18_fu_242_p1");
    sc_trace(mVcdFile, notrhs_fu_252_p2, "notrhs_fu_252_p2");
    sc_trace(mVcdFile, notlhs_fu_246_p2, "notlhs_fu_246_p2");
    sc_trace(mVcdFile, tmp_19_fu_258_p2, "tmp_19_fu_258_p2");
    sc_trace(mVcdFile, tmp_20_fu_172_p2, "tmp_20_fu_172_p2");
    sc_trace(mVcdFile, tmp_21_fu_264_p2, "tmp_21_fu_264_p2");
    sc_trace(mVcdFile, grp_fu_122_opcode, "grp_fu_122_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_return, "ap_return");
#endif

    }
    mHdltvinHandle.open("mandelbrot.hdltvin.dat");
    mHdltvoutHandle.open("mandelbrot.hdltvout.dat");
}

mandelbrot::~mandelbrot() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mandelbrot_AXILiteS_s_axi_U;
    delete mandelbrot_dadddsbkb_U1;
    delete mandelbrot_dadd_6cud_U2;
    delete mandelbrot_dmul_6dEe_U3;
    delete mandelbrot_dmul_6dEe_U4;
    delete mandelbrot_dmul_6dEe_U5;
    delete mandelbrot_ddiv_6eOg_U6;
    delete mandelbrot_ddiv_6eOg_U7;
    delete mandelbrot_dcmp_6fYi_U8;
    delete mandelbrot_sitodpg8j_U9;
    delete mandelbrot_sitodpg8j_U10;
}

void mandelbrot::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mandelbrot::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_4000000000000000;
}

void mandelbrot::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_4084000000000000;
}

void mandelbrot::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv64_407E000000000000;
}

void mandelbrot::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv64_4010000000000000;
}

void mandelbrot::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv5_2;
}

void mandelbrot::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_216_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state48.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((!esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage22.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state48.read())) || 
                    (esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage22.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((!esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        t_reg_98 = reg_198.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state48.read()))) {
        t_reg_98 = ap_const_lv64_0;
    }
    if ((!esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        tmp_6_reg_86 = tmp_16_fu_270_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state48.read()))) {
        tmp_6_reg_86 = ap_const_lv32_0;
    }
    if ((!esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_reg_110 = y_1_reg_337.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state48.read()))) {
        y_reg_110 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state48.read()))) {
        dcx_reg_313 = grp_fu_122_p2.read();
        dcy_reg_318 = grp_fu_127_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        icmp_reg_323 = icmp_fu_216_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state43.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage19.read())))) {
        reg_186 = grp_fu_133_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state43.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage19.read())))) {
        reg_192 = grp_fu_138_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read())))) {
        reg_198 = grp_fu_122_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state37.read()))) {
        tmp_1_reg_303 = grp_fu_162_p2.read();
        tmp_4_reg_308 = grp_fu_167_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        tmp_3_reg_298 = grp_fu_182_p1.read();
        tmp_reg_293 = grp_fu_178_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0))) {
        tmp_6_op_reg_332 = tmp_6_op_fu_222_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        y_1_reg_337 = grp_fu_127_p2.read();
    }
}

void mandelbrot::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(48, 48);
}

void mandelbrot::thread_ap_CS_fsm_pp0_stage10() {
    ap_CS_fsm_pp0_stage10 = ap_CS_fsm.read().range(58, 58);
}

void mandelbrot::thread_ap_CS_fsm_pp0_stage14() {
    ap_CS_fsm_pp0_stage14 = ap_CS_fsm.read().range(62, 62);
}

void mandelbrot::thread_ap_CS_fsm_pp0_stage19() {
    ap_CS_fsm_pp0_stage19 = ap_CS_fsm.read().range(67, 67);
}

void mandelbrot::thread_ap_CS_fsm_pp0_stage22() {
    ap_CS_fsm_pp0_stage22 = ap_CS_fsm.read().range(70, 70);
}

void mandelbrot::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read().range(53, 53);
}

void mandelbrot::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read().range(54, 54);
}

void mandelbrot::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void mandelbrot::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read().range(36, 36);
}

void mandelbrot::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read().range(37, 37);
}

void mandelbrot::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read().range(42, 42);
}

void mandelbrot::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read().range(43, 43);
}

void mandelbrot::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read().range(47, 47);
}

void mandelbrot::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void mandelbrot::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void mandelbrot::thread_ap_CS_fsm_state73() {
    ap_CS_fsm_state73 = ap_CS_fsm.read().range(71, 71);
}

void mandelbrot::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state73.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mandelbrot::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mandelbrot::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state73.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mandelbrot::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mandelbrot::thread_grp_fu_122_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_122_opcode = ap_const_lv2_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 !esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage19.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state44.read())))) {
        grp_fu_122_opcode = ap_const_lv2_0;
    } else {
        grp_fu_122_opcode = "XX";
    }
}

void mandelbrot::thread_grp_fu_122_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage19.read()))) {
        grp_fu_122_p0 = grp_fu_133_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        grp_fu_122_p0 = grp_fu_122_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state44.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        grp_fu_122_p0 = reg_186.read();
    } else {
        grp_fu_122_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mandelbrot::thread_grp_fu_122_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage19.read()))) {
        grp_fu_122_p1 = grp_fu_138_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        grp_fu_122_p1 = dcx_reg_313.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_122_p1 = reg_192.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state44.read()))) {
        grp_fu_122_p1 = ap_const_lv64_C000000000000000;
    } else {
        grp_fu_122_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mandelbrot::thread_grp_fu_127_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        grp_fu_127_p0 = grp_fu_133_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state44.read()))) {
        grp_fu_127_p0 = reg_192.read();
    } else {
        grp_fu_127_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mandelbrot::thread_grp_fu_127_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        grp_fu_127_p1 = dcy_reg_318.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state44.read()))) {
        grp_fu_127_p1 = ap_const_lv64_3FF0000000000000;
    } else {
        grp_fu_127_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mandelbrot::thread_grp_fu_133_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        grp_fu_133_p0 = grp_fu_122_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_133_p0 = grp_fu_147_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_133_p0 = t_phi_fu_102_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state38.read()))) {
        grp_fu_133_p0 = tmp_1_reg_303.read();
    } else {
        grp_fu_133_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mandelbrot::thread_grp_fu_133_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        grp_fu_133_p1 = grp_fu_122_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_133_p1 = y_reg_110.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_133_p1 = t_phi_fu_102_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state38.read()))) {
        grp_fu_133_p1 = ap_const_lv64_4008000000000000;
    } else {
        grp_fu_133_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mandelbrot::thread_grp_fu_138_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        grp_fu_138_p0 = grp_fu_127_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_138_p0 = y_phi_fu_114_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state38.read()))) {
        grp_fu_138_p0 = tmp_4_reg_308.read();
    } else {
        grp_fu_138_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mandelbrot::thread_grp_fu_138_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        grp_fu_138_p1 = grp_fu_127_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_138_p1 = y_phi_fu_114_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state38.read()))) {
        grp_fu_138_p1 = ap_const_lv64_C000000000000000;
    } else {
        grp_fu_138_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mandelbrot::thread_icmp_fu_216_p2() {
    icmp_fu_216_p2 = (!tmp_7_fu_206_p4.read().is_01() || !ap_const_lv24_1.is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_7_fu_206_p4.read()) < sc_bigint<24>(ap_const_lv24_1));
}

void mandelbrot::thread_notlhs_fu_246_p2() {
    notlhs_fu_246_p2 = (!tmp_17_fu_232_p4.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_17_fu_232_p4.read() != ap_const_lv11_7FF);
}

void mandelbrot::thread_notrhs_fu_252_p2() {
    notrhs_fu_252_p2 = (!tmp_18_fu_242_p1.read().is_01() || !ap_const_lv52_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_18_fu_242_p1.read() == ap_const_lv52_0);
}

void mandelbrot::thread_t_phi_fu_102_p4() {
    if ((!esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        t_phi_fu_102_p4 = reg_198.read();
    } else {
        t_phi_fu_102_p4 = t_reg_98.read();
    }
}

void mandelbrot::thread_tmp_14_to_int_fu_228_p1() {
    tmp_14_to_int_fu_228_p1 = grp_fu_122_p2.read();
}

void mandelbrot::thread_tmp_16_fu_270_p3() {
    tmp_16_fu_270_p3 = (!tmp_21_fu_264_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_21_fu_264_p2.read()[0].to_bool())? ap_const_lv32_101: tmp_6_op_reg_332.read());
}

void mandelbrot::thread_tmp_17_fu_232_p4() {
    tmp_17_fu_232_p4 = tmp_14_to_int_fu_228_p1.read().range(62, 52);
}

void mandelbrot::thread_tmp_18_fu_242_p1() {
    tmp_18_fu_242_p1 = tmp_14_to_int_fu_228_p1.read().range(52-1, 0);
}

void mandelbrot::thread_tmp_19_fu_258_p2() {
    tmp_19_fu_258_p2 = (notrhs_fu_252_p2.read() | notlhs_fu_246_p2.read());
}

void mandelbrot::thread_tmp_21_fu_264_p2() {
    tmp_21_fu_264_p2 = (tmp_19_fu_258_p2.read() & tmp_20_fu_172_p2.read());
}

void mandelbrot::thread_tmp_6_op_fu_222_p2() {
    tmp_6_op_fu_222_p2 = (!ap_const_lv32_1.is_01() || !tmp_6_reg_86.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(tmp_6_reg_86.read()));
}

void mandelbrot::thread_tmp_6_phi_fu_90_p4() {
    if ((!esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        tmp_6_phi_fu_90_p4 = tmp_16_fu_270_p3.read();
    } else {
        tmp_6_phi_fu_90_p4 = tmp_6_reg_86.read();
    }
}

void mandelbrot::thread_tmp_7_fu_206_p4() {
    tmp_7_fu_206_p4 = tmp_6_phi_fu_90_p4.read().range(31, 8);
}

void mandelbrot::thread_y_phi_fu_114_p4() {
    if ((!esl_seteq<1,1,1>(icmp_reg_323.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_phi_fu_114_p4 = y_1_reg_337.read();
    } else {
        y_phi_fu_114_p4 = y_reg_110.read();
    }
}

void mandelbrot::thread_ap_NS_fsm() {
    if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage0;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage0))
    {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_216_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state73;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage1))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage2;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage2))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage3;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage3))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage4;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage4))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage5;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage5))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage6;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage6))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage7;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage7))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage8;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage8))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage9;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage9))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage10;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage10))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage11;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage11))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage12;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage12))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage13;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage13))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage14;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage14))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage15;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage15))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage16;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage16))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage17;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage17))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage18;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage18))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage19;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage19))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage20;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage20))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage21;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage21))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage22;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage22))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage0;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<72>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void mandelbrot::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

