// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mandelbrot_HH_
#define _mandelbrot_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "mandelbrot_dadddsbkb.h"
#include "mandelbrot_dadd_6cud.h"
#include "mandelbrot_dmul_6dEe.h"
#include "mandelbrot_ddiv_6eOg.h"
#include "mandelbrot_dcmp_6fYi.h"
#include "mandelbrot_sitodpg8j.h"
#include "mandelbrot_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct mandelbrot : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const2;
    sc_signal< sc_lv<64> > ap_var_for_const3;
    sc_signal< sc_lv<64> > ap_var_for_const4;
    sc_signal< sc_lv<64> > ap_var_for_const5;
    sc_signal< sc_lv<5> > ap_var_for_const6;


    // Module declarations
    mandelbrot(sc_module_name name);
    SC_HAS_PROCESS(mandelbrot);

    ~mandelbrot();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    mandelbrot_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* mandelbrot_AXILiteS_s_axi_U;
    mandelbrot_dadddsbkb<1,5,64,64,64>* mandelbrot_dadddsbkb_U1;
    mandelbrot_dadd_6cud<1,5,64,64,64>* mandelbrot_dadd_6cud_U2;
    mandelbrot_dmul_6dEe<1,6,64,64,64>* mandelbrot_dmul_6dEe_U3;
    mandelbrot_dmul_6dEe<1,6,64,64,64>* mandelbrot_dmul_6dEe_U4;
    mandelbrot_dmul_6dEe<1,6,64,64,64>* mandelbrot_dmul_6dEe_U5;
    mandelbrot_ddiv_6eOg<1,31,64,64,64>* mandelbrot_ddiv_6eOg_U6;
    mandelbrot_ddiv_6eOg<1,31,64,64,64>* mandelbrot_ddiv_6eOg_U7;
    mandelbrot_dcmp_6fYi<1,1,64,64,1>* mandelbrot_dcmp_6fYi_U8;
    mandelbrot_sitodpg8j<1,6,32,64>* mandelbrot_sitodpg8j_U9;
    mandelbrot_sitodpg8j<1,6,32,64>* mandelbrot_sitodpg8j_U10;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<77> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > cx;
    sc_signal< sc_lv<32> > cy;
    sc_signal< sc_lv<32> > ap_return;
    sc_signal< sc_lv<64> > grp_fu_120_p2;
    sc_signal< sc_lv<64> > reg_164;
    sc_signal< sc_lv<1> > ap_CS_fsm_state43;
    sc_signal< sc_lv<1> > ap_CS_fsm_state54;
    sc_signal< sc_lv<1> > ap_CS_fsm_state60;
    sc_signal< sc_lv<1> > ap_CS_fsm_state71;
    sc_signal< sc_lv<64> > grp_fu_125_p2;
    sc_signal< sc_lv<64> > reg_169;
    sc_signal< sc_lv<64> > grp_fu_110_p2;
    sc_signal< sc_lv<64> > reg_175;
    sc_signal< sc_lv<1> > ap_CS_fsm_state59;
    sc_signal< sc_lv<1> > ap_CS_fsm_state64;
    sc_signal< sc_lv<64> > grp_fu_156_p1;
    sc_signal< sc_lv<64> > tmp_reg_252;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > grp_fu_160_p1;
    sc_signal< sc_lv<64> > tmp_3_reg_257;
    sc_signal< sc_lv<64> > grp_fu_141_p2;
    sc_signal< sc_lv<64> > tmp_1_reg_262;
    sc_signal< sc_lv<1> > ap_CS_fsm_state37;
    sc_signal< sc_lv<64> > grp_fu_146_p2;
    sc_signal< sc_lv<64> > tmp_4_reg_267;
    sc_signal< sc_lv<64> > dcx_reg_272;
    sc_signal< sc_lv<1> > ap_CS_fsm_state48;
    sc_signal< sc_lv<64> > grp_fu_115_p2;
    sc_signal< sc_lv<64> > dcy_reg_277;
    sc_signal< sc_lv<1> > tmp_6_fu_183_p3;
    sc_signal< sc_lv<1> > tmp_6_reg_282;
    sc_signal< sc_lv<1> > ap_CS_fsm_state49;
    sc_signal< sc_lv<9> > i_1_fu_191_p2;
    sc_signal< sc_lv<9> > i_1_reg_286;
    sc_signal< sc_lv<64> > grp_fu_134_p2;
    sc_signal< sc_lv<64> > tmp_s_reg_291;
    sc_signal< sc_lv<64> > y_1_reg_296;
    sc_signal< sc_lv<1> > ap_CS_fsm_state65;
    sc_signal< sc_lv<64> > tmp_13_reg_303;
    sc_signal< sc_lv<1> > ap_CS_fsm_state76;
    sc_signal< sc_lv<64> > t_reg_74;
    sc_signal< sc_lv<1> > ap_CS_fsm_state77;
    sc_signal< sc_lv<1> > tmp_18_fu_232_p2;
    sc_signal< sc_lv<64> > y_reg_86;
    sc_signal< sc_lv<9> > i_reg_98;
    sc_signal< sc_lv<64> > grp_fu_110_p0;
    sc_signal< sc_lv<64> > grp_fu_110_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state44;
    sc_signal< sc_lv<1> > ap_CS_fsm_state55;
    sc_signal< sc_lv<1> > ap_CS_fsm_state61;
    sc_signal< sc_lv<1> > ap_CS_fsm_state72;
    sc_signal< sc_lv<64> > grp_fu_120_p0;
    sc_signal< sc_lv<64> > grp_fu_120_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state38;
    sc_signal< sc_lv<1> > ap_CS_fsm_state66;
    sc_signal< sc_lv<64> > grp_fu_125_p0;
    sc_signal< sc_lv<64> > grp_fu_125_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_13_to_int_fu_197_p1;
    sc_signal< sc_lv<11> > tmp_14_fu_200_p4;
    sc_signal< sc_lv<52> > tmp_15_fu_210_p1;
    sc_signal< sc_lv<1> > notrhs_fu_220_p2;
    sc_signal< sc_lv<1> > notlhs_fu_214_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_226_p2;
    sc_signal< sc_lv<1> > tmp_17_fu_151_p2;
    sc_signal< sc_lv<2> > grp_fu_110_opcode;
    sc_signal< sc_lv<77> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<77> ap_ST_fsm_state1;
    static const sc_lv<77> ap_ST_fsm_state2;
    static const sc_lv<77> ap_ST_fsm_state3;
    static const sc_lv<77> ap_ST_fsm_state4;
    static const sc_lv<77> ap_ST_fsm_state5;
    static const sc_lv<77> ap_ST_fsm_state6;
    static const sc_lv<77> ap_ST_fsm_state7;
    static const sc_lv<77> ap_ST_fsm_state8;
    static const sc_lv<77> ap_ST_fsm_state9;
    static const sc_lv<77> ap_ST_fsm_state10;
    static const sc_lv<77> ap_ST_fsm_state11;
    static const sc_lv<77> ap_ST_fsm_state12;
    static const sc_lv<77> ap_ST_fsm_state13;
    static const sc_lv<77> ap_ST_fsm_state14;
    static const sc_lv<77> ap_ST_fsm_state15;
    static const sc_lv<77> ap_ST_fsm_state16;
    static const sc_lv<77> ap_ST_fsm_state17;
    static const sc_lv<77> ap_ST_fsm_state18;
    static const sc_lv<77> ap_ST_fsm_state19;
    static const sc_lv<77> ap_ST_fsm_state20;
    static const sc_lv<77> ap_ST_fsm_state21;
    static const sc_lv<77> ap_ST_fsm_state22;
    static const sc_lv<77> ap_ST_fsm_state23;
    static const sc_lv<77> ap_ST_fsm_state24;
    static const sc_lv<77> ap_ST_fsm_state25;
    static const sc_lv<77> ap_ST_fsm_state26;
    static const sc_lv<77> ap_ST_fsm_state27;
    static const sc_lv<77> ap_ST_fsm_state28;
    static const sc_lv<77> ap_ST_fsm_state29;
    static const sc_lv<77> ap_ST_fsm_state30;
    static const sc_lv<77> ap_ST_fsm_state31;
    static const sc_lv<77> ap_ST_fsm_state32;
    static const sc_lv<77> ap_ST_fsm_state33;
    static const sc_lv<77> ap_ST_fsm_state34;
    static const sc_lv<77> ap_ST_fsm_state35;
    static const sc_lv<77> ap_ST_fsm_state36;
    static const sc_lv<77> ap_ST_fsm_state37;
    static const sc_lv<77> ap_ST_fsm_state38;
    static const sc_lv<77> ap_ST_fsm_state39;
    static const sc_lv<77> ap_ST_fsm_state40;
    static const sc_lv<77> ap_ST_fsm_state41;
    static const sc_lv<77> ap_ST_fsm_state42;
    static const sc_lv<77> ap_ST_fsm_state43;
    static const sc_lv<77> ap_ST_fsm_state44;
    static const sc_lv<77> ap_ST_fsm_state45;
    static const sc_lv<77> ap_ST_fsm_state46;
    static const sc_lv<77> ap_ST_fsm_state47;
    static const sc_lv<77> ap_ST_fsm_state48;
    static const sc_lv<77> ap_ST_fsm_state49;
    static const sc_lv<77> ap_ST_fsm_state50;
    static const sc_lv<77> ap_ST_fsm_state51;
    static const sc_lv<77> ap_ST_fsm_state52;
    static const sc_lv<77> ap_ST_fsm_state53;
    static const sc_lv<77> ap_ST_fsm_state54;
    static const sc_lv<77> ap_ST_fsm_state55;
    static const sc_lv<77> ap_ST_fsm_state56;
    static const sc_lv<77> ap_ST_fsm_state57;
    static const sc_lv<77> ap_ST_fsm_state58;
    static const sc_lv<77> ap_ST_fsm_state59;
    static const sc_lv<77> ap_ST_fsm_state60;
    static const sc_lv<77> ap_ST_fsm_state61;
    static const sc_lv<77> ap_ST_fsm_state62;
    static const sc_lv<77> ap_ST_fsm_state63;
    static const sc_lv<77> ap_ST_fsm_state64;
    static const sc_lv<77> ap_ST_fsm_state65;
    static const sc_lv<77> ap_ST_fsm_state66;
    static const sc_lv<77> ap_ST_fsm_state67;
    static const sc_lv<77> ap_ST_fsm_state68;
    static const sc_lv<77> ap_ST_fsm_state69;
    static const sc_lv<77> ap_ST_fsm_state70;
    static const sc_lv<77> ap_ST_fsm_state71;
    static const sc_lv<77> ap_ST_fsm_state72;
    static const sc_lv<77> ap_ST_fsm_state73;
    static const sc_lv<77> ap_ST_fsm_state74;
    static const sc_lv<77> ap_ST_fsm_state75;
    static const sc_lv<77> ap_ST_fsm_state76;
    static const sc_lv<77> ap_ST_fsm_state77;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_46;
    static const sc_lv<32> ap_const_lv32_3A;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_4B;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_4C;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<64> ap_const_lv64_C000000000000000;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<64> ap_const_lv64_4008000000000000;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<64> ap_const_lv64_4000000000000000;
    static const sc_lv<64> ap_const_lv64_4084000000000000;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<64> ap_const_lv64_407E000000000000;
    static const sc_lv<64> ap_const_lv64_4010000000000000;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state55();
    void thread_ap_CS_fsm_state59();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state60();
    void thread_ap_CS_fsm_state61();
    void thread_ap_CS_fsm_state64();
    void thread_ap_CS_fsm_state65();
    void thread_ap_CS_fsm_state66();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state71();
    void thread_ap_CS_fsm_state72();
    void thread_ap_CS_fsm_state76();
    void thread_ap_CS_fsm_state77();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_110_opcode();
    void thread_grp_fu_110_p0();
    void thread_grp_fu_110_p1();
    void thread_grp_fu_120_p0();
    void thread_grp_fu_120_p1();
    void thread_grp_fu_125_p0();
    void thread_grp_fu_125_p1();
    void thread_i_1_fu_191_p2();
    void thread_notlhs_fu_214_p2();
    void thread_notrhs_fu_220_p2();
    void thread_tmp_13_to_int_fu_197_p1();
    void thread_tmp_14_fu_200_p4();
    void thread_tmp_15_fu_210_p1();
    void thread_tmp_16_fu_226_p2();
    void thread_tmp_18_fu_232_p2();
    void thread_tmp_6_fu_183_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
