// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mandelbrot_HH_
#define _mandelbrot_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "mandelbrot_dadddsbkb.h"
#include "mandelbrot_dmul_6cud.h"
#include "mandelbrot_dcmp_6dEe.h"

namespace ap_rtl {

struct mandelbrot : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > cx;
    sc_in< sc_logic > cx_ap_vld;
    sc_out< sc_logic > cx_ap_ack;
    sc_in< sc_lv<64> > cy;
    sc_in< sc_logic > cy_ap_vld;
    sc_out< sc_logic > cy_ap_ack;
    sc_out< sc_lv<8> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const2;
    sc_signal< sc_lv<5> > ap_var_for_const3;


    // Module declarations
    mandelbrot(sc_module_name name);
    SC_HAS_PROCESS(mandelbrot);

    ~mandelbrot();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    mandelbrot_dadddsbkb<1,5,64,64,64>* mandelbrot_dadddsbkb_U1;
    mandelbrot_dmul_6cud<1,6,64,64,64>* mandelbrot_dmul_6cud_U2;
    mandelbrot_dmul_6cud<1,6,64,64,64>* mandelbrot_dmul_6cud_U3;
    mandelbrot_dmul_6cud<1,6,64,64,64>* mandelbrot_dmul_6cud_U4;
    mandelbrot_dcmp_6dEe<1,1,64,64,1>* mandelbrot_dcmp_6dEe_U5;
    sc_signal< sc_lv<31> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_logic > cx_blk_n;
    sc_signal< sc_logic > cy_blk_n;
    sc_signal< sc_lv<64> > grp_fu_114_p2;
    sc_signal< sc_lv<64> > reg_138;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > ap_CS_fsm_state24;
    sc_signal< sc_lv<64> > grp_fu_120_p2;
    sc_signal< sc_lv<64> > reg_143;
    sc_signal< sc_lv<64> > grp_fu_110_p2;
    sc_signal< sc_lv<64> > reg_148;
    sc_signal< sc_lv<1> > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > cy_read_reg_215;
    sc_signal< bool > ap_condition_110;
    sc_signal< sc_lv<64> > cx_read_reg_221;
    sc_signal< sc_lv<1> > tmp_fu_156_p3;
    sc_signal< sc_lv<1> > tmp_reg_227;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > i_1_fu_164_p2;
    sc_signal< sc_lv<9> > i_1_reg_231;
    sc_signal< sc_lv<64> > grp_fu_126_p2;
    sc_signal< sc_lv<64> > tmp_5_reg_236;
    sc_signal< sc_lv<64> > y_1_reg_241;
    sc_signal< sc_lv<1> > ap_CS_fsm_state18;
    sc_signal< sc_lv<64> > tmp_s_reg_248;
    sc_signal< sc_lv<1> > ap_CS_fsm_state29;
    sc_signal< sc_lv<8> > tmp_13_fu_211_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state30;
    sc_signal< sc_lv<1> > tmp_12_fu_205_p2;
    sc_signal< sc_lv<9> > i_reg_78;
    sc_signal< sc_lv<64> > t_reg_90;
    sc_signal< sc_lv<64> > y_reg_100;
    sc_signal< sc_lv<64> > grp_fu_110_p0;
    sc_signal< sc_lv<64> > grp_fu_110_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > ap_CS_fsm_state14;
    sc_signal< sc_lv<1> > ap_CS_fsm_state25;
    sc_signal< sc_lv<64> > grp_fu_114_p0;
    sc_signal< sc_lv<64> > grp_fu_114_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state19;
    sc_signal< sc_lv<64> > grp_fu_120_p0;
    sc_signal< sc_lv<64> > grp_fu_120_p1;
    sc_signal< sc_lv<64> > tmp_to_int_fu_170_p1;
    sc_signal< sc_lv<11> > tmp_4_fu_173_p4;
    sc_signal< sc_lv<52> > tmp_7_fu_183_p1;
    sc_signal< sc_lv<1> > notrhs_fu_193_p2;
    sc_signal< sc_lv<1> > notlhs_fu_187_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_199_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_133_p2;
    sc_signal< sc_lv<2> > grp_fu_110_opcode;
    sc_signal< sc_lv<1> > ap_CS_fsm_state31;
    sc_signal< sc_lv<31> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<31> ap_ST_fsm_state1;
    static const sc_lv<31> ap_ST_fsm_state2;
    static const sc_lv<31> ap_ST_fsm_state3;
    static const sc_lv<31> ap_ST_fsm_state4;
    static const sc_lv<31> ap_ST_fsm_state5;
    static const sc_lv<31> ap_ST_fsm_state6;
    static const sc_lv<31> ap_ST_fsm_state7;
    static const sc_lv<31> ap_ST_fsm_state8;
    static const sc_lv<31> ap_ST_fsm_state9;
    static const sc_lv<31> ap_ST_fsm_state10;
    static const sc_lv<31> ap_ST_fsm_state11;
    static const sc_lv<31> ap_ST_fsm_state12;
    static const sc_lv<31> ap_ST_fsm_state13;
    static const sc_lv<31> ap_ST_fsm_state14;
    static const sc_lv<31> ap_ST_fsm_state15;
    static const sc_lv<31> ap_ST_fsm_state16;
    static const sc_lv<31> ap_ST_fsm_state17;
    static const sc_lv<31> ap_ST_fsm_state18;
    static const sc_lv<31> ap_ST_fsm_state19;
    static const sc_lv<31> ap_ST_fsm_state20;
    static const sc_lv<31> ap_ST_fsm_state21;
    static const sc_lv<31> ap_ST_fsm_state22;
    static const sc_lv<31> ap_ST_fsm_state23;
    static const sc_lv<31> ap_ST_fsm_state24;
    static const sc_lv<31> ap_ST_fsm_state25;
    static const sc_lv<31> ap_ST_fsm_state26;
    static const sc_lv<31> ap_ST_fsm_state27;
    static const sc_lv<31> ap_ST_fsm_state28;
    static const sc_lv<31> ap_ST_fsm_state29;
    static const sc_lv<31> ap_ST_fsm_state30;
    static const sc_lv<31> ap_ST_fsm_state31;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<64> ap_const_lv64_4000000000000000;
    static const sc_lv<64> ap_const_lv64_4010000000000000;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_1E;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_condition_110();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_cx_ap_ack();
    void thread_cx_blk_n();
    void thread_cy_ap_ack();
    void thread_cy_blk_n();
    void thread_grp_fu_110_opcode();
    void thread_grp_fu_110_p0();
    void thread_grp_fu_110_p1();
    void thread_grp_fu_114_p0();
    void thread_grp_fu_114_p1();
    void thread_grp_fu_120_p0();
    void thread_grp_fu_120_p1();
    void thread_i_1_fu_164_p2();
    void thread_notlhs_fu_187_p2();
    void thread_notrhs_fu_193_p2();
    void thread_tmp_10_fu_199_p2();
    void thread_tmp_12_fu_205_p2();
    void thread_tmp_13_fu_211_p1();
    void thread_tmp_4_fu_173_p4();
    void thread_tmp_7_fu_183_p1();
    void thread_tmp_fu_156_p3();
    void thread_tmp_to_int_fu_170_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
