// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module mandelbrot_top (
s_axi_slv0_AWADDR,
s_axi_slv0_AWVALID,
s_axi_slv0_AWREADY,
s_axi_slv0_WDATA,
s_axi_slv0_WSTRB,
s_axi_slv0_WVALID,
s_axi_slv0_WREADY,
s_axi_slv0_BRESP,
s_axi_slv0_BVALID,
s_axi_slv0_BREADY,
s_axi_slv0_ARADDR,
s_axi_slv0_ARVALID,
s_axi_slv0_ARREADY,
s_axi_slv0_RDATA,
s_axi_slv0_RRESP,
s_axi_slv0_RVALID,
s_axi_slv0_RREADY,
s_axi_slv1_AWADDR,
s_axi_slv1_AWVALID,
s_axi_slv1_AWREADY,
s_axi_slv1_WDATA,
s_axi_slv1_WSTRB,
s_axi_slv1_WVALID,
s_axi_slv1_WREADY,
s_axi_slv1_BRESP,
s_axi_slv1_BVALID,
s_axi_slv1_BREADY,
s_axi_slv1_ARADDR,
s_axi_slv1_ARVALID,
s_axi_slv1_ARREADY,
s_axi_slv1_RDATA,
s_axi_slv1_RRESP,
s_axi_slv1_RVALID,
s_axi_slv1_RREADY,
interrupt,
aresetn,
aclk
);

parameter C_S_AXI_SLV0_ADDR_WIDTH = 6;
parameter C_S_AXI_SLV0_DATA_WIDTH = 32;
parameter C_S_AXI_SLV1_ADDR_WIDTH = 5;
parameter C_S_AXI_SLV1_DATA_WIDTH = 32;
parameter RESET_ACTIVE_LOW = 1;

input [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_AWADDR ;
input s_axi_slv0_AWVALID ;
output s_axi_slv0_AWREADY ;
input [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_WDATA ;
input [C_S_AXI_SLV0_DATA_WIDTH/8 - 1:0] s_axi_slv0_WSTRB ;
input s_axi_slv0_WVALID ;
output s_axi_slv0_WREADY ;
output [2 - 1:0] s_axi_slv0_BRESP ;
output s_axi_slv0_BVALID ;
input s_axi_slv0_BREADY ;
input [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_ARADDR ;
input s_axi_slv0_ARVALID ;
output s_axi_slv0_ARREADY ;
output [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_RDATA ;
output [2 - 1:0] s_axi_slv0_RRESP ;
output s_axi_slv0_RVALID ;
input s_axi_slv0_RREADY ;


input [C_S_AXI_SLV1_ADDR_WIDTH - 1:0] s_axi_slv1_AWADDR ;
input s_axi_slv1_AWVALID ;
output s_axi_slv1_AWREADY ;
input [C_S_AXI_SLV1_DATA_WIDTH - 1:0] s_axi_slv1_WDATA ;
input [C_S_AXI_SLV1_DATA_WIDTH/8 - 1:0] s_axi_slv1_WSTRB ;
input s_axi_slv1_WVALID ;
output s_axi_slv1_WREADY ;
output [2 - 1:0] s_axi_slv1_BRESP ;
output s_axi_slv1_BVALID ;
input s_axi_slv1_BREADY ;
input [C_S_AXI_SLV1_ADDR_WIDTH - 1:0] s_axi_slv1_ARADDR ;
input s_axi_slv1_ARVALID ;
output s_axi_slv1_ARREADY ;
output [C_S_AXI_SLV1_DATA_WIDTH - 1:0] s_axi_slv1_RDATA ;
output [2 - 1:0] s_axi_slv1_RRESP ;
output s_axi_slv1_RVALID ;
input s_axi_slv1_RREADY ;
output interrupt ;

input aresetn ;

input aclk ;


wire [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_AWADDR;
wire s_axi_slv0_AWVALID;
wire s_axi_slv0_AWREADY;
wire [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_WDATA;
wire [C_S_AXI_SLV0_DATA_WIDTH/8 - 1:0] s_axi_slv0_WSTRB;
wire s_axi_slv0_WVALID;
wire s_axi_slv0_WREADY;
wire [2 - 1:0] s_axi_slv0_BRESP;
wire s_axi_slv0_BVALID;
wire s_axi_slv0_BREADY;
wire [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_ARADDR;
wire s_axi_slv0_ARVALID;
wire s_axi_slv0_ARREADY;
wire [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_RDATA;
wire [2 - 1:0] s_axi_slv0_RRESP;
wire s_axi_slv0_RVALID;
wire s_axi_slv0_RREADY;


wire [C_S_AXI_SLV1_ADDR_WIDTH - 1:0] s_axi_slv1_AWADDR;
wire s_axi_slv1_AWVALID;
wire s_axi_slv1_AWREADY;
wire [C_S_AXI_SLV1_DATA_WIDTH - 1:0] s_axi_slv1_WDATA;
wire [C_S_AXI_SLV1_DATA_WIDTH/8 - 1:0] s_axi_slv1_WSTRB;
wire s_axi_slv1_WVALID;
wire s_axi_slv1_WREADY;
wire [2 - 1:0] s_axi_slv1_BRESP;
wire s_axi_slv1_BVALID;
wire s_axi_slv1_BREADY;
wire [C_S_AXI_SLV1_ADDR_WIDTH - 1:0] s_axi_slv1_ARADDR;
wire s_axi_slv1_ARVALID;
wire s_axi_slv1_ARREADY;
wire [C_S_AXI_SLV1_DATA_WIDTH - 1:0] s_axi_slv1_RDATA;
wire [2 - 1:0] s_axi_slv1_RRESP;
wire s_axi_slv1_RVALID;
wire s_axi_slv1_RREADY;
wire interrupt;

wire aresetn;


wire [64 - 1:0] sig_mandelbrot_cx;
wire sig_mandelbrot_cx_ap_vld;
wire sig_mandelbrot_cx_ap_ack;
wire [64 - 1:0] sig_mandelbrot_cy;
wire sig_mandelbrot_cy_ap_vld;
wire sig_mandelbrot_cy_ap_ack;

wire sig_mandelbrot_ap_start;
wire sig_mandelbrot_ap_ready;
wire sig_mandelbrot_ap_done;
wire sig_mandelbrot_ap_idle;
wire [8 - 1:0] sig_mandelbrot_ap_return;

wire sig_mandelbrot_ap_rst;



mandelbrot mandelbrot_U(
    .cx(sig_mandelbrot_cx),
    .cx_ap_vld(sig_mandelbrot_cx_ap_vld),
    .cx_ap_ack(sig_mandelbrot_cx_ap_ack),
    .cy(sig_mandelbrot_cy),
    .cy_ap_vld(sig_mandelbrot_cy_ap_vld),
    .cy_ap_ack(sig_mandelbrot_cy_ap_ack),
    .ap_start(sig_mandelbrot_ap_start),
    .ap_ready(sig_mandelbrot_ap_ready),
    .ap_done(sig_mandelbrot_ap_done),
    .ap_idle(sig_mandelbrot_ap_idle),
    .ap_return(sig_mandelbrot_ap_return),
    .ap_rst(sig_mandelbrot_ap_rst),
    .ap_clk(aclk)
);

mandelbrot_slv0_if #(
    .C_ADDR_WIDTH(C_S_AXI_SLV0_ADDR_WIDTH),
    .C_DATA_WIDTH(C_S_AXI_SLV0_DATA_WIDTH))
mandelbrot_slv0_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .I_cx(sig_mandelbrot_cx),
    .I_cx_ap_vld(sig_mandelbrot_cx_ap_vld),
    .I_cx_ap_ack(sig_mandelbrot_cx_ap_ack),
    .I_cy(sig_mandelbrot_cy),
    .I_cy_ap_vld(sig_mandelbrot_cy_ap_vld),
    .I_cy_ap_ack(sig_mandelbrot_cy_ap_ack),
    .AWADDR(s_axi_slv0_AWADDR),
    .AWVALID(s_axi_slv0_AWVALID),
    .AWREADY(s_axi_slv0_AWREADY),
    .WDATA(s_axi_slv0_WDATA),
    .WSTRB(s_axi_slv0_WSTRB),
    .WVALID(s_axi_slv0_WVALID),
    .WREADY(s_axi_slv0_WREADY),
    .BRESP(s_axi_slv0_BRESP),
    .BVALID(s_axi_slv0_BVALID),
    .BREADY(s_axi_slv0_BREADY),
    .ARADDR(s_axi_slv0_ARADDR),
    .ARVALID(s_axi_slv0_ARVALID),
    .ARREADY(s_axi_slv0_ARREADY),
    .RDATA(s_axi_slv0_RDATA),
    .RRESP(s_axi_slv0_RRESP),
    .RVALID(s_axi_slv0_RVALID),
    .RREADY(s_axi_slv0_RREADY));

mandelbrot_slv1_if #(
    .C_ADDR_WIDTH(C_S_AXI_SLV1_ADDR_WIDTH),
    .C_DATA_WIDTH(C_S_AXI_SLV1_DATA_WIDTH))
mandelbrot_slv1_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .I_ap_start(sig_mandelbrot_ap_start),
    .O_ap_ready(sig_mandelbrot_ap_ready),
    .O_ap_done(sig_mandelbrot_ap_done),
    .O_ap_idle(sig_mandelbrot_ap_idle),
    .O_ap_return(sig_mandelbrot_ap_return),
    .AWADDR(s_axi_slv1_AWADDR),
    .AWVALID(s_axi_slv1_AWVALID),
    .AWREADY(s_axi_slv1_AWREADY),
    .WDATA(s_axi_slv1_WDATA),
    .WSTRB(s_axi_slv1_WSTRB),
    .WVALID(s_axi_slv1_WVALID),
    .WREADY(s_axi_slv1_WREADY),
    .BRESP(s_axi_slv1_BRESP),
    .BVALID(s_axi_slv1_BVALID),
    .BREADY(s_axi_slv1_BREADY),
    .ARADDR(s_axi_slv1_ARADDR),
    .ARVALID(s_axi_slv1_ARVALID),
    .ARREADY(s_axi_slv1_ARREADY),
    .RDATA(s_axi_slv1_RDATA),
    .RRESP(s_axi_slv1_RRESP),
    .RVALID(s_axi_slv1_RVALID),
    .RREADY(s_axi_slv1_RREADY),
    .interrupt(interrupt));

mandelbrot_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_mandelbrot_ap_rst),
    .din(aresetn));

endmodule
