// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sobel_filter_core (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n,
        src_data_stream_0_V_read,
        src_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n,
        src_data_stream_1_V_read,
        dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n,
        dst_data_stream_0_V_write,
        dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n,
        dst_data_stream_1_V_write,
        rows,
        cols,
        C_XR0C0_channel_dout,
        C_XR0C0_channel_empty_n,
        C_XR0C0_channel_read,
        C_XR0C1_channel_dout,
        C_XR0C1_channel_empty_n,
        C_XR0C1_channel_read,
        C_XR0C2_channel_dout,
        C_XR0C2_channel_empty_n,
        C_XR0C2_channel_read,
        C_XR1C0_channel_dout,
        C_XR1C0_channel_empty_n,
        C_XR1C0_channel_read,
        C_XR1C1_channel_dout,
        C_XR1C1_channel_empty_n,
        C_XR1C1_channel_read,
        C_XR1C2_channel_dout,
        C_XR1C2_channel_empty_n,
        C_XR1C2_channel_read,
        C_XR2C0_channel_dout,
        C_XR2C0_channel_empty_n,
        C_XR2C0_channel_read,
        C_XR2C1_channel_dout,
        C_XR2C1_channel_empty_n,
        C_XR2C1_channel_read,
        C_XR2C2_channel_dout,
        C_XR2C2_channel_empty_n,
        C_XR2C2_channel_read,
        C_YR0C0_channel_dout,
        C_YR0C0_channel_empty_n,
        C_YR0C0_channel_read,
        C_YR0C1_channel_dout,
        C_YR0C1_channel_empty_n,
        C_YR0C1_channel_read,
        C_YR0C2_channel_dout,
        C_YR0C2_channel_empty_n,
        C_YR0C2_channel_read,
        C_YR1C0_channel_dout,
        C_YR1C0_channel_empty_n,
        C_YR1C0_channel_read,
        C_YR1C1_channel_dout,
        C_YR1C1_channel_empty_n,
        C_YR1C1_channel_read,
        C_YR1C2_channel_dout,
        C_YR1C2_channel_empty_n,
        C_YR1C2_channel_read,
        C_YR2C0_channel_dout,
        C_YR2C0_channel_empty_n,
        C_YR2C0_channel_read,
        C_YR2C1_channel_dout,
        C_YR2C1_channel_empty_n,
        C_YR2C1_channel_read,
        c_high_thresh_channe_dout,
        c_high_thresh_channe_empty_n,
        c_high_thresh_channe_read,
        c_low_thresh_channel_1_dout,
        c_low_thresh_channel_1_empty_n,
        c_low_thresh_channel_1_read,
        c_invert_channel_dout,
        c_invert_channel_empty_n,
        c_invert_channel_read
);

parameter    ap_ST_fsm_state1 = 4'b1;
parameter    ap_ST_fsm_state2 = 4'b10;
parameter    ap_ST_fsm_pp0_stage0 = 4'b100;
parameter    ap_ST_fsm_state11 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv12_FFF = 12'b111111111111;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv16_FF = 16'b11111111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv8_0 = 8'b00000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] src_data_stream_0_V_dout;
input   src_data_stream_0_V_empty_n;
output   src_data_stream_0_V_read;
input  [7:0] src_data_stream_1_V_dout;
input   src_data_stream_1_V_empty_n;
output   src_data_stream_1_V_read;
output  [7:0] dst_data_stream_0_V_din;
input   dst_data_stream_0_V_full_n;
output   dst_data_stream_0_V_write;
output  [7:0] dst_data_stream_1_V_din;
input   dst_data_stream_1_V_full_n;
output   dst_data_stream_1_V_write;
input  [31:0] rows;
input  [31:0] cols;
input  [31:0] C_XR0C0_channel_dout;
input   C_XR0C0_channel_empty_n;
output   C_XR0C0_channel_read;
input  [31:0] C_XR0C1_channel_dout;
input   C_XR0C1_channel_empty_n;
output   C_XR0C1_channel_read;
input  [31:0] C_XR0C2_channel_dout;
input   C_XR0C2_channel_empty_n;
output   C_XR0C2_channel_read;
input  [31:0] C_XR1C0_channel_dout;
input   C_XR1C0_channel_empty_n;
output   C_XR1C0_channel_read;
input  [31:0] C_XR1C1_channel_dout;
input   C_XR1C1_channel_empty_n;
output   C_XR1C1_channel_read;
input  [31:0] C_XR1C2_channel_dout;
input   C_XR1C2_channel_empty_n;
output   C_XR1C2_channel_read;
input  [31:0] C_XR2C0_channel_dout;
input   C_XR2C0_channel_empty_n;
output   C_XR2C0_channel_read;
input  [31:0] C_XR2C1_channel_dout;
input   C_XR2C1_channel_empty_n;
output   C_XR2C1_channel_read;
input  [31:0] C_XR2C2_channel_dout;
input   C_XR2C2_channel_empty_n;
output   C_XR2C2_channel_read;
input  [31:0] C_YR0C0_channel_dout;
input   C_YR0C0_channel_empty_n;
output   C_YR0C0_channel_read;
input  [31:0] C_YR0C1_channel_dout;
input   C_YR0C1_channel_empty_n;
output   C_YR0C1_channel_read;
input  [31:0] C_YR0C2_channel_dout;
input   C_YR0C2_channel_empty_n;
output   C_YR0C2_channel_read;
input  [31:0] C_YR1C0_channel_dout;
input   C_YR1C0_channel_empty_n;
output   C_YR1C0_channel_read;
input  [31:0] C_YR1C1_channel_dout;
input   C_YR1C1_channel_empty_n;
output   C_YR1C1_channel_read;
input  [31:0] C_YR1C2_channel_dout;
input   C_YR1C2_channel_empty_n;
output   C_YR1C2_channel_read;
input  [31:0] C_YR2C0_channel_dout;
input   C_YR2C0_channel_empty_n;
output   C_YR2C0_channel_read;
input  [31:0] C_YR2C1_channel_dout;
input   C_YR2C1_channel_empty_n;
output   C_YR2C1_channel_read;
input  [31:0] c_high_thresh_channe_dout;
input   c_high_thresh_channe_empty_n;
output   c_high_thresh_channe_read;
input  [31:0] c_low_thresh_channel_1_dout;
input   c_low_thresh_channel_1_empty_n;
output   c_low_thresh_channel_1_read;
input  [31:0] c_invert_channel_dout;
input   c_invert_channel_empty_n;
output   c_invert_channel_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_stream_0_V_read;
reg src_data_stream_1_V_read;
reg dst_data_stream_0_V_write;
reg dst_data_stream_1_V_write;
reg C_XR0C0_channel_read;
reg C_XR0C1_channel_read;
reg C_XR0C2_channel_read;
reg C_XR1C0_channel_read;
reg C_XR1C1_channel_read;
reg C_XR1C2_channel_read;
reg C_XR2C0_channel_read;
reg C_XR2C1_channel_read;
reg C_XR2C2_channel_read;
reg C_YR0C0_channel_read;
reg C_YR0C1_channel_read;
reg C_YR0C2_channel_read;
reg C_YR1C0_channel_read;
reg C_YR1C1_channel_read;
reg C_YR1C2_channel_read;
reg C_YR2C0_channel_read;
reg C_YR2C1_channel_read;
reg c_high_thresh_channe_read;
reg c_low_thresh_channel_1_read;
reg c_invert_channel_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    src_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] exitcond_i_reg_1314;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314;
reg   [0:0] or_cond_i_i_i_reg_1346;
reg   [0:0] ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346;
reg    src_data_stream_1_V_blk_n;
reg    dst_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] or_cond3_i_i_i_reg_1355;
reg   [0:0] ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355;
reg    dst_data_stream_1_V_blk_n;
reg    C_XR0C0_channel_blk_n;
reg    C_XR0C1_channel_blk_n;
reg    C_XR0C2_channel_blk_n;
reg    C_XR1C0_channel_blk_n;
reg    C_XR1C1_channel_blk_n;
reg    C_XR1C2_channel_blk_n;
reg    C_XR2C0_channel_blk_n;
reg    C_XR2C1_channel_blk_n;
reg    C_XR2C2_channel_blk_n;
reg    C_YR0C0_channel_blk_n;
reg    C_YR0C1_channel_blk_n;
reg    C_YR0C2_channel_blk_n;
reg    C_YR1C0_channel_blk_n;
reg    C_YR1C1_channel_blk_n;
reg    C_YR1C2_channel_blk_n;
reg    C_YR2C0_channel_blk_n;
reg    C_YR2C1_channel_blk_n;
reg    c_high_thresh_channe_blk_n;
reg    c_low_thresh_channel_1_blk_n;
reg    c_invert_channel_blk_n;
reg   [11:0] col_assign_i_reg_391;
reg   [11:0] ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_condition_188;
reg    ap_condition_196;
reg   [31:0] c_high_thresh_channe_1_reg_1155;
reg    ap_condition_245;
reg   [31:0] c_low_thresh_channel_reg_1160;
wire   [11:0] rows_cast_i_i_cast_i_fu_411_p1;
wire  signed [12:0] tmp_31_i_i_cast_i_fu_421_p1;
wire   [11:0] cols_cast_i_i_cast_i_fu_425_p1;
wire  signed [12:0] tmp_32_i_i_cast_i_fu_435_p1;
wire   [11:0] tmp_3_i_fu_439_p2;
wire   [11:0] tmp_6_i_fu_445_p2;
wire  signed [15:0] tmp_36_0_i_i_i_i_fu_519_p1;
reg  signed [15:0] tmp_36_0_i_i_i_i_reg_1195;
wire  signed [15:0] tmp_38_0_i_i_i_i_fu_523_p1;
reg  signed [15:0] tmp_38_0_i_i_i_i_reg_1200;
wire  signed [15:0] tmp_36_0_1_i_i_i_i_fu_527_p1;
reg  signed [15:0] tmp_36_0_1_i_i_i_i_reg_1205;
wire  signed [15:0] tmp_38_0_1_i_i_i_i_fu_531_p1;
reg  signed [15:0] tmp_38_0_1_i_i_i_i_reg_1210;
wire  signed [15:0] tmp_36_0_2_i_i_i_i_fu_535_p1;
reg  signed [15:0] tmp_36_0_2_i_i_i_i_reg_1215;
wire  signed [15:0] tmp_38_0_2_i_i_i_i_fu_539_p1;
reg  signed [15:0] tmp_38_0_2_i_i_i_i_reg_1220;
wire  signed [15:0] tmp_36_1_i_i_i_i_fu_543_p1;
reg  signed [15:0] tmp_36_1_i_i_i_i_reg_1225;
wire  signed [15:0] tmp_38_1_i_i_i_i_fu_547_p1;
reg  signed [15:0] tmp_38_1_i_i_i_i_reg_1230;
wire  signed [15:0] tmp_36_1_1_i_i_i_i_fu_551_p1;
reg  signed [15:0] tmp_36_1_1_i_i_i_i_reg_1235;
wire  signed [15:0] tmp_38_1_1_i_i_i_i_fu_555_p1;
reg  signed [15:0] tmp_38_1_1_i_i_i_i_reg_1240;
wire  signed [15:0] tmp_36_1_2_i_i_i_i_fu_559_p1;
reg  signed [15:0] tmp_36_1_2_i_i_i_i_reg_1245;
wire  signed [15:0] tmp_38_1_2_i_i_i_i_fu_563_p1;
reg  signed [15:0] tmp_38_1_2_i_i_i_i_reg_1250;
wire  signed [15:0] tmp_36_2_i_i_i_i_fu_567_p1;
reg  signed [15:0] tmp_36_2_i_i_i_i_reg_1255;
wire  signed [15:0] tmp_38_2_i_i_i_i_fu_571_p1;
reg  signed [15:0] tmp_38_2_i_i_i_i_reg_1260;
wire  signed [15:0] tmp_36_2_1_i_i_i_i_fu_575_p1;
reg  signed [15:0] tmp_36_2_1_i_i_i_i_reg_1265;
wire  signed [15:0] tmp_38_2_1_i_i_i_i_fu_579_p1;
reg  signed [15:0] tmp_38_2_1_i_i_i_i_reg_1270;
wire  signed [15:0] tmp_36_2_2_i_i_i_i_fu_583_p1;
reg  signed [15:0] tmp_36_2_2_i_i_i_i_reg_1275;
wire   [0:0] tmp_30_i_i_i_i_fu_587_p2;
reg   [0:0] tmp_30_i_i_i_i_reg_1280;
wire   [0:0] exitcond1_i_fu_597_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [11:0] row_fu_602_p2;
reg   [11:0] row_reg_1289;
wire   [0:0] tmp_34_i_i_i_fu_608_p2;
reg   [0:0] tmp_34_i_i_i_reg_1294;
wire   [0:0] icmp_fu_623_p2;
reg   [0:0] icmp_reg_1299;
wire   [0:0] tmp_36_i_i_i_fu_629_p2;
reg   [0:0] tmp_36_i_i_i_reg_1304;
wire   [0:0] tmp_37_i_i_i_fu_635_p2;
reg   [0:0] tmp_37_i_i_i_reg_1309;
wire   [0:0] exitcond_i_fu_644_p2;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_i_reg_1314;
wire   [11:0] col_fu_649_p2;
reg   [11:0] col_reg_1318;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_39_i_i_i_fu_655_p2;
reg   [0:0] tmp_39_i_i_i_reg_1323;
reg   [0:0] ap_pipeline_reg_pp0_iter1_tmp_39_i_i_i_reg_1323;
reg   [0:0] ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323;
wire   [63:0] tmp_40_i_i_i_fu_660_p1;
reg   [63:0] tmp_40_i_i_i_reg_1330;
reg   [10:0] buff_A_val_1_addr_reg_1335;
wire   [0:0] or_cond_i_i_i_fu_666_p2;
wire   [0:0] tmp_45_i_i_i_fu_671_p2;
reg   [0:0] tmp_45_i_i_i_reg_1350;
reg   [0:0] ap_pipeline_reg_pp0_iter1_tmp_45_i_i_i_reg_1350;
reg   [0:0] ap_pipeline_reg_pp0_iter2_tmp_45_i_i_i_reg_1350;
reg   [0:0] ap_pipeline_reg_pp0_iter3_tmp_45_i_i_i_reg_1350;
reg   [0:0] ap_pipeline_reg_pp0_iter4_tmp_45_i_i_i_reg_1350;
reg   [0:0] ap_pipeline_reg_pp0_iter5_tmp_45_i_i_i_reg_1350;
reg   [0:0] ap_pipeline_reg_pp0_iter6_tmp_45_i_i_i_reg_1350;
wire   [0:0] or_cond3_i_i_i_fu_682_p2;
reg   [0:0] ap_pipeline_reg_pp0_iter1_or_cond3_i_i_i_reg_1355;
reg   [0:0] ap_pipeline_reg_pp0_iter2_or_cond3_i_i_i_reg_1355;
reg   [0:0] ap_pipeline_reg_pp0_iter3_or_cond3_i_i_i_reg_1355;
reg   [0:0] ap_pipeline_reg_pp0_iter4_or_cond3_i_i_i_reg_1355;
reg   [0:0] ap_pipeline_reg_pp0_iter5_or_cond3_i_i_i_reg_1355;
reg   [7:0] buff_C_val_1_0_loa_reg_1359;
wire   [0:0] icmp6_fu_720_p2;
reg   [0:0] icmp6_reg_1369;
reg   [0:0] ap_pipeline_reg_pp0_iter3_icmp6_reg_1369;
reg   [0:0] ap_pipeline_reg_pp0_iter4_icmp6_reg_1369;
reg   [0:0] ap_pipeline_reg_pp0_iter5_icmp6_reg_1369;
reg   [0:0] ap_pipeline_reg_pp0_iter6_icmp6_reg_1369;
reg   [7:0] buff_C_val_0_0_i_i_1_reg_1374;
reg   [7:0] buff_C_val_0_1_i_i_1_reg_1379;
reg   [7:0] buff_C_val_1_1_i_i_1_reg_1384;
wire   [7:0] buff_C_val_2_0_1_fu_747_p3;
reg   [7:0] buff_C_val_2_0_1_reg_1389;
wire   [7:0] buff_C_val_1_0_1_fu_754_p3;
reg   [7:0] buff_C_val_1_0_1_reg_1394;
wire   [15:0] tmp_37_0_i_i_i_i_fu_771_p2;
reg   [15:0] tmp_37_0_i_i_i_i_reg_1399;
wire   [15:0] tmp_39_0_i_i_i_i_fu_776_p2;
reg   [15:0] tmp_39_0_i_i_i_i_reg_1404;
wire   [15:0] tmp_37_1_1_i_i_i_i_fu_785_p2;
reg   [15:0] tmp_37_1_1_i_i_i_i_reg_1409;
wire   [15:0] tmp_39_1_1_i_i_i_i_fu_790_p2;
reg   [15:0] tmp_39_1_1_i_i_i_i_reg_1414;
wire   [15:0] tmp_37_2_1_i_i_i_i_fu_799_p2;
reg   [15:0] tmp_37_2_1_i_i_i_i_reg_1419;
wire   [15:0] tmp_39_2_1_i_i_i_i_fu_804_p2;
reg   [15:0] tmp_39_2_1_i_i_i_i_reg_1424;
wire   [15:0] tmp_37_2_2_i_i_i_i_fu_813_p2;
reg   [15:0] tmp_37_2_2_i_i_i_i_reg_1429;
(* use_dsp48 = "no" *) wire   [15:0] tmp4_i_fu_869_p2;
reg   [15:0] tmp4_i_reg_1435;
wire  signed [15:0] grp_fu_1039_p3;
reg  signed [15:0] tmp5_i_reg_1440;
reg    ap_enable_reg_pp0_iter4;
wire  signed [15:0] grp_fu_1063_p3;
reg  signed [15:0] tmp7_i_reg_1445;
(* use_dsp48 = "no" *) wire   [15:0] tmp11_i_fu_873_p2;
reg   [15:0] tmp11_i_reg_1450;
wire  signed [15:0] grp_fu_1045_p3;
reg  signed [15:0] tmp12_i_reg_1455;
wire  signed [15:0] grp_fu_1070_p3;
reg  signed [15:0] tmp14_i_reg_1460;
wire   [15:0] tmp_19_i_i_i_i_fu_907_p3;
reg   [15:0] tmp_19_i_i_i_i_reg_1465;
wire   [15:0] tmp_22_i_i_i_i_fu_927_p3;
reg   [15:0] tmp_22_i_i_i_i_reg_1470;
wire   [7:0] tmp_22_fu_935_p1;
reg   [7:0] tmp_22_reg_1475;
wire   [7:0] tmp_23_fu_939_p1;
reg   [7:0] tmp_23_reg_1480;
wire   [7:0] edge_val1_i_i_i_i_fu_963_p3;
reg   [7:0] edge_val1_i_i_i_i_reg_1485;
wire   [0:0] tmp_27_i_i_i_i_fu_975_p2;
reg   [0:0] tmp_27_i_i_i_i_reg_1490;
wire   [0:0] tmp_28_i_i_i_i_fu_980_p2;
reg   [0:0] tmp_28_i_i_i_i_reg_1496;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
wire   [10:0] buff_A_val_0_address0;
reg    buff_A_val_0_ce0;
wire   [7:0] buff_A_val_0_q0;
wire   [10:0] buff_A_val_0_address1;
reg    buff_A_val_0_ce1;
reg    buff_A_val_0_we1;
wire   [10:0] buff_A_val_1_address0;
reg    buff_A_val_1_ce0;
wire   [7:0] buff_A_val_1_q0;
reg    buff_A_val_1_ce1;
reg    buff_A_val_1_we1;
wire   [10:0] buff_A_val_2_address0;
reg    buff_A_val_2_ce0;
reg    buff_A_val_2_we0;
wire   [10:0] buff_A_val_2_address1;
reg    buff_A_val_2_ce1;
wire   [7:0] buff_A_val_2_q1;
reg   [11:0] row_i_i_i_reg_380;
wire   [0:0] ap_CS_fsm_state11;
reg   [11:0] col_assign_i_phi_fu_395_p4;
wire   [63:0] tmp_42_i_i_i_fu_692_p1;
wire   [63:0] tmp_43_i_i_i_fu_705_p1;
reg   [7:0] buff_C_val_1_0_fu_118;
reg   [7:0] buff_C_val_0_0_i_i_s_fu_122;
wire   [7:0] buff_C_val_0_0_2_fu_760_p3;
reg   [7:0] buff_C_val_0_1_i_i_s_fu_126;
reg   [7:0] buff_C_val_0_0_fu_130;
reg   [7:0] buff_C_val_1_0_i_i_s_fu_134;
reg   [7:0] buff_C_val_1_1_i_i_s_fu_138;
reg   [7:0] buff_C_val_2_1_i_i_s_fu_142;
reg   [7:0] buff_C_val_2_0_i_i_s_fu_146;
wire   [10:0] tmp_fu_403_p1;
wire   [11:0] tmp_31_i_i_i_fu_415_p2;
wire   [10:0] tmp_1_fu_407_p1;
wire   [11:0] tmp_32_i_i_i_fu_429_p2;
wire   [7:0] tmp_2_fu_451_p1;
wire   [7:0] tmp_11_fu_487_p1;
wire   [7:0] tmp_3_fu_455_p1;
wire   [7:0] tmp_12_fu_491_p1;
wire   [7:0] tmp_4_fu_459_p1;
wire   [7:0] tmp_13_fu_495_p1;
wire   [7:0] tmp_5_fu_463_p1;
wire   [7:0] tmp_14_fu_499_p1;
wire   [7:0] tmp_6_fu_467_p1;
wire   [7:0] tmp_15_fu_503_p1;
wire   [7:0] tmp_7_fu_471_p1;
wire   [7:0] tmp_16_fu_507_p1;
wire   [7:0] tmp_8_fu_475_p1;
wire   [7:0] tmp_17_fu_511_p1;
wire   [7:0] tmp_9_fu_479_p1;
wire   [7:0] tmp_18_fu_515_p1;
wire   [7:0] tmp_10_fu_483_p1;
wire   [10:0] tmp_19_fu_613_p4;
wire   [12:0] row_cast_cast_i_i_i_fu_593_p1;
wire   [12:0] col_assign_cast_cast_fu_640_p1;
wire   [0:0] tmp_46_i_i_i_fu_676_p2;
wire   [10:0] tmp_21_fu_710_p4;
wire  signed [7:0] tmp_37_0_i_i_i_i_fu_771_p0;
wire   [7:0] tmp_37_0_i_i_i_i_fu_771_p1;
wire   [15:0] tmp_35_0_i_i_i_i_fu_767_p1;
wire  signed [7:0] tmp_39_0_i_i_i_i_fu_776_p0;
wire   [7:0] tmp_39_0_i_i_i_i_fu_776_p1;
wire  signed [7:0] tmp_37_1_1_i_i_i_i_fu_785_p0;
wire   [7:0] tmp_37_1_1_i_i_i_i_fu_785_p1;
wire   [15:0] tmp_35_1_1_i_i_i_i_fu_781_p1;
wire  signed [7:0] tmp_39_1_1_i_i_i_i_fu_790_p0;
wire   [7:0] tmp_39_1_1_i_i_i_i_fu_790_p1;
wire  signed [7:0] tmp_37_2_1_i_i_i_i_fu_799_p0;
wire   [7:0] tmp_37_2_1_i_i_i_i_fu_799_p1;
wire   [15:0] tmp_35_2_1_i_i_i_i_fu_795_p1;
wire  signed [7:0] tmp_39_2_1_i_i_i_i_fu_804_p0;
wire   [7:0] tmp_39_2_1_i_i_i_i_fu_804_p1;
wire  signed [7:0] tmp_37_2_2_i_i_i_i_fu_813_p0;
wire   [7:0] tmp_37_2_2_i_i_i_i_fu_813_p1;
wire  signed [15:0] grp_fu_1091_p3;
wire  signed [15:0] grp_fu_1077_p3;
wire  signed [15:0] grp_fu_1098_p3;
wire  signed [15:0] grp_fu_1084_p3;
(* use_dsp48 = "no" *) wire   [15:0] tmp8_i_fu_877_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp15_i_fu_886_p2;
wire   [15:0] x_weight_2_2_2_i_i_i_fu_881_p2;
wire   [0:0] tmp_17_i_i_i_i_fu_895_p2;
wire   [15:0] tmp_18_i_i_i_i_fu_901_p2;
wire   [15:0] y_weight_2_2_2_i_i_i_fu_890_p2;
wire   [0:0] tmp_20_i_i_i_i_fu_915_p2;
wire   [15:0] tmp_21_i_i_i_i_fu_921_p2;
wire   [15:0] edge_weight_fu_943_p2;
wire   [7:0] tmp_25_i_i_i_i_fu_953_p2;
wire   [0:0] tmp_23_i_i_i_i_fu_947_p2;
wire   [7:0] edge_val_fu_957_p2;
wire   [31:0] tmp_26_i_i_i_i_fu_971_p1;
wire   [0:0] tmp1_i_fu_989_p2;
wire   [0:0] tmp_i_fu_985_p2;
wire   [0:0] tmp_i_10_fu_1006_p2;
wire   [7:0] p_edge_val_i_i_i_i_fu_999_p3;
wire   [7:0] edge_val_1_fu_1010_p3;
wire   [7:0] edge_val_2_fu_1017_p2;
wire   [0:0] or_cond4_i_i_i_fu_993_p2;
wire   [7:0] edge_val_4_fu_1023_p3;
wire  signed [7:0] grp_fu_1039_p0;
wire   [7:0] grp_fu_1039_p1;
wire   [15:0] tmp_35_0_1_i_i_i_i_fu_854_p1;
wire  signed [7:0] grp_fu_1045_p0;
wire   [7:0] grp_fu_1045_p1;
wire  signed [7:0] grp_fu_1051_p0;
wire   [7:0] grp_fu_1051_p1;
wire   [15:0] tmp_35_0_2_i_i_i_i_fu_857_p1;
wire  signed [7:0] grp_fu_1057_p0;
wire   [7:0] grp_fu_1057_p1;
wire  signed [7:0] grp_fu_1063_p0;
wire   [7:0] grp_fu_1063_p1;
wire   [15:0] tmp_35_1_i_i_i_i_fu_860_p1;
wire  signed [15:0] grp_fu_1051_p3;
wire  signed [7:0] grp_fu_1070_p0;
wire   [7:0] grp_fu_1070_p1;
wire  signed [15:0] grp_fu_1057_p3;
wire  signed [7:0] grp_fu_1077_p0;
wire   [7:0] grp_fu_1077_p1;
wire   [15:0] tmp_35_1_2_i_i_i_i_fu_863_p1;
wire  signed [7:0] grp_fu_1084_p0;
wire   [7:0] grp_fu_1084_p1;
wire  signed [7:0] grp_fu_1091_p0;
wire   [7:0] grp_fu_1091_p1;
wire   [15:0] tmp_35_2_i_i_i_i_fu_866_p1;
wire  signed [7:0] grp_fu_1098_p0;
wire   [7:0] grp_fu_1098_p1;
reg   [3:0] ap_NS_fsm;
wire   [15:0] tmp_37_2_2_i_i_i_i_fu_813_p10;
reg    ap_condition_201;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

sobel_filter_corebkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buff_A_val_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_A_val_0_address0),
    .ce0(buff_A_val_0_ce0),
    .q0(buff_A_val_0_q0),
    .address1(buff_A_val_0_address1),
    .ce1(buff_A_val_0_ce1),
    .we1(buff_A_val_0_we1),
    .d1(src_data_stream_0_V_dout)
);

sobel_filter_corebkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buff_A_val_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_A_val_1_address0),
    .ce0(buff_A_val_1_ce0),
    .q0(buff_A_val_1_q0),
    .address1(buff_A_val_1_addr_reg_1335),
    .ce1(buff_A_val_1_ce1),
    .we1(buff_A_val_1_we1),
    .d1(buff_A_val_0_q0)
);

sobel_filter_coredEe #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buff_A_val_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_A_val_2_address0),
    .ce0(buff_A_val_2_ce0),
    .we0(buff_A_val_2_we0),
    .d0(buff_A_val_1_q0),
    .address1(buff_A_val_2_address1),
    .ce1(buff_A_val_2_ce1),
    .q1(buff_A_val_2_q1)
);

image_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_eOg_U52(
    .din0(grp_fu_1039_p0),
    .din1(grp_fu_1039_p1),
    .din2(tmp_37_0_i_i_i_i_reg_1399),
    .dout(grp_fu_1039_p3)
);

image_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_eOg_U53(
    .din0(grp_fu_1045_p0),
    .din1(grp_fu_1045_p1),
    .din2(tmp_39_0_i_i_i_i_reg_1404),
    .dout(grp_fu_1045_p3)
);

image_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_eOg_U54(
    .din0(grp_fu_1051_p0),
    .din1(grp_fu_1051_p1),
    .din2(tmp_37_2_2_i_i_i_i_reg_1429),
    .dout(grp_fu_1051_p3)
);

image_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_eOg_U55(
    .din0(grp_fu_1057_p0),
    .din1(grp_fu_1057_p1),
    .din2(tmp_37_2_2_i_i_i_i_reg_1429),
    .dout(grp_fu_1057_p3)
);

image_filter_mac_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_fYi_U56(
    .din0(grp_fu_1063_p0),
    .din1(grp_fu_1063_p1),
    .din2(grp_fu_1051_p3),
    .dout(grp_fu_1063_p3)
);

image_filter_mac_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_fYi_U57(
    .din0(grp_fu_1070_p0),
    .din1(grp_fu_1070_p1),
    .din2(grp_fu_1057_p3),
    .dout(grp_fu_1070_p3)
);

image_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_eOg_U58(
    .din0(grp_fu_1077_p0),
    .din1(grp_fu_1077_p1),
    .din2(tmp_37_1_1_i_i_i_i_reg_1409),
    .dout(grp_fu_1077_p3)
);

image_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_eOg_U59(
    .din0(grp_fu_1084_p0),
    .din1(grp_fu_1084_p1),
    .din2(tmp_39_1_1_i_i_i_i_reg_1414),
    .dout(grp_fu_1084_p3)
);

image_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_eOg_U60(
    .din0(grp_fu_1091_p0),
    .din1(grp_fu_1091_p1),
    .din2(tmp_37_2_1_i_i_i_i_reg_1419),
    .dout(grp_fu_1091_p3)
);

image_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_eOg_U61(
    .din0(grp_fu_1098_p0),
    .din1(grp_fu_1098_p1),
    .din2(tmp_39_2_1_i_i_i_i_reg_1424),
    .dout(grp_fu_1098_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond1_i_fu_597_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & ~(1'b0 == exitcond_i_fu_644_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond1_i_fu_597_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond1_i_fu_597_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_condition_201 == 1'b1)) begin
            if (~(1'b1 == ap_enable_reg_pp0_iter2)) begin
                ap_enable_reg_pp0_iter4 <= 1'b0;
            end else if ((1'b1 == ap_enable_reg_pp0_iter2)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1)))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1)))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1)))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond1_i_fu_597_p2))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_1314 == 1'b0))) begin
        col_assign_i_reg_391 <= col_reg_1318;
    end else if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond1_i_fu_597_p2))) begin
        col_assign_i_reg_391 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        row_i_i_i_reg_380 <= row_reg_1289;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        row_i_i_i_reg_380 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391 <= col_assign_i_reg_391;
        ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 <= exitcond_i_reg_1314;
        ap_pipeline_reg_pp0_iter1_or_cond3_i_i_i_reg_1355 <= or_cond3_i_i_i_reg_1355;
        ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346 <= or_cond_i_i_i_reg_1346;
        ap_pipeline_reg_pp0_iter1_tmp_39_i_i_i_reg_1323 <= tmp_39_i_i_i_reg_1323;
        ap_pipeline_reg_pp0_iter1_tmp_45_i_i_i_reg_1350 <= tmp_45_i_i_i_reg_1350;
        exitcond_i_reg_1314 <= exitcond_i_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1)))) begin
        ap_pipeline_reg_pp0_iter2_exitcond_i_reg_1314 <= ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314;
        ap_pipeline_reg_pp0_iter2_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter1_or_cond3_i_i_i_reg_1355;
        ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323 <= ap_pipeline_reg_pp0_iter1_tmp_39_i_i_i_reg_1323;
        ap_pipeline_reg_pp0_iter2_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter1_tmp_45_i_i_i_reg_1350;
        ap_pipeline_reg_pp0_iter3_icmp6_reg_1369 <= icmp6_reg_1369;
        ap_pipeline_reg_pp0_iter3_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter2_or_cond3_i_i_i_reg_1355;
        ap_pipeline_reg_pp0_iter3_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter2_tmp_45_i_i_i_reg_1350;
        ap_pipeline_reg_pp0_iter4_icmp6_reg_1369 <= ap_pipeline_reg_pp0_iter3_icmp6_reg_1369;
        ap_pipeline_reg_pp0_iter4_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter3_or_cond3_i_i_i_reg_1355;
        ap_pipeline_reg_pp0_iter4_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter3_tmp_45_i_i_i_reg_1350;
        ap_pipeline_reg_pp0_iter5_icmp6_reg_1369 <= ap_pipeline_reg_pp0_iter4_icmp6_reg_1369;
        ap_pipeline_reg_pp0_iter5_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter4_or_cond3_i_i_i_reg_1355;
        ap_pipeline_reg_pp0_iter5_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter4_tmp_45_i_i_i_reg_1350;
        ap_pipeline_reg_pp0_iter6_icmp6_reg_1369 <= ap_pipeline_reg_pp0_iter5_icmp6_reg_1369;
        ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355 <= ap_pipeline_reg_pp0_iter5_or_cond3_i_i_i_reg_1355;
        ap_pipeline_reg_pp0_iter6_tmp_45_i_i_i_reg_1350 <= ap_pipeline_reg_pp0_iter5_tmp_45_i_i_i_reg_1350;
        edge_val1_i_i_i_i_reg_1485 <= edge_val1_i_i_i_i_fu_963_p3;
        tmp11_i_reg_1450 <= tmp11_i_fu_873_p2;
        tmp4_i_reg_1435 <= tmp4_i_fu_869_p2;
        tmp_19_i_i_i_i_reg_1465 <= tmp_19_i_i_i_i_fu_907_p3;
        tmp_22_i_i_i_i_reg_1470 <= tmp_22_i_i_i_i_fu_927_p3;
        tmp_22_reg_1475 <= tmp_22_fu_935_p1;
        tmp_23_reg_1480 <= tmp_23_fu_939_p1;
        tmp_27_i_i_i_i_reg_1490 <= tmp_27_i_i_i_i_fu_975_p2;
        tmp_28_i_i_i_i_reg_1496 <= tmp_28_i_i_i_i_fu_980_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b0 == exitcond_i_fu_644_p2) & ~(1'b0 == tmp_39_i_i_i_fu_655_p2))) begin
        buff_A_val_1_addr_reg_1335 <= tmp_40_i_i_i_fu_660_p1;
        tmp_40_i_i_i_reg_1330[11 : 0] <= tmp_40_i_i_i_fu_660_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        buff_C_val_0_0_fu_130 <= src_data_stream_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_i_reg_1314))) begin
        buff_C_val_0_0_i_i_1_reg_1374 <= buff_C_val_0_0_i_i_s_fu_122;
        buff_C_val_0_1_i_i_1_reg_1379 <= buff_C_val_0_1_i_i_s_fu_126;
        buff_C_val_1_0_1_reg_1394 <= buff_C_val_1_0_1_fu_754_p3;
        buff_C_val_1_1_i_i_1_reg_1384 <= buff_C_val_1_1_i_i_s_fu_138;
        buff_C_val_2_0_1_reg_1389 <= buff_C_val_2_0_1_fu_747_p3;
        tmp_37_0_i_i_i_i_reg_1399 <= tmp_37_0_i_i_i_i_fu_771_p2;
        tmp_37_1_1_i_i_i_i_reg_1409 <= tmp_37_1_1_i_i_i_i_fu_785_p2;
        tmp_37_2_1_i_i_i_i_reg_1419 <= tmp_37_2_1_i_i_i_i_fu_799_p2;
        tmp_37_2_2_i_i_i_i_reg_1429 <= tmp_37_2_2_i_i_i_i_fu_813_p2;
        tmp_39_0_i_i_i_i_reg_1404 <= tmp_39_0_i_i_i_i_fu_776_p2;
        tmp_39_1_1_i_i_i_i_reg_1414 <= tmp_39_1_1_i_i_i_i_fu_790_p2;
        tmp_39_2_1_i_i_i_i_reg_1424 <= tmp_39_2_1_i_i_i_i_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_i_reg_1314) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        buff_C_val_0_0_i_i_s_fu_122 <= buff_C_val_0_0_2_fu_760_p3;
        buff_C_val_0_1_i_i_s_fu_126 <= buff_C_val_0_0_i_i_s_fu_122;
        buff_C_val_1_0_i_i_s_fu_134 <= buff_C_val_1_0_1_fu_754_p3;
        buff_C_val_1_1_i_i_s_fu_138 <= buff_C_val_1_0_i_i_s_fu_134;
        buff_C_val_2_0_i_i_s_fu_146 <= buff_C_val_2_0_1_fu_747_p3;
        buff_C_val_2_1_i_i_s_fu_142 <= buff_C_val_2_0_i_i_s_fu_146;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == tmp_39_i_i_i_reg_1323))) begin
        buff_C_val_1_0_fu_118 <= buff_A_val_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_tmp_39_i_i_i_reg_1323))) begin
        buff_C_val_1_0_loa_reg_1359 <= buff_C_val_1_0_fu_118;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        c_high_thresh_channe_1_reg_1155 <= c_high_thresh_channe_dout;
        c_low_thresh_channel_reg_1160 <= c_low_thresh_channel_1_dout;
        tmp_30_i_i_i_i_reg_1280 <= tmp_30_i_i_i_i_fu_587_p2;
        tmp_36_0_1_i_i_i_i_reg_1205 <= tmp_36_0_1_i_i_i_i_fu_527_p1;
        tmp_36_0_2_i_i_i_i_reg_1215 <= tmp_36_0_2_i_i_i_i_fu_535_p1;
        tmp_36_0_i_i_i_i_reg_1195 <= tmp_36_0_i_i_i_i_fu_519_p1;
        tmp_36_1_1_i_i_i_i_reg_1235 <= tmp_36_1_1_i_i_i_i_fu_551_p1;
        tmp_36_1_2_i_i_i_i_reg_1245 <= tmp_36_1_2_i_i_i_i_fu_559_p1;
        tmp_36_1_i_i_i_i_reg_1225 <= tmp_36_1_i_i_i_i_fu_543_p1;
        tmp_36_2_1_i_i_i_i_reg_1265 <= tmp_36_2_1_i_i_i_i_fu_575_p1;
        tmp_36_2_2_i_i_i_i_reg_1275 <= tmp_36_2_2_i_i_i_i_fu_583_p1;
        tmp_36_2_i_i_i_i_reg_1255 <= tmp_36_2_i_i_i_i_fu_567_p1;
        tmp_38_0_1_i_i_i_i_reg_1210 <= tmp_38_0_1_i_i_i_i_fu_531_p1;
        tmp_38_0_2_i_i_i_i_reg_1220 <= tmp_38_0_2_i_i_i_i_fu_539_p1;
        tmp_38_0_i_i_i_i_reg_1200 <= tmp_38_0_i_i_i_i_fu_523_p1;
        tmp_38_1_1_i_i_i_i_reg_1240 <= tmp_38_1_1_i_i_i_i_fu_555_p1;
        tmp_38_1_2_i_i_i_i_reg_1250 <= tmp_38_1_2_i_i_i_i_fu_563_p1;
        tmp_38_1_i_i_i_i_reg_1230 <= tmp_38_1_i_i_i_i_fu_547_p1;
        tmp_38_2_1_i_i_i_i_reg_1270 <= tmp_38_2_1_i_i_i_i_fu_579_p1;
        tmp_38_2_i_i_i_i_reg_1260 <= tmp_38_2_i_i_i_i_fu_571_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        col_reg_1318 <= col_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        icmp6_reg_1369 <= icmp6_fu_720_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond1_i_fu_597_p2))) begin
        icmp_reg_1299 <= icmp_fu_623_p2;
        tmp_34_i_i_i_reg_1294 <= tmp_34_i_i_i_fu_608_p2;
        tmp_36_i_i_i_reg_1304 <= tmp_36_i_i_i_fu_629_p2;
        tmp_37_i_i_i_reg_1309 <= tmp_37_i_i_i_fu_635_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b0 == exitcond_i_fu_644_p2))) begin
        or_cond3_i_i_i_reg_1355 <= or_cond3_i_i_i_fu_682_p2;
        or_cond_i_i_i_reg_1346 <= or_cond_i_i_i_fu_666_p2;
        tmp_39_i_i_i_reg_1323 <= tmp_39_i_i_i_fu_655_p2;
        tmp_45_i_i_i_reg_1350 <= tmp_45_i_i_i_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_reg_1289 <= row_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        tmp12_i_reg_1455 <= grp_fu_1045_p3;
        tmp14_i_reg_1460 <= grp_fu_1070_p3;
        tmp5_i_reg_1440 <= grp_fu_1039_p3;
        tmp7_i_reg_1445 <= grp_fu_1063_p3;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_XR0C0_channel_blk_n = C_XR0C0_channel_empty_n;
    end else begin
        C_XR0C0_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_XR0C0_channel_read = 1'b1;
    end else begin
        C_XR0C0_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_XR0C1_channel_blk_n = C_XR0C1_channel_empty_n;
    end else begin
        C_XR0C1_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_XR0C1_channel_read = 1'b1;
    end else begin
        C_XR0C1_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_XR0C2_channel_blk_n = C_XR0C2_channel_empty_n;
    end else begin
        C_XR0C2_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_XR0C2_channel_read = 1'b1;
    end else begin
        C_XR0C2_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_XR1C0_channel_blk_n = C_XR1C0_channel_empty_n;
    end else begin
        C_XR1C0_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_XR1C0_channel_read = 1'b1;
    end else begin
        C_XR1C0_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_XR1C1_channel_blk_n = C_XR1C1_channel_empty_n;
    end else begin
        C_XR1C1_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_XR1C1_channel_read = 1'b1;
    end else begin
        C_XR1C1_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_XR1C2_channel_blk_n = C_XR1C2_channel_empty_n;
    end else begin
        C_XR1C2_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_XR1C2_channel_read = 1'b1;
    end else begin
        C_XR1C2_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_XR2C0_channel_blk_n = C_XR2C0_channel_empty_n;
    end else begin
        C_XR2C0_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_XR2C0_channel_read = 1'b1;
    end else begin
        C_XR2C0_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_XR2C1_channel_blk_n = C_XR2C1_channel_empty_n;
    end else begin
        C_XR2C1_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_XR2C1_channel_read = 1'b1;
    end else begin
        C_XR2C1_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_XR2C2_channel_blk_n = C_XR2C2_channel_empty_n;
    end else begin
        C_XR2C2_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_XR2C2_channel_read = 1'b1;
    end else begin
        C_XR2C2_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_YR0C0_channel_blk_n = C_YR0C0_channel_empty_n;
    end else begin
        C_YR0C0_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_YR0C0_channel_read = 1'b1;
    end else begin
        C_YR0C0_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_YR0C1_channel_blk_n = C_YR0C1_channel_empty_n;
    end else begin
        C_YR0C1_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_YR0C1_channel_read = 1'b1;
    end else begin
        C_YR0C1_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_YR0C2_channel_blk_n = C_YR0C2_channel_empty_n;
    end else begin
        C_YR0C2_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_YR0C2_channel_read = 1'b1;
    end else begin
        C_YR0C2_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_YR1C0_channel_blk_n = C_YR1C0_channel_empty_n;
    end else begin
        C_YR1C0_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_YR1C0_channel_read = 1'b1;
    end else begin
        C_YR1C0_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_YR1C1_channel_blk_n = C_YR1C1_channel_empty_n;
    end else begin
        C_YR1C1_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_YR1C1_channel_read = 1'b1;
    end else begin
        C_YR1C1_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_YR1C2_channel_blk_n = C_YR1C2_channel_empty_n;
    end else begin
        C_YR1C2_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_YR1C2_channel_read = 1'b1;
    end else begin
        C_YR1C2_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_YR2C0_channel_blk_n = C_YR2C0_channel_empty_n;
    end else begin
        C_YR2C0_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_YR2C0_channel_read = 1'b1;
    end else begin
        C_YR2C0_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        C_YR2C1_channel_blk_n = C_YR2C1_channel_empty_n;
    end else begin
        C_YR2C1_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        C_YR2C1_channel_read = 1'b1;
    end else begin
        C_YR2C1_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond1_i_fu_597_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond1_i_fu_597_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        buff_A_val_0_ce0 = 1'b1;
    end else begin
        buff_A_val_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        buff_A_val_0_ce1 = 1'b1;
    end else begin
        buff_A_val_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        buff_A_val_0_we1 = 1'b1;
    end else begin
        buff_A_val_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        buff_A_val_1_ce0 = 1'b1;
    end else begin
        buff_A_val_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        buff_A_val_1_ce1 = 1'b1;
    end else begin
        buff_A_val_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == tmp_39_i_i_i_reg_1323))) begin
        buff_A_val_1_we1 = 1'b1;
    end else begin
        buff_A_val_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        buff_A_val_2_ce0 = 1'b1;
    end else begin
        buff_A_val_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        buff_A_val_2_ce1 = 1'b1;
    end else begin
        buff_A_val_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == tmp_39_i_i_i_reg_1323))) begin
        buff_A_val_2_we0 = 1'b1;
    end else begin
        buff_A_val_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        c_high_thresh_channe_blk_n = c_high_thresh_channe_empty_n;
    end else begin
        c_high_thresh_channe_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        c_high_thresh_channe_read = 1'b1;
    end else begin
        c_high_thresh_channe_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        c_invert_channel_blk_n = c_invert_channel_empty_n;
    end else begin
        c_invert_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        c_invert_channel_read = 1'b1;
    end else begin
        c_invert_channel_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        c_low_thresh_channel_1_blk_n = c_low_thresh_channel_1_empty_n;
    end else begin
        c_low_thresh_channel_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_245 == 1'b1))) begin
        c_low_thresh_channel_1_read = 1'b1;
    end else begin
        c_low_thresh_channel_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_i_reg_1314 == 1'b0))) begin
        col_assign_i_phi_fu_395_p4 = col_reg_1318;
    end else begin
        col_assign_i_phi_fu_395_p4 = col_assign_i_reg_391;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter7) & ~(1'b0 == ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355))) begin
        dst_data_stream_0_V_blk_n = dst_data_stream_0_V_full_n;
    end else begin
        dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter7) & ~(1'b0 == ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        dst_data_stream_0_V_write = 1'b1;
    end else begin
        dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter7) & ~(1'b0 == ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355))) begin
        dst_data_stream_1_V_blk_n = dst_data_stream_1_V_full_n;
    end else begin
        dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter7) & ~(1'b0 == ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        dst_data_stream_1_V_write = 1'b1;
    end else begin
        dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346))) begin
        src_data_stream_0_V_blk_n = src_data_stream_0_V_empty_n;
    end else begin
        src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        src_data_stream_0_V_read = 1'b1;
    end else begin
        src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346))) begin
        src_data_stream_1_V_blk_n = src_data_stream_1_V_empty_n;
    end else begin
        src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))))) begin
        src_data_stream_1_V_read = 1'b1;
    end else begin
        src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_condition_245 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == exitcond1_i_fu_597_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter7) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & ~(1'b1 == ap_enable_reg_pp0_iter6)) & ~(~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & ~(1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_enable_reg_pp0_iter3) & ~(1'b1 == ap_enable_reg_pp0_iter4)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter7) & ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & ~(1'b1 == ap_enable_reg_pp0_iter6)) | (~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1))) & ~(1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_enable_reg_pp0_iter3) & ~(1'b1 == ap_enable_reg_pp0_iter4)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

always @ (*) begin
    ap_condition_188 = (((ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346) & (src_data_stream_0_V_empty_n == 1'b0)) | ((ap_pipeline_reg_pp0_iter1_exitcond_i_reg_1314 == 1'b0) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_i_i_i_reg_1346) & (src_data_stream_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_196 = ((~(1'b0 == ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355) & (dst_data_stream_0_V_full_n == 1'b0)) | (~(1'b0 == ap_pipeline_reg_pp0_iter6_or_cond3_i_i_i_reg_1355) & (dst_data_stream_1_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_201 = ~(((1'b1 == ap_enable_reg_pp0_iter2) & (ap_condition_188 == 1'b1)) | ((1'b1 == ap_enable_reg_pp0_iter7) & (ap_condition_196 == 1'b1)));
end

always @ (*) begin
    ap_condition_245 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (C_XR0C0_channel_empty_n == 1'b0) | (C_XR0C1_channel_empty_n == 1'b0) | (C_XR0C2_channel_empty_n == 1'b0) | (C_XR1C0_channel_empty_n == 1'b0) | (C_XR1C1_channel_empty_n == 1'b0) | (C_XR1C2_channel_empty_n == 1'b0) | (C_XR2C0_channel_empty_n == 1'b0) | (C_XR2C1_channel_empty_n == 1'b0) | (C_XR2C2_channel_empty_n == 1'b0) | (C_YR0C0_channel_empty_n == 1'b0) | (C_YR0C1_channel_empty_n == 1'b0) | (C_YR0C2_channel_empty_n == 1'b0) | (C_YR1C0_channel_empty_n == 1'b0) | (C_YR1C1_channel_empty_n == 1'b0) | (C_YR1C2_channel_empty_n == 1'b0) | (C_YR2C0_channel_empty_n == 1'b0) | (C_YR2C1_channel_empty_n == 1'b0) | (c_high_thresh_channe_empty_n == 1'b0) | (c_low_thresh_channel_1_empty_n == 1'b0) | (c_invert_channel_empty_n == 1'b0));
end

assign buff_A_val_0_address0 = tmp_40_i_i_i_fu_660_p1;

assign buff_A_val_0_address1 = tmp_42_i_i_i_fu_692_p1;

assign buff_A_val_1_address0 = tmp_40_i_i_i_fu_660_p1;

assign buff_A_val_2_address0 = tmp_40_i_i_i_reg_1330;

assign buff_A_val_2_address1 = tmp_43_i_i_i_fu_705_p1;

assign buff_C_val_0_0_2_fu_760_p3 = ((ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323[0:0] === 1'b1) ? buff_C_val_0_0_fu_130 : buff_C_val_0_0_i_i_s_fu_122);

assign buff_C_val_1_0_1_fu_754_p3 = ((ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323[0:0] === 1'b1) ? buff_C_val_1_0_loa_reg_1359 : buff_C_val_1_0_i_i_s_fu_134);

assign buff_C_val_2_0_1_fu_747_p3 = ((ap_pipeline_reg_pp0_iter2_tmp_39_i_i_i_reg_1323[0:0] === 1'b1) ? buff_A_val_2_q1 : buff_C_val_2_0_i_i_s_fu_146);

assign col_assign_cast_cast_fu_640_p1 = col_assign_i_phi_fu_395_p4;

assign col_fu_649_p2 = (col_assign_i_phi_fu_395_p4 + ap_const_lv12_1);

assign cols_cast_i_i_cast_i_fu_425_p1 = tmp_1_fu_407_p1;

assign dst_data_stream_0_V_din = ((or_cond4_i_i_i_fu_993_p2[0:0] === 1'b1) ? ap_const_lv8_0 : edge_val_4_fu_1023_p3);

assign dst_data_stream_1_V_din = ap_const_lv8_80;

assign edge_val1_i_i_i_i_fu_963_p3 = ((tmp_23_i_i_i_i_fu_947_p2[0:0] === 1'b1) ? edge_val_fu_957_p2 : ap_const_lv8_0);

assign edge_val_1_fu_1010_p3 = ((tmp_i_10_fu_1006_p2[0:0] === 1'b1) ? p_edge_val_i_i_i_i_fu_999_p3 : edge_val1_i_i_i_i_reg_1485);

assign edge_val_2_fu_1017_p2 = (edge_val_1_fu_1010_p3 ^ ap_const_lv8_FF);

assign edge_val_4_fu_1023_p3 = ((tmp_30_i_i_i_i_reg_1280[0:0] === 1'b1) ? edge_val_2_fu_1017_p2 : edge_val_1_fu_1010_p3);

assign edge_val_fu_957_p2 = (tmp_25_i_i_i_i_fu_953_p2 ^ ap_const_lv8_FF);

assign edge_weight_fu_943_p2 = (tmp_22_i_i_i_i_reg_1470 + tmp_19_i_i_i_i_reg_1465);

assign exitcond1_i_fu_597_p2 = ((row_i_i_i_reg_380 == tmp_6_i_fu_445_p2) ? 1'b1 : 1'b0);

assign exitcond_i_fu_644_p2 = ((col_assign_i_phi_fu_395_p4 == tmp_3_i_fu_439_p2) ? 1'b1 : 1'b0);

assign grp_fu_1039_p0 = tmp_36_0_1_i_i_i_i_reg_1205;

assign grp_fu_1039_p1 = tmp_35_0_1_i_i_i_i_fu_854_p1;

assign grp_fu_1045_p0 = tmp_38_0_1_i_i_i_i_reg_1210;

assign grp_fu_1045_p1 = tmp_35_0_1_i_i_i_i_fu_854_p1;

assign grp_fu_1051_p0 = tmp_36_0_2_i_i_i_i_reg_1215;

assign grp_fu_1051_p1 = tmp_35_0_2_i_i_i_i_fu_857_p1;

assign grp_fu_1057_p0 = tmp_38_0_2_i_i_i_i_reg_1220;

assign grp_fu_1057_p1 = tmp_35_0_2_i_i_i_i_fu_857_p1;

assign grp_fu_1063_p0 = tmp_36_1_i_i_i_i_reg_1225;

assign grp_fu_1063_p1 = tmp_35_1_i_i_i_i_fu_860_p1;

assign grp_fu_1070_p0 = tmp_38_1_i_i_i_i_reg_1230;

assign grp_fu_1070_p1 = tmp_35_1_i_i_i_i_fu_860_p1;

assign grp_fu_1077_p0 = tmp_36_1_2_i_i_i_i_reg_1245;

assign grp_fu_1077_p1 = tmp_35_1_2_i_i_i_i_fu_863_p1;

assign grp_fu_1084_p0 = tmp_38_1_2_i_i_i_i_reg_1250;

assign grp_fu_1084_p1 = tmp_35_1_2_i_i_i_i_fu_863_p1;

assign grp_fu_1091_p0 = tmp_36_2_i_i_i_i_reg_1255;

assign grp_fu_1091_p1 = tmp_35_2_i_i_i_i_fu_866_p1;

assign grp_fu_1098_p0 = tmp_38_2_i_i_i_i_reg_1260;

assign grp_fu_1098_p1 = tmp_35_2_i_i_i_i_fu_866_p1;

assign icmp6_fu_720_p2 = ((tmp_21_fu_710_p4 == ap_const_lv11_0) ? 1'b1 : 1'b0);

assign icmp_fu_623_p2 = ((tmp_19_fu_613_p4 == ap_const_lv11_0) ? 1'b1 : 1'b0);

assign or_cond3_i_i_i_fu_682_p2 = (tmp_36_i_i_i_reg_1304 & tmp_46_i_i_i_fu_676_p2);

assign or_cond4_i_i_i_fu_993_p2 = (tmp1_i_fu_989_p2 | tmp_i_fu_985_p2);

assign or_cond_i_i_i_fu_666_p2 = (tmp_39_i_i_i_fu_655_p2 & tmp_34_i_i_i_reg_1294);

assign p_edge_val_i_i_i_i_fu_999_p3 = ((tmp_27_i_i_i_i_reg_1490[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign row_cast_cast_i_i_i_fu_593_p1 = row_i_i_i_reg_380;

assign row_fu_602_p2 = (row_i_i_i_reg_380 + ap_const_lv12_1);

assign rows_cast_i_i_cast_i_fu_411_p1 = tmp_fu_403_p1;

assign tmp11_i_fu_873_p2 = ($signed(grp_fu_1098_p3) + $signed(grp_fu_1084_p3));

assign tmp15_i_fu_886_p2 = ($signed(tmp12_i_reg_1455) + $signed(tmp14_i_reg_1460));

assign tmp1_i_fu_989_p2 = (tmp_37_i_i_i_reg_1309 | ap_pipeline_reg_pp0_iter6_tmp_45_i_i_i_reg_1350);

assign tmp4_i_fu_869_p2 = ($signed(grp_fu_1091_p3) + $signed(grp_fu_1077_p3));

assign tmp8_i_fu_877_p2 = ($signed(tmp5_i_reg_1440) + $signed(tmp7_i_reg_1445));

assign tmp_10_fu_483_p1 = C_XR2C2_channel_dout[7:0];

assign tmp_11_fu_487_p1 = C_YR0C0_channel_dout[7:0];

assign tmp_12_fu_491_p1 = C_YR0C1_channel_dout[7:0];

assign tmp_13_fu_495_p1 = C_YR0C2_channel_dout[7:0];

assign tmp_14_fu_499_p1 = C_YR1C0_channel_dout[7:0];

assign tmp_15_fu_503_p1 = C_YR1C1_channel_dout[7:0];

assign tmp_16_fu_507_p1 = C_YR1C2_channel_dout[7:0];

assign tmp_17_fu_511_p1 = C_YR2C0_channel_dout[7:0];

assign tmp_17_i_i_i_i_fu_895_p2 = (($signed(x_weight_2_2_2_i_i_i_fu_881_p2) > $signed(16'b0000000000000000)) ? 1'b1 : 1'b0);

assign tmp_18_fu_515_p1 = C_YR2C1_channel_dout[7:0];

assign tmp_18_i_i_i_i_fu_901_p2 = (ap_const_lv16_0 - x_weight_2_2_2_i_i_i_fu_881_p2);

assign tmp_19_fu_613_p4 = {{row_i_i_i_reg_380[ap_const_lv32_B : ap_const_lv32_1]}};

assign tmp_19_i_i_i_i_fu_907_p3 = ((tmp_17_i_i_i_i_fu_895_p2[0:0] === 1'b1) ? x_weight_2_2_2_i_i_i_fu_881_p2 : tmp_18_i_i_i_i_fu_901_p2);

assign tmp_1_fu_407_p1 = cols[10:0];

assign tmp_20_i_i_i_i_fu_915_p2 = (($signed(y_weight_2_2_2_i_i_i_fu_890_p2) > $signed(16'b0000000000000000)) ? 1'b1 : 1'b0);

assign tmp_21_fu_710_p4 = {{ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391[ap_const_lv32_B : ap_const_lv32_1]}};

assign tmp_21_i_i_i_i_fu_921_p2 = (ap_const_lv16_0 - y_weight_2_2_2_i_i_i_fu_890_p2);

assign tmp_22_fu_935_p1 = tmp_22_i_i_i_i_fu_927_p3[7:0];

assign tmp_22_i_i_i_i_fu_927_p3 = ((tmp_20_i_i_i_i_fu_915_p2[0:0] === 1'b1) ? y_weight_2_2_2_i_i_i_fu_890_p2 : tmp_21_i_i_i_i_fu_921_p2);

assign tmp_23_fu_939_p1 = tmp_19_i_i_i_i_fu_907_p3[7:0];

assign tmp_23_i_i_i_i_fu_947_p2 = (($signed(edge_weight_fu_943_p2) < $signed(16'b11111111)) ? 1'b1 : 1'b0);

assign tmp_25_i_i_i_i_fu_953_p2 = (tmp_23_reg_1480 + tmp_22_reg_1475);

assign tmp_26_i_i_i_i_fu_971_p1 = edge_val1_i_i_i_i_fu_963_p3;

assign tmp_27_i_i_i_i_fu_975_p2 = (($signed(tmp_26_i_i_i_i_fu_971_p1) > $signed(c_high_thresh_channe_1_reg_1155)) ? 1'b1 : 1'b0);

assign tmp_28_i_i_i_i_fu_980_p2 = (($signed(tmp_26_i_i_i_i_fu_971_p1) < $signed(c_low_thresh_channel_reg_1160)) ? 1'b1 : 1'b0);

assign tmp_2_fu_451_p1 = C_XR0C0_channel_dout[7:0];

assign tmp_30_i_i_i_i_fu_587_p2 = ((c_invert_channel_dout == ap_const_lv32_1) ? 1'b1 : 1'b0);

assign tmp_31_i_i_cast_i_fu_421_p1 = $signed(tmp_31_i_i_i_fu_415_p2);

assign tmp_31_i_i_i_fu_415_p2 = ($signed(ap_const_lv12_FFF) + $signed(rows_cast_i_i_cast_i_fu_411_p1));

assign tmp_32_i_i_cast_i_fu_435_p1 = $signed(tmp_32_i_i_i_fu_429_p2);

assign tmp_32_i_i_i_fu_429_p2 = ($signed(ap_const_lv12_FFF) + $signed(cols_cast_i_i_cast_i_fu_425_p1));

assign tmp_34_i_i_i_fu_608_p2 = ((row_i_i_i_reg_380 < rows_cast_i_i_cast_i_fu_411_p1) ? 1'b1 : 1'b0);

assign tmp_35_0_1_i_i_i_i_fu_854_p1 = buff_C_val_0_0_i_i_1_reg_1374;

assign tmp_35_0_2_i_i_i_i_fu_857_p1 = buff_C_val_0_1_i_i_1_reg_1379;

assign tmp_35_0_i_i_i_i_fu_767_p1 = buff_C_val_0_0_2_fu_760_p3;

assign tmp_35_1_1_i_i_i_i_fu_781_p1 = buff_C_val_1_0_i_i_s_fu_134;

assign tmp_35_1_2_i_i_i_i_fu_863_p1 = buff_C_val_1_1_i_i_1_reg_1384;

assign tmp_35_1_i_i_i_i_fu_860_p1 = buff_C_val_1_0_1_reg_1394;

assign tmp_35_2_1_i_i_i_i_fu_795_p1 = buff_C_val_2_0_i_i_s_fu_146;

assign tmp_35_2_i_i_i_i_fu_866_p1 = buff_C_val_2_0_1_reg_1389;

assign tmp_36_0_1_i_i_i_i_fu_527_p1 = $signed(tmp_3_fu_455_p1);

assign tmp_36_0_2_i_i_i_i_fu_535_p1 = $signed(tmp_4_fu_459_p1);

assign tmp_36_0_i_i_i_i_fu_519_p1 = $signed(tmp_2_fu_451_p1);

assign tmp_36_1_1_i_i_i_i_fu_551_p1 = $signed(tmp_6_fu_467_p1);

assign tmp_36_1_2_i_i_i_i_fu_559_p1 = $signed(tmp_7_fu_471_p1);

assign tmp_36_1_i_i_i_i_fu_543_p1 = $signed(tmp_5_fu_463_p1);

assign tmp_36_2_1_i_i_i_i_fu_575_p1 = $signed(tmp_9_fu_479_p1);

assign tmp_36_2_2_i_i_i_i_fu_583_p1 = $signed(tmp_10_fu_483_p1);

assign tmp_36_2_i_i_i_i_fu_567_p1 = $signed(tmp_8_fu_475_p1);

assign tmp_36_i_i_i_fu_629_p2 = ((row_i_i_i_reg_380 != ap_const_lv12_0) ? 1'b1 : 1'b0);

assign tmp_37_0_i_i_i_i_fu_771_p0 = tmp_36_0_i_i_i_i_reg_1195;

assign tmp_37_0_i_i_i_i_fu_771_p1 = tmp_35_0_i_i_i_i_fu_767_p1;

assign tmp_37_0_i_i_i_i_fu_771_p2 = ($signed(tmp_37_0_i_i_i_i_fu_771_p0) * $signed({{1'b0}, {tmp_37_0_i_i_i_i_fu_771_p1}}));

assign tmp_37_1_1_i_i_i_i_fu_785_p0 = tmp_36_1_1_i_i_i_i_reg_1235;

assign tmp_37_1_1_i_i_i_i_fu_785_p1 = tmp_35_1_1_i_i_i_i_fu_781_p1;

assign tmp_37_1_1_i_i_i_i_fu_785_p2 = ($signed(tmp_37_1_1_i_i_i_i_fu_785_p0) * $signed({{1'b0}, {tmp_37_1_1_i_i_i_i_fu_785_p1}}));

assign tmp_37_2_1_i_i_i_i_fu_799_p0 = tmp_36_2_1_i_i_i_i_reg_1265;

assign tmp_37_2_1_i_i_i_i_fu_799_p1 = tmp_35_2_1_i_i_i_i_fu_795_p1;

assign tmp_37_2_1_i_i_i_i_fu_799_p2 = ($signed(tmp_37_2_1_i_i_i_i_fu_799_p0) * $signed({{1'b0}, {tmp_37_2_1_i_i_i_i_fu_799_p1}}));

assign tmp_37_2_2_i_i_i_i_fu_813_p0 = tmp_36_2_2_i_i_i_i_reg_1275;

assign tmp_37_2_2_i_i_i_i_fu_813_p1 = tmp_37_2_2_i_i_i_i_fu_813_p10;

assign tmp_37_2_2_i_i_i_i_fu_813_p10 = buff_C_val_2_1_i_i_s_fu_142;

assign tmp_37_2_2_i_i_i_i_fu_813_p2 = ($signed(tmp_37_2_2_i_i_i_i_fu_813_p0) * $signed({{1'b0}, {tmp_37_2_2_i_i_i_i_fu_813_p1}}));

assign tmp_37_i_i_i_fu_635_p2 = (($signed(row_cast_cast_i_i_i_fu_593_p1) > $signed(tmp_31_i_i_cast_i_fu_421_p1)) ? 1'b1 : 1'b0);

assign tmp_38_0_1_i_i_i_i_fu_531_p1 = $signed(tmp_12_fu_491_p1);

assign tmp_38_0_2_i_i_i_i_fu_539_p1 = $signed(tmp_13_fu_495_p1);

assign tmp_38_0_i_i_i_i_fu_523_p1 = $signed(tmp_11_fu_487_p1);

assign tmp_38_1_1_i_i_i_i_fu_555_p1 = $signed(tmp_15_fu_503_p1);

assign tmp_38_1_2_i_i_i_i_fu_563_p1 = $signed(tmp_16_fu_507_p1);

assign tmp_38_1_i_i_i_i_fu_547_p1 = $signed(tmp_14_fu_499_p1);

assign tmp_38_2_1_i_i_i_i_fu_579_p1 = $signed(tmp_18_fu_515_p1);

assign tmp_38_2_i_i_i_i_fu_571_p1 = $signed(tmp_17_fu_511_p1);

assign tmp_39_0_i_i_i_i_fu_776_p0 = tmp_38_0_i_i_i_i_reg_1200;

assign tmp_39_0_i_i_i_i_fu_776_p1 = tmp_35_0_i_i_i_i_fu_767_p1;

assign tmp_39_0_i_i_i_i_fu_776_p2 = ($signed(tmp_39_0_i_i_i_i_fu_776_p0) * $signed({{1'b0}, {tmp_39_0_i_i_i_i_fu_776_p1}}));

assign tmp_39_1_1_i_i_i_i_fu_790_p0 = tmp_38_1_1_i_i_i_i_reg_1240;

assign tmp_39_1_1_i_i_i_i_fu_790_p1 = tmp_35_1_1_i_i_i_i_fu_781_p1;

assign tmp_39_1_1_i_i_i_i_fu_790_p2 = ($signed(tmp_39_1_1_i_i_i_i_fu_790_p0) * $signed({{1'b0}, {tmp_39_1_1_i_i_i_i_fu_790_p1}}));

assign tmp_39_2_1_i_i_i_i_fu_804_p0 = tmp_38_2_1_i_i_i_i_reg_1270;

assign tmp_39_2_1_i_i_i_i_fu_804_p1 = tmp_35_2_1_i_i_i_i_fu_795_p1;

assign tmp_39_2_1_i_i_i_i_fu_804_p2 = ($signed(tmp_39_2_1_i_i_i_i_fu_804_p0) * $signed({{1'b0}, {tmp_39_2_1_i_i_i_i_fu_804_p1}}));

assign tmp_39_i_i_i_fu_655_p2 = ((col_assign_i_phi_fu_395_p4 < cols_cast_i_i_cast_i_fu_425_p1) ? 1'b1 : 1'b0);

assign tmp_3_fu_455_p1 = C_XR0C1_channel_dout[7:0];

assign tmp_3_i_fu_439_p2 = (ap_const_lv12_1 + cols_cast_i_i_cast_i_fu_425_p1);

assign tmp_40_i_i_i_fu_660_p1 = col_assign_i_phi_fu_395_p4;

assign tmp_42_i_i_i_fu_692_p1 = ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391;

assign tmp_43_i_i_i_fu_705_p1 = ap_pipeline_reg_pp0_iter1_col_assign_i_reg_391;

assign tmp_45_i_i_i_fu_671_p2 = (($signed(col_assign_cast_cast_fu_640_p1) > $signed(tmp_32_i_i_cast_i_fu_435_p1)) ? 1'b1 : 1'b0);

assign tmp_46_i_i_i_fu_676_p2 = ((col_assign_i_phi_fu_395_p4 != ap_const_lv12_0) ? 1'b1 : 1'b0);

assign tmp_4_fu_459_p1 = C_XR0C2_channel_dout[7:0];

assign tmp_5_fu_463_p1 = C_XR1C0_channel_dout[7:0];

assign tmp_6_fu_467_p1 = C_XR1C1_channel_dout[7:0];

assign tmp_6_i_fu_445_p2 = (ap_const_lv12_1 + rows_cast_i_i_cast_i_fu_411_p1);

assign tmp_7_fu_471_p1 = C_XR1C2_channel_dout[7:0];

assign tmp_8_fu_475_p1 = C_XR2C0_channel_dout[7:0];

assign tmp_9_fu_479_p1 = C_XR2C1_channel_dout[7:0];

assign tmp_fu_403_p1 = rows[10:0];

assign tmp_i_10_fu_1006_p2 = (tmp_27_i_i_i_i_reg_1490 | tmp_28_i_i_i_i_reg_1496);

assign tmp_i_fu_985_p2 = (icmp_reg_1299 | ap_pipeline_reg_pp0_iter6_icmp6_reg_1369);

assign x_weight_2_2_2_i_i_i_fu_881_p2 = (tmp4_i_reg_1435 + tmp8_i_fu_877_p2);

assign y_weight_2_2_2_i_i_i_fu_890_p2 = (tmp11_i_reg_1450 + tmp15_i_fu_886_p2);

always @ (posedge ap_clk) begin
    tmp_40_i_i_i_reg_1330[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //sobel_filter_core
