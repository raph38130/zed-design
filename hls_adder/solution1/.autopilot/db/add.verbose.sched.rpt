

================================================================
== Vivado HLS Report for 'add'
================================================================
* Date:           Wed Dec 14 22:10:01 2016

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        hls_adder
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.52|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    7|    7|    8|    8|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 8
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
* FSM state operations: 

 <State 1>: 7.08ns
ST_1: b_read (11)  [1/1] 1.00ns
:6  %b_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %b) nounwind

ST_1: a_read (12)  [1/1] 1.00ns
:7  %a_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %a) nounwind

ST_1: sext1_cast (17)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9
:12  %sext1_cast = sext i32 %a_read to i65

ST_1: mul2 (18)  [6/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:13  %mul2 = mul i65 %sext1_cast, 4908534053

ST_1: tmp_7 (20)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9
:15  %tmp_7 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_read, i32 31)

ST_1: mul (28)  [6/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:23  %mul = mul i65 %sext1_cast, 6247225158


 <State 2>: 6.08ns
ST_2: c (16)  [6/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:11  %c = mul nsw i32 %b_read, %a_read

ST_2: mul2 (18)  [5/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:13  %mul2 = mul i65 %sext1_cast, 4908534053

ST_2: mul (28)  [5/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:23  %mul = mul i65 %sext1_cast, 6247225158


 <State 3>: 6.08ns
ST_3: c (16)  [5/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:11  %c = mul nsw i32 %b_read, %a_read

ST_3: mul2 (18)  [4/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:13  %mul2 = mul i65 %sext1_cast, 4908534053

ST_3: mul (28)  [4/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:23  %mul = mul i65 %sext1_cast, 6247225158


 <State 4>: 6.08ns
ST_4: c (16)  [4/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:11  %c = mul nsw i32 %b_read, %a_read

ST_4: mul2 (18)  [3/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:13  %mul2 = mul i65 %sext1_cast, 4908534053

ST_4: mul (28)  [3/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:23  %mul = mul i65 %sext1_cast, 6247225158


 <State 5>: 6.08ns
ST_5: c (16)  [3/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:11  %c = mul nsw i32 %b_read, %a_read

ST_5: mul2 (18)  [2/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:13  %mul2 = mul i65 %sext1_cast, 4908534053

ST_5: mul (28)  [2/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:23  %mul = mul i65 %sext1_cast, 6247225158


 <State 6>: 6.08ns
ST_6: c (16)  [2/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:11  %c = mul nsw i32 %b_read, %a_read

ST_6: mul2 (18)  [1/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:13  %mul2 = mul i65 %sext1_cast, 4908534053

ST_6: tmp_9 (23)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9
:18  %tmp_9 = call i30 @_ssdm_op_PartSelect.i30.i65.i32.i32(i65 %mul2, i32 35, i32 64)

ST_6: mul (28)  [1/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:23  %mul = mul i65 %sext1_cast, 6247225158

ST_6: tmp_11 (32)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9
:27  %tmp_11 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %mul, i32 36, i32 64)


 <State 7>: 8.52ns
ST_7: c (16)  [1/6] 6.08ns  loc: hls_adder/solution1/top.cpp:9
:11  %c = mul nsw i32 %b_read, %a_read

ST_7: neg_mul3 (19)  [1/1] 3.52ns  loc: hls_adder/solution1/top.cpp:9
:14  %neg_mul3 = sub i65 0, %mul2

ST_7: tmp_8 (21)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9 (grouped into LUT with out node neg_ti8)
:16  %tmp_8 = call i30 @_ssdm_op_PartSelect.i30.i65.i32.i32(i65 %neg_mul3, i32 35, i32 64)

ST_7: tmp (22)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9 (grouped into LUT with out node neg_ti8)
:17  %tmp = sext i30 %tmp_8 to i32

ST_7: tmp_1 (24)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9
:19  %tmp_1 = sext i30 %tmp_9 to i32

ST_7: tmp_3 (25)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9 (grouped into LUT with out node neg_ti8)
:20  %tmp_3 = select i1 %tmp_7, i32 %tmp, i32 %tmp_1

ST_7: neg_ti8 (26)  [1/1] 2.44ns  loc: hls_adder/solution1/top.cpp:9 (out node of the LUT)
:21  %neg_ti8 = sub i32 0, %tmp_3

ST_7: d (27)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9 (grouped into LUT with out node tmp2)
:22  %d = select i1 %tmp_7, i32 %neg_ti8, i32 %tmp_1

ST_7: neg_mul (29)  [1/1] 3.52ns  loc: hls_adder/solution1/top.cpp:9
:24  %neg_mul = sub i65 0, %mul

ST_7: tmp_10 (30)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9 (grouped into LUT with out node neg_ti)
:25  %tmp_10 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %neg_mul, i32 36, i32 64)

ST_7: tmp_4 (31)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9 (grouped into LUT with out node neg_ti)
:26  %tmp_4 = sext i29 %tmp_10 to i32

ST_7: tmp_5 (33)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9
:28  %tmp_5 = sext i29 %tmp_11 to i32

ST_7: tmp_6 (34)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:9 (grouped into LUT with out node neg_ti)
:29  %tmp_6 = select i1 %tmp_7, i32 %tmp_4, i32 %tmp_5

ST_7: neg_ti (35)  [1/1] 2.44ns  loc: hls_adder/solution1/top.cpp:9 (out node of the LUT)
:30  %neg_ti = sub i32 0, %tmp_6

ST_7: e (36)  [1/1] 1.37ns  loc: hls_adder/solution1/top.cpp:9
:31  %e = select i1 %tmp_7, i32 %neg_ti, i32 %tmp_5

ST_7: StgValue_47 (37)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:10
:32  call void @_ssdm_op_Write.ap_auto.i32P(i32* %n, i32 %c) nounwind

ST_7: StgValue_48 (38)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:11
:33  call void @_ssdm_op_Write.ap_auto.i32P(i32* %p, i32 %e) nounwind

ST_7: tmp2 (40)  [1/1] 2.44ns  loc: hls_adder/solution1/top.cpp:12 (out node of the LUT)
:35  %tmp2 = add i32 %c, %d


 <State 8>: 3.94ns
ST_8: StgValue_50 (5)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32 %a) nounwind, !map !7

ST_8: StgValue_51 (6)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 %b) nounwind, !map !13

ST_8: StgValue_52 (7)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32* %n) nounwind, !map !17

ST_8: StgValue_53 (8)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32* %p) nounwind, !map !23

ST_8: StgValue_54 (9)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !27

ST_8: StgValue_55 (10)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @add_str) nounwind

ST_8: StgValue_56 (13)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:3
:8  call void (...)* @_ssdm_op_SpecInterface(i32 %b, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_8: StgValue_57 (14)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:4
:9  call void (...)* @_ssdm_op_SpecInterface(i32 %a, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_8: StgValue_58 (15)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:5
:10  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_8: tmp1 (39)  [1/1] 1.97ns  loc: hls_adder/solution1/top.cpp:12
:34  %tmp1 = add i32 %b_read, %a_read

ST_8: tmp_2 (41)  [1/1] 1.97ns  loc: hls_adder/solution1/top.cpp:12
:36  %tmp_2 = add i32 %tmp2, %tmp1

ST_8: StgValue_61 (42)  [1/1] 0.00ns  loc: hls_adder/solution1/top.cpp:12
:37  ret i32 %tmp_2



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 7.08ns
The critical path consists of the following:
	s_axi read on port 'a' [12]  (1 ns)
	'mul' operation ('mul2', hls_adder/solution1/top.cpp:9) [18]  (6.08 ns)

 <State 2>: 6.08ns
The critical path consists of the following:
	'mul' operation ('c', hls_adder/solution1/top.cpp:9) [16]  (6.08 ns)

 <State 3>: 6.08ns
The critical path consists of the following:
	'mul' operation ('c', hls_adder/solution1/top.cpp:9) [16]  (6.08 ns)

 <State 4>: 6.08ns
The critical path consists of the following:
	'mul' operation ('c', hls_adder/solution1/top.cpp:9) [16]  (6.08 ns)

 <State 5>: 6.08ns
The critical path consists of the following:
	'mul' operation ('c', hls_adder/solution1/top.cpp:9) [16]  (6.08 ns)

 <State 6>: 6.08ns
The critical path consists of the following:
	'mul' operation ('c', hls_adder/solution1/top.cpp:9) [16]  (6.08 ns)

 <State 7>: 8.52ns
The critical path consists of the following:
	'mul' operation ('c', hls_adder/solution1/top.cpp:9) [16]  (6.08 ns)
	'add' operation ('tmp2', hls_adder/solution1/top.cpp:12) [40]  (2.44 ns)

 <State 8>: 3.94ns
The critical path consists of the following:
	'add' operation ('tmp1', hls_adder/solution1/top.cpp:12) [39]  (1.97 ns)
	'add' operation ('tmp_2', hls_adder/solution1/top.cpp:12) [41]  (1.97 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
